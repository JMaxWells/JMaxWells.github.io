<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>分享一些我的喜欢的文章</title>
  <subtitle>一个喜爱外设的程序猿</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-03-10T07:09:28.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>MaxWellPro</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用CocoaPods做依赖管理</title>
    <link href="http://yoursite.com/2016/03/10/%E4%BD%BF%E7%94%A8CocoaPods%E5%81%9A%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2016/03/10/使用CocoaPods做依赖管理/</id>
    <published>2016-03-10T06:57:04.000Z</published>
    <updated>2016-03-10T07:09:28.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;使用CocoaPods做依赖管理&quot;&gt;&lt;a href=&quot;#使用CocoaPods做依赖管理&quot; class=&quot;headerlink&quot; title=&quot;使用CocoaPods做依赖管理&quot;&gt;&lt;/a&gt;使用CocoaPods做依赖管理&lt;/h2&gt;&lt;p&gt;每种语言发展到一个阶段，就会出现相应的依赖管理工具。本章讲解iOS项目的依赖管理工具CocoaPods。&lt;/p&gt;
&lt;h2 id=&quot;CocoaPods简介&quot;&gt;&lt;a href=&quot;#CocoaPods简介&quot; class=&quot;headerlink&quot; title=&quot;CocoaPods简介&quot;&gt;&lt;/a&gt;CocoaPods简介&lt;/h2&gt;&lt;p&gt;每种语言发展到一个阶段，就会出现相应的依赖管理工具，例如Java语言的Maven，nodejs的npm。随着iOS开发者的增多，业界也出现了为iOS程序提供依赖管理的工具，它的名字叫做：CocoaPods。&lt;/p&gt;
&lt;p&gt;CocoaPods项目的源码在Github上管理。该项目开始于2011年8月，经过多年发展，现在已经成为iOS开发事实上的依赖管理标准工具。开发iOS项目不可避免地要使用第三方开源库，CocoaPods的出现使得我们可以节省设置和更新第三方开源库的时间。&lt;/p&gt;
&lt;p&gt;在我开发猿题库客户端时，使用了24个第三方开源库。在没有使用CocoaPods以前，我需要:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;把这些第三方开源库的源代码文件复制到项目中，或者设置成git的submodule。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于这些开源库通常需要依赖系统的一些framework，我需要手工地将这些framework一一增加到项目依赖中，比如通常情况下，一个网络库就需要增加以下framework: CFNetwork, SystemConfiguration, MobileCoreServices, CoreGraphics, zlib。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于某些开源库，我还需要设置-licucore或者 -fno-objc-arc等编译参数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;管理这些依赖包的更新。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些体力活虽然简单，但毫无技术含量并且浪费时间。在使用CocoaPods之后，我只需要将用到的第三方开源库放到一个名为Podfile的文件中，然后执行pod install。CocoaPods就会自动将这些第三方开源库的源码下载下来，并且为我的工程设置好相应的系统依赖和编译参数。&lt;/p&gt;
&lt;h2 id=&quot;CocoaPods的安装和使用&quot;&gt;&lt;a href=&quot;#CocoaPods的安装和使用&quot; class=&quot;headerlink&quot; title=&quot;CocoaPods的安装和使用&quot;&gt;&lt;/a&gt;CocoaPods的安装和使用&lt;/h2&gt;&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;安装方式异常简单, Mac下都自带ruby，使用ruby的gem命令即可下载安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo gem install cocoapods

$ pod setup
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你的gem太老，可以尝试用如下命令升级gem:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo gem update --system
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;另外，ruby的软件源rubygems.org因为使用的亚马逊的云服务，所以被墙了，需要更新一下ruby的源，如下代码将官方的ruby源替换成国内淘宝的源：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem sources --remove https://rubygems.org/

gem sources -a http://ruby.taobao.org/

gem sources -l
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;还有一点需要注意，pod setup在执行时，会输出Setting up CocoaPods master repo，但是会等待比较久的时间。这步其实是Cocoapods在将它的信息下载到 ~/.cocoapods目录下，如果你等太久，可以试着cd到那个目录，用du -sh *来查看下载进度。你也可以参考本文接下来的使用cocoapods的镜像索引一节的内容来提高下载速度。&lt;/p&gt;
&lt;h3 id=&quot;使用CocoaPods的镜像索引&quot;&gt;&lt;a href=&quot;#使用CocoaPods的镜像索引&quot; class=&quot;headerlink&quot; title=&quot;使用CocoaPods的镜像索引&quot;&gt;&lt;/a&gt;使用CocoaPods的镜像索引&lt;/h3&gt;&lt;p&gt;所有的项目的Podspec文件都托管在&lt;a href=&quot;https://github.com/CocoaPods/Specs。第一次执行pod&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/CocoaPods/Specs。第一次执行pod&lt;/a&gt; setup时，CocoaPods会将这些podspec索引文件更新到本地的 ~/.cocoapods/目录下，这个索引文件比较大，有80M左右。所以第一次更新时非常慢，笔者就更新了将近1个小时才完成。&lt;/p&gt;
&lt;p&gt;一个叫akinliu的朋友在gitcafe和oschina上建立了CocoaPods索引库的镜像，因为gitcafe和oschina都是国内的服务器，所以在执行索引更新操作时，会快很多。如下操作可以将CocoaPods设置成使用gitcafe镜像：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod repo remove master

pod repo add master https://gitcafe.com/akuandev/Specs.git

pod repo update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将以上代码中的 &lt;a href=&quot;https://gitcafe.com/akuandev/Specs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gitcafe.com/akuandev/Specs.git&lt;/a&gt; 替换成 &lt;a href=&quot;http://git.oschina.net/akuandev/Specs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://git.oschina.net/akuandev/Specs.git&lt;/a&gt; 即可使用oschina上的镜像。&lt;/p&gt;
&lt;h3 id=&quot;使用CocoaPods&quot;&gt;&lt;a href=&quot;#使用CocoaPods&quot; class=&quot;headerlink&quot; title=&quot;使用CocoaPods&quot;&gt;&lt;/a&gt;使用CocoaPods&lt;/h3&gt;&lt;p&gt;使用时需要新建一个名为Podfile的文件，以如下格式，将依赖的库名字依次列在文件中即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;platform :ios
pod &amp;apos;JSONKit&amp;apos;,      &amp;apos;~&amp;gt; 1.4&amp;apos;
pod &amp;apos;Reachability&amp;apos;,  &amp;apos;~&amp;gt; 3.0.0&amp;apos;
pod &amp;apos;ASIHTTPRequest&amp;apos;
pod &amp;apos;RegexKitLite&amp;apos;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后你将编辑好的Podfile文件放到你的项目根目录中，执行如下命令即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd &amp;quot;your project home&amp;quot;pod install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在，你的所有第三方库都已经下载完成并且设置好了编译参数和依赖，你只需要记住如下2点即可：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用CocoaPods生成的 .xcworkspace 文件来打开工程，而不是以前的 .xcodeproj 文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每次更改了Podfile文件，你需要重新执行一次pod update命令。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;查找第三方库&quot;&gt;&lt;a href=&quot;#查找第三方库&quot; class=&quot;headerlink&quot; title=&quot;查找第三方库&quot;&gt;&lt;/a&gt;查找第三方库&lt;/h3&gt;&lt;p&gt;你如果不知道cocoaPods管理的库中，是否有你想要的库，那么你可以通过pod search命令进行查找，以下是我用pod search json查找到的所有可用的库：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pod search json

-&amp;gt; AnyJSON (0.0.1)
  Encode / Decode JSON by any means possible.
  - Homepage: https://github.com/mattt/AnyJSON
  - Source:  https://github.com/mattt/AnyJSON.git
  - Versions: 0.0.1 [master repo]

-&amp;gt; JSONKit (1.5pre)
  A Very High Performance Objective-C JSON Library.
  - Homepage: https://github.com/johnezang/JSONKit
  - Source:  git://github.com/johnezang/JSONKit.git
  - Versions: 1.5pre, 1.4 [master repo]

// ...以下省略若干行
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;h3 id=&quot;关于-gitignore&quot;&gt;&lt;a href=&quot;#关于-gitignore&quot; class=&quot;headerlink&quot; title=&quot;关于.gitignore&quot;&gt;&lt;/a&gt;关于.gitignore&lt;/h3&gt;&lt;p&gt;当你执行pod install之后，除了Podfile外，CocoaPods还会生成一个名为Podfile.lock的文件，你不应该把这个文件加入到.gitignore中。因为Podfile.lock会锁定当前各依赖库的版本，之后如果多次执行pod install 不会更改版本，要pod update才会改Podfile.lock了。这样多人协作的时候，可以防止第三方库升级时造成大家各自的第三方库版本不一致。&lt;/p&gt;
&lt;p&gt;CocoaPods的这篇官方文档也在What is a Podfile.lock一节中介绍了Podfile.lock的作用，并且指出：&lt;/p&gt;
&lt;p&gt;This file should always be kept under version control.&lt;/p&gt;
&lt;h3 id=&quot;为自己的项目创建podspec文件&quot;&gt;&lt;a href=&quot;#为自己的项目创建podspec文件&quot; class=&quot;headerlink&quot; title=&quot;为自己的项目创建podspec文件&quot;&gt;&lt;/a&gt;为自己的项目创建podspec文件&lt;/h3&gt;&lt;p&gt;我们可以为自己的开源项目创建podspec文件，首先通过如下命令初始化一个podspec文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod spec create your_pod_spec_name
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;该命令执行之后，CocoaPods会生成一个名为your_pod_spec_name.podspec的文件，然后我们修改其中的相关内容即可。&lt;/p&gt;
&lt;p&gt;具体步骤可以参考这两篇博文中的相关内容：《如何编写一个CocoaPods的spec文件》 和《Cocoapods 入门》。&lt;/p&gt;
&lt;h3 id=&quot;使用私有的pods&quot;&gt;&lt;a href=&quot;#使用私有的pods&quot; class=&quot;headerlink&quot; title=&quot;使用私有的pods&quot;&gt;&lt;/a&gt;使用私有的pods&lt;/h3&gt;&lt;p&gt;我们可以直接指定某一个依赖的podspec，这样就可以使用公司内部的私有库。该方案有利于使企业内部的公共项目支持CocoaPods。如下是一个示例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod &amp;apos;MyCommon&amp;apos;, :podspec =&amp;gt; &amp;apos;https://yuantiku.com/common/myCommon.podspec&amp;apos;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;不更新podspec&quot;&gt;&lt;a href=&quot;#不更新podspec&quot; class=&quot;headerlink&quot; title=&quot;不更新podspec&quot;&gt;&lt;/a&gt;不更新podspec&lt;/h3&gt;&lt;p&gt;CocoaPods在执行pod install和pod update时，会默认先更新一次podspec索引。使用–no-repo-update参数可以禁止其做索引更新操作。如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod install --no-repo-update
pod update --no-repo-update
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;生成第三方库的帮助文档&quot;&gt;&lt;a href=&quot;#生成第三方库的帮助文档&quot; class=&quot;headerlink&quot; title=&quot;生成第三方库的帮助文档&quot;&gt;&lt;/a&gt;生成第三方库的帮助文档&lt;/h3&gt;&lt;p&gt;如果你想让CococaPods帮你生成第三方库的帮助文档，并集成到Xcode中，那么用brew安装appledoc即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install appledoc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;关于appledoc，在本书的“其它工具”一章有专门介绍。它最大的优点是可以将帮助文档集成到Xcode中，这样你在敲代码的时候，按住opt键单击类名或方法名，就可以显示出相应的帮助文档。&lt;/p&gt;
&lt;h3 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h3&gt;&lt;p&gt;CocoaPods的原理是将所有的依赖库都放到另一个名为Pods项目中，然后让主项目依赖Pods项目，这样，源码管理工作都从主项目移到了Pods项目中。发现的一些技术细节有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Pods项目最终会编译成一个名为libPods.a的文件，主项目只需要依赖这个.a文件即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于资源文件，CocoaPods提供了一个名为Pods-resources.sh的bash脚本，该脚本在每次项目编译的时候都会执行，将第三方库的各种资源文件复制到目标目录中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CocoaPods通过一个名为Pods.xcconfig的文件来在编译时设置所有的依赖和参数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用CocoaPods做依赖管理&quot;&gt;&lt;a href=&quot;#使用CocoaPods做依赖管理&quot; class=&quot;headerlink&quot; title=&quot;使用CocoaPods做依赖管理&quot;&gt;&lt;/a&gt;使用CocoaPods做依赖管理&lt;/h2&gt;&lt;p&gt;每种语言发展到一个阶段，就会
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2016/03/10/AppStore%E4%B8%8A%E7%BA%BF%E7%B4%A0%E6%9D%90%E5%87%86%E5%A4%87%E7%AF%87/"/>
    <id>http://yoursite.com/2016/03/10/AppStore上线素材准备篇/</id>
    <published>2016-03-10T06:50:50.000Z</published>
    <updated>2016-03-10T06:51:22.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;AppStore上线素材准备篇&quot;&gt;&lt;a href=&quot;#AppStore上线素材准备篇&quot; class=&quot;headerlink&quot; title=&quot;AppStore上线素材准备篇&quot;&gt;&lt;/a&gt;AppStore上线素材准备篇&lt;/h1&gt;&lt;h3 id=&quot;1-app名称与版本号&quot;&gt;&lt;a href=&quot;#1-app名称与版本号&quot; class=&quot;headerlink&quot; title=&quot;1.app名称与版本号&quot;&gt;&lt;/a&gt;1.app名称与版本号&lt;/h3&gt;&lt;p&gt;您要填入的 App 版本号。编号应遵循软件版本规范。&lt;/p&gt;
&lt;h3 id=&quot;2-公司网址&quot;&gt;&lt;a href=&quot;#2-公司网址&quot; class=&quot;headerlink&quot; title=&quot;2.公司网址&quot;&gt;&lt;/a&gt;2.公司网址&lt;/h3&gt;&lt;p&gt;技术支持网址(URL)；营销网址(URL) ,可以共用一个网址。&lt;/p&gt;
&lt;h3 id=&quot;3-app所属类别&quot;&gt;&lt;a href=&quot;#3-app所属类别&quot; class=&quot;headerlink&quot; title=&quot;3.app所属类别&quot;&gt;&lt;/a&gt;3.app所属类别&lt;/h3&gt;&lt;p&gt;最能准确描述此 App 的类别。有关更多信息，请参阅 App Store 类别定义。[链接] (&lt;a href=&quot;https://itunesconnect.apple.com/itc/static/category_definitions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://itunesconnect.apple.com/itc/static/category_definitions&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;4-演示帐户&quot;&gt;&lt;a href=&quot;#4-演示帐户&quot; class=&quot;headerlink&quot; title=&quot;4.演示帐户&quot;&gt;&lt;/a&gt;4.演示帐户&lt;/h3&gt;&lt;p&gt;正式环境的测试账号与密码。&lt;/p&gt;
&lt;h3 id=&quot;5-联系信息包括：电话，邮箱，公司地址&quot;&gt;&lt;a href=&quot;#5-联系信息包括：电话，邮箱，公司地址&quot; class=&quot;headerlink&quot; title=&quot;5.联系信息包括：电话，邮箱，公司地址&quot;&gt;&lt;/a&gt;5.联系信息包括：电话，邮箱，公司地址&lt;/h3&gt;&lt;p&gt;当 App 审核团队有任何问题或需要额外信息时, 您所在机构的联系人信息。&lt;/p&gt;
&lt;h3 id=&quot;6-版权-公司名称&quot;&gt;&lt;a href=&quot;#6-版权-公司名称&quot; class=&quot;headerlink&quot; title=&quot;6.版权-公司名称&quot;&gt;&lt;/a&gt;6.版权-公司名称&lt;/h3&gt;&lt;p&gt;拥有您的 App 专有权的人员或实体的名称，前面是获得权利的年份（例如“2008 Acme Inc”）。请勿提供网址(URL)。&lt;/p&gt;
&lt;h3 id=&quot;7-app描述&quot;&gt;&lt;a href=&quot;#7-app描述&quot; class=&quot;headerlink&quot; title=&quot;7.app描述&quot;&gt;&lt;/a&gt;7.app描述&lt;/h3&gt;&lt;p&gt;对您 App 的描述，用以详细说明特性和功能。&lt;/p&gt;
&lt;h3 id=&quot;8-app截图-4（共20张）&quot;&gt;&lt;a href=&quot;#8-app截图-4（共20张）&quot; class=&quot;headerlink&quot; title=&quot;8.app截图*4（共20张）&quot;&gt;&lt;/a&gt;8.app截图*4（共20张）&lt;/h3&gt;&lt;p&gt;屏幕快照必须为 JPG 或 PNG 格式，且必须采用 RGB 颜色空间。 App 视频预览必须为 M4V、MP4 或 MOV 格式，且不能超过 500 MB。 [iPhone 4&amp;amp;4s(640X960), iPhone 5&amp;amp;5c&amp;amp;5s(640X1136), iPhone 6&amp;amp;6s(750X1334), iPhone 6P&amp;amp;6sP(1242X2208)]  [参考链接] (&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Appendices/Properties.html#//apple_ref/doc/uid/TP40011225-CH26-SW2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Appendices/Properties.html#//apple_ref/doc/uid/TP40011225-CH26-SW2&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&quot;9-关键词&quot;&gt;&lt;a href=&quot;#9-关键词&quot; class=&quot;headerlink&quot; title=&quot;9.关键词&quot;&gt;&lt;/a&gt;9.关键词&lt;/h3&gt;&lt;p&gt;一个或多个关键词，用以描述您的 App。关键词将使 App Store 搜索结果更加准确。关键词之间用英文逗点分隔。&lt;/p&gt;
&lt;h3 id=&quot;10-app图标（1024X1024）&quot;&gt;&lt;a href=&quot;#10-app图标（1024X1024）&quot; class=&quot;headerlink&quot; title=&quot;10.app图标（1024X1024）&quot;&gt;&lt;/a&gt;10.app图标（1024X1024）&lt;/h3&gt;&lt;p&gt;此图标将用于 App Store，其格式必须为 JPG 或 PNG，最低分辨率至少为 72 DPI，并采用 RGB 色彩空间。它不能包含图层或圆角。&lt;/p&gt;
&lt;h3 id=&quot;11-用户服务协议、隐私政策。&quot;&gt;&lt;a href=&quot;#11-用户服务协议、隐私政策。&quot; class=&quot;headerlink&quot; title=&quot;11.用户服务协议、隐私政策。&quot;&gt;&lt;/a&gt;11.用户服务协议、隐私政策。&lt;/h3&gt;&lt;p&gt;必不可少的协议，没有就会被拒。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;AppStore上线素材准备篇&quot;&gt;&lt;a href=&quot;#AppStore上线素材准备篇&quot; class=&quot;headerlink&quot; title=&quot;AppStore上线素材准备篇&quot;&gt;&lt;/a&gt;AppStore上线素材准备篇&lt;/h1&gt;&lt;h3 id=&quot;1-app名称与版本号&quot;&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
