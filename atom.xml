<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MaxWellPro&#39;s Hexo Blog</title>
  <subtitle>分享一些技术文章和自己所整理的知识。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-04-06T10:27:54.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>MaxWellPro</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS面试题（备份）</title>
    <link href="http://yoursite.com/2016/04/06/iOS%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E5%A4%87%E4%BB%BD%EF%BC%89/"/>
    <id>http://yoursite.com/2016/04/06/iOS面试题（备份）/</id>
    <published>2016-04-06T10:26:26.000Z</published>
    <updated>2016-04-06T10:27:54.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;iOS面试题（备份）&quot;&gt;&lt;a href=&quot;#iOS面试题（备份）&quot; class=&quot;headerlink&quot; title=&quot;iOS面试题（备份）&quot;&gt;&lt;/a&gt;iOS面试题（备份）&lt;/h1&gt;&lt;p&gt;1.运行一下代码，控制台会输出什么？&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@implementation ViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewDidLoad &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self methodExchange];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self method1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self method2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)method1 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;method1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)method2 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NSLog(@&amp;quot;method2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)methodExchange &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Method method1 = class_getInstanceMethod([self class], @selector(method1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Method method2 = class_getInstanceMethod([self class], @selector(method2));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    method_exchangeImplementations(method1, method2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.对methodExchange方法中的代码有没有改进意见？如果有，请说明原因。&lt;/p&gt;
&lt;p&gt;3.如何給NSArray添加一个属性（不能使用继承）。&lt;/p&gt;
&lt;p&gt;4.写出iOS9相对于iOS8增加了哪些新特性（5个以上）？&lt;/p&gt;
&lt;p&gt;5.以下这段代码的作用是？&lt;/p&gt;
&lt;p&gt;dispatch_apply(5, globalQ, ^(size_t index) {&lt;br&gt;    // dosometing&lt;br&gt;});&lt;/p&gt;
&lt;p&gt;6.写出以下控件的高度（默认情况下）&lt;br&gt;Navigation Bar:&lt;br&gt;Status Bar:&lt;br&gt;Toolbar:&lt;br&gt;Keyboards:&lt;br&gt;Switch:&lt;/p&gt;
&lt;p&gt;7.&lt;br&gt;1、在一条街上，有5座房子，喷了5种颜色。&lt;br&gt;2、每个房里住着不同国籍的人&lt;br&gt;3、每个人喝不同的饮料，抽不同品牌的香烟，养不同的宠物&lt;/p&gt;
&lt;p&gt;问题是：谁养鱼？&lt;/p&gt;
&lt;p&gt;提示：&lt;br&gt;1、英国人住红色房子&lt;br&gt;2、瑞典人养狗&lt;br&gt;3、丹麦人喝茶&lt;br&gt;4、绿色房子在白色房子左面&lt;br&gt;5、绿色房子主人喝咖啡&lt;br&gt;6、抽Pall Mall 香烟的人养鸟&lt;br&gt;7、黄色房子主人抽Dunhill香烟&lt;br&gt;8、住在中间房子的人喝牛奶&lt;br&gt;9、 挪威人住第一间房&lt;br&gt;10、抽Blends香烟的人住在养猫的人隔壁&lt;br&gt;11、养马的人住抽Dunhill 香烟的人隔壁&lt;br&gt;12、抽Blue Master的人喝啤酒&lt;br&gt;13、德国人抽Prince香烟&lt;br&gt;14、挪威人住蓝色房子隔壁&lt;br&gt;15、抽Blends香烟的人有一个喝水的邻居&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;iOS面试题（备份）&quot;&gt;&lt;a href=&quot;#iOS面试题（备份）&quot; class=&quot;headerlink&quot; title=&quot;iOS面试题（备份）&quot;&gt;&lt;/a&gt;iOS面试题（备份）&lt;/h1&gt;&lt;p&gt;1.运行一下代码，控制台会输出什么？&lt;/p&gt;
&lt;figure class=&quot;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>runtime之method_exchangeImplementations交换IMP指针</title>
    <link href="http://yoursite.com/2016/04/05/runtime%E4%B9%8Bmethod_exchangeImplementations%E4%BA%A4%E6%8D%A2IMP%E6%8C%87%E9%92%88/"/>
    <id>http://yoursite.com/2016/04/05/runtime之method_exchangeImplementations交换IMP指针/</id>
    <published>2016-04-05T07:00:28.000Z</published>
    <updated>2016-04-05T07:08:12.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;runtime之method-exchangeImplementations交换IMP指针&quot;&gt;&lt;a href=&quot;#runtime之method-exchangeImplementations交换IMP指针&quot; class=&quot;headerlink&quot; title=&quot;runtime之method_exchangeImplementations交换IMP指针&quot;&gt;&lt;/a&gt;runtime之method_exchangeImplementations交换IMP指针&lt;/h1&gt;&lt;p&gt;method_exchangeImplementations作用：method_exchangeImplementations可以交换两个方法的具体实现，先举个例子，再解释。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@implementation ViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewDidLoad &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self methodExchange];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self method1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self method2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)method1 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;method1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)method2 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      NSLog(@&amp;quot;method2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)methodExchange &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Method method1 = class_getInstanceMethod([self class], @selector(method1));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Method method2 = class_getInstanceMethod([self class], @selector(method2));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //交换method1和么thod的IMP指针，(IMP代表了方法的具体的实现）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    method_exchangeImplementations(method1, method2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[self method1]输出method2，[self method2]输出method1。&lt;/p&gt;
&lt;p&gt;原理如下：&lt;/p&gt;
&lt;p&gt;@selector(method1) ——-&amp;gt;IMP1(函数指针，具体实现输出么method1)&lt;/p&gt;
&lt;p&gt;@selector(method2) ——-&amp;gt;IMP1(函数指针，具体实现输出么method2)&lt;/p&gt;
&lt;p&gt;当执行method_exchangeImplementations(method1, method2)变成如下：&lt;/p&gt;
&lt;p&gt;@selector(method1) ——-&amp;gt;IMP2(函数指针，具体实现输出么method2)&lt;/p&gt;
&lt;p&gt;@selector(method2) ——-&amp;gt;IMP1(函数指针，具体实现输出么method1)&lt;/p&gt;
&lt;p&gt;所以，[self method1]输出method2，[self method2]输出method1。&lt;/p&gt;
&lt;p&gt;文／jiangamh（简书作者）&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;http://www.jianshu.com/p/99a4f5c6f59b&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/99a4f5c6f59b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;著作权归作者所有，转载请联系作者获得授权，并标注“简书作者”。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;runtime之method-exchangeImplementations交换IMP指针&quot;&gt;&lt;a href=&quot;#runtime之method-exchangeImplementations交换IMP指针&quot; class=&quot;headerlink&quot; title=&quot;ru
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="runtime" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/runtime/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="runtime" scheme="http://yoursite.com/tags/runtime/"/>
    
  </entry>
  
  <entry>
    <title>iOS 9 Design Guidelines for iPhone and iPad</title>
    <link href="http://yoursite.com/2016/03/29/iOS%209%20Design%20Guidelines%20for%20iPhone%20and%20iPad/"/>
    <id>http://yoursite.com/2016/03/29/iOS 9 Design Guidelines for iPhone and iPad/</id>
    <published>2016-03-29T03:18:37.000Z</published>
    <updated>2016-03-29T05:59:39.000Z</updated>
    
    <content type="html">&lt;p&gt;iOS has matured a lot over the years. In its 9th upgrade, Apple introduced a new system font called San Francisco, 3D Touch and multi-tasking on the iPad. In Xcode, you’ll find Stack Views, a fantastic tool for making your layouts more adaptive without the complexity of Auto Layout. More than ever, Apple encourages adaptive layouts so that your design works across multiple devices.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-StackViews.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Adaptive-Layout-and-Multitasking&quot;&gt;&lt;a href=&quot;#Adaptive-Layout-and-Multitasking&quot; class=&quot;headerlink&quot; title=&quot;Adaptive Layout and Multitasking&quot;&gt;&lt;/a&gt;Adaptive Layout and Multitasking&lt;/h2&gt;&lt;p&gt;With the increasing number of device resolutions to deal with, it is crucial to make your layout adaptive. Using tools like Sketch Constraints or Xcode, you have to design in a way that the screen size is flexible and can show extra menus if needed.&lt;br&gt;Here’s how the layout adapts from iPhone to iPad Pro. The user interface expands rather than scale up. For larger screens such as the iPad and the iPhone 6 Plus in landscape mode, a Left Navigation will appear instead of the Tab Bar. Download the Keynote file here.&lt;/p&gt;
&lt;iframe height=&quot;400&quot; width=&quot;640&quot; src=&quot;https://designcode.io/cloud/chapter1/Adaptive-Layout-iOS.mp4&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;How Fluid helps you adjust the design based on the Artboard size. Download the Sketch file.&lt;/p&gt;
&lt;iframe height=&quot;400&quot; width=&quot;640&quot; src=&quot;https://designcode.io/cloud/chapter1/Sketch-Constraints-Groups.mp4&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;San-Francisco-Font&quot;&gt;&lt;a href=&quot;#San-Francisco-Font&quot; class=&quot;headerlink&quot; title=&quot;San Francisco Font&quot;&gt;&lt;/a&gt;San Francisco Font&lt;/h2&gt;&lt;p&gt;With the release of iOS 9 and El Capitan, the default font is now the San Francisco font, which is made in-house by Apple. I encourage you to watch the video to understand how it affects the design for iOS.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Typography.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;SF-Font-Tracking&quot;&gt;&lt;a href=&quot;#SF-Font-Tracking&quot; class=&quot;headerlink&quot; title=&quot;SF Font Tracking&quot;&gt;&lt;/a&gt;SF Font Tracking&lt;/h2&gt;&lt;p&gt;iOS automatically adjusts the tracking value and Text/Display for San Francisco based on the font size. This ensures that the typeface is always easy to read. At 20 pt or more, SF UI Display should be used, otherwise use SF UI Text. These tracking values can only be applied in Photoshop, but here’s a formula for converting in Sketch.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/iOS-Tracking.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Use this Sketch plugin to quickly apply the correct character spacing values.&lt;/p&gt;
&lt;h2 id=&quot;3D-Touch&quot;&gt;&lt;a href=&quot;#3D-Touch&quot; class=&quot;headerlink&quot; title=&quot;3D Touch&quot;&gt;&lt;/a&gt;3D Touch&lt;/h2&gt;&lt;iframe height=&quot;400&quot; width=&quot;640&quot; src=&quot;https://designcode.io/cloud/chapter1/Design-3DTouch.mp4&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;A key new feature in iOS 9 is called 3D Touch, allowing people to quickly access options inside and outside of your app.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Screen-3DTouch.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Users can now force-press your App Icon and find frequently used items. Inside an app, mails can be peeked and links can be previewed before entering full-screen.&lt;br&gt;Think of 3D Touch like the keyboard shortcuts on your Mac – they enable people to do repeated tasks quicker. You have to design shortcuts that make power users more productive. But just like Keyboard shortcuts, essential features shouldn’t be exclusive to 3D Touch. Your users must be able to operate your app normally without it.&lt;/p&gt;
&lt;h2 id=&quot;Points-and-Pixels&quot;&gt;&lt;a href=&quot;#Points-and-Pixels&quot; class=&quot;headerlink&quot; title=&quot;Points and Pixels&quot;&gt;&lt;/a&gt;Points and Pixels&lt;/h2&gt;&lt;p&gt;Developers work with point values, so it is important to understand the difference with pixels. When the iPhone was first introduced, the two units were the same: 1pt equals 1px. Then when retina screens came along, 1pt became 2px. So think of points as the values in the original iPhone, and pixels as the real values depending on the pixel density (iPhone 4,5,6 = @2x, iPhone 6 Plus = @3x).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Resolutions.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;For more info, check out this &lt;a href=&quot;http://www.paintcodeapp.com/news/ultimate-guide-to-iphone-resolutions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;iPhone-Resolutions&quot;&gt;&lt;a href=&quot;#iPhone-Resolutions&quot; class=&quot;headerlink&quot; title=&quot;iPhone Resolutions&quot;&gt;&lt;/a&gt;iPhone Resolutions&lt;/h2&gt;&lt;p&gt;The iPhone has 4 main resolutions: 320 x 480 pt (iPhone 4), 320 x 568 pt (iPhone 5), 375 x 667 pt (iPhone 6) and 414 x 736 pt (iPhone 6 Plus). The layout doesn’t scale but expands based on the resolution. For example, the Navigation Bar only adjusts the width but keeps the same height. Elements inside it remain intact.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-iPhone.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;The iPhone 6 Plus is the only iPhone that acts more like an iPad in Landscape mode. In other words, a Left Navigation will appear, replacing the need for the Tab Bar.&lt;/p&gt;
&lt;h2 id=&quot;iPad-Resolutions&quot;&gt;&lt;a href=&quot;#iPad-Resolutions&quot; class=&quot;headerlink&quot; title=&quot;iPad Resolutions&quot;&gt;&lt;/a&gt;iPad Resolutions&lt;/h2&gt;&lt;p&gt;The iPad has 2 main resolutions: 768 x 1024 pt (iPad), 1024 x 1366 pt (iPad Pro).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-iPad.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;The iPad has 2 new features: Slide Over and Split View. Slide Over is an overlay that appears on the right of the screen without affecting the current app’s layout.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-SlideOver.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Split View allows users to multitask by running 2 apps simultaneously next to each other in Portrait mode.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-SplitView.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;App-Icon&quot;&gt;&lt;a href=&quot;#App-Icon&quot; class=&quot;headerlink&quot; title=&quot;App Icon&quot;&gt;&lt;/a&gt;App Icon&lt;/h2&gt;&lt;p&gt;The App Icon is used for the branding of your app. It’s the first thing that users see when they experience it. It appears prominently on the Home screen, the App Store, in Spotlight and Settings.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-AppIcon.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;The App Icon template in the iOS 9 GUI.&lt;/p&gt;
&lt;p&gt;@1x assets are no longer supported for the iPhone, so you don’t need to generate them. App icons have 2 resolutions now: @2x and @3x. There are 3 types: App Icon, Spotlight and Settings. For the iPad, @1x and @2x are used.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-AppIconsRes.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Super-Ellipse&quot;&gt;&lt;a href=&quot;#Super-Ellipse&quot; class=&quot;headerlink&quot; title=&quot;Super-Ellipse&quot;&gt;&lt;/a&gt;Super-Ellipse&lt;/h2&gt;&lt;p&gt;Since iOS 7, the rounded corners have shifted from plain rounded corners to a super-ellipse shape. It is important to keep note that you shouldn’t export the icons with the mask, or you’ll potentially find black artifacts. Instead, just export square assets to the App Store.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Rounded%20Corners.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Icon-Grid&quot;&gt;&lt;a href=&quot;#Icon-Grid&quot; class=&quot;headerlink&quot; title=&quot;Icon Grid&quot;&gt;&lt;/a&gt;Icon Grid&lt;/h2&gt;&lt;p&gt;Apple applied a golden ratio on some of their icons. This ensures that the icons are the heroes while keeping good proportions. While this is a good rule to follow, it’s not a strict rule. Even Apple omitted it on many of their icons.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Icon%20Grid.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Colors&quot;&gt;&lt;a href=&quot;#Colors&quot; class=&quot;headerlink&quot; title=&quot;Colors&quot;&gt;&lt;/a&gt;Colors&lt;/h2&gt;&lt;p&gt;iOS uses vibrant colors to bring out the buttons. These colors tend to work well against a white background as much as a black background. Keep in mind that colors should be used sparsely, for call-to-actions and minimal branding areas like the navigation bar. Roughly, only 10-20% of your design should have colors, or they will compete too much against the content.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Colors.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;iOS often uses neutral colors to serve as the background and menu areas. A well-contrasted black text against a white background is used to make the text comfortable to read. Finally, the pastel blue is applied for making the buttons stand out.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Screen-Colors.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Button-and-Font-Sizes&quot;&gt;&lt;a href=&quot;#Button-and-Font-Sizes&quot; class=&quot;headerlink&quot; title=&quot;Button and Font Sizes&quot;&gt;&lt;/a&gt;Button and Font Sizes&lt;/h2&gt;&lt;p&gt;The general rule is 44pt for buttons and 12pt for small text, 17pt for body text and 20pt+ for titles.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Sizes.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Spacing-and-Alignment&quot;&gt;&lt;a href=&quot;#Spacing-and-Alignment&quot; class=&quot;headerlink&quot; title=&quot;Spacing and Alignment&quot;&gt;&lt;/a&gt;Spacing and Alignment&lt;/h2&gt;&lt;p&gt;A general rule is to have a minimum padding or margin of 8pt. This creates enough breathing room, which makes the layout easier to scan and the text more readable. Also, UI elements should be aligned and texts should have the same baseline position.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-SpacingAlign.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Status-Bar&quot;&gt;&lt;a href=&quot;#Status-Bar&quot; class=&quot;headerlink&quot; title=&quot;Status Bar&quot;&gt;&lt;/a&gt;Status Bar&lt;/h2&gt;&lt;p&gt;It is recommended to include the status bar in as many places as you can. Users rely on it for important information such as signal, time and battery. The text and icons can be white or black, but the background can be customized into any color and merge with the Navigation Bar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-StatusBar.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Navigation-Bar&quot;&gt;&lt;a href=&quot;#Navigation-Bar&quot; class=&quot;headerlink&quot; title=&quot;Navigation Bar&quot;&gt;&lt;/a&gt;Navigation Bar&lt;/h2&gt;&lt;p&gt;The Navigation Bar is used for quick information about the screen. The left portion can be used for placing Back, Profile, Menu buttons whereas the right portion is generally used for action buttons like Add, Edit, Done. Note that if you use any of these system icons, you don’t need to create assets for them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-NavigationBar.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Just like the Status Bar, the background can be customized to any color and typically has a subtle blur to ensure that the text is always readable. When the Status Bar is present, both backgrounds are merged.&lt;/p&gt;
&lt;h2 id=&quot;Search-Bar&quot;&gt;&lt;a href=&quot;#Search-Bar&quot; class=&quot;headerlink&quot; title=&quot;Search Bar&quot;&gt;&lt;/a&gt;Search Bar&lt;/h2&gt;&lt;p&gt;When you have a lot of content, it is always wise to make it searchable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Search.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Toolbar&quot;&gt;&lt;a href=&quot;#Toolbar&quot; class=&quot;headerlink&quot; title=&quot;Toolbar&quot;&gt;&lt;/a&gt;Toolbar&lt;/h2&gt;&lt;p&gt;When you need more real estate to place your action buttons and screen status, you’ll want to use the Toolbar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Toolbar.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Tab-Bar&quot;&gt;&lt;a href=&quot;#Tab-Bar&quot; class=&quot;headerlink&quot; title=&quot;Tab Bar&quot;&gt;&lt;/a&gt;Tab Bar&lt;/h2&gt;&lt;p&gt;The Tab Bar is the main navigation between multiple screens. Avoid the Hamburger menu if you have few items. Menus that are always visible will increase usage since obvious always win. Additionally, it is encouraged to add text next to your icons as most people won’t instantly recognize symbols, especially when they’re not universally known.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Tab%20Bar.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;When they’re not active, icons will generally have an outline instead of being filled. Like this, they attract less attention.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Tab%20Bar%20Sizes.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Table-View&quot;&gt;&lt;a href=&quot;#Table-View&quot; class=&quot;headerlink&quot; title=&quot;Table View&quot;&gt;&lt;/a&gt;Table View&lt;/h2&gt;&lt;p&gt;The Table View is a very common user interface for listing content. Most apps use a form of Table View. That’s because it can be very basic, or highly customizable down to the smallest elements.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-TableExamples.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;At the basic level, you can use a number of preset Styles and Accessories.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-TableView.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Cells can also be grouped, with a title above and description underneath.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-TableGrouped.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Collection-View&quot;&gt;&lt;a href=&quot;#Collection-View&quot; class=&quot;headerlink&quot; title=&quot;Collection View&quot;&gt;&lt;/a&gt;Collection View&lt;/h2&gt;&lt;p&gt;When you have both rows and columns in a grid style, you’ll need the Collection View. Although a little more advanced, it can pretty much create any layout you can dream of.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-CollectionExamples.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Collection View layouts may look like these, or a combination of them. The possibilities are endless.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-CollectionView.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Modals&quot;&gt;&lt;a href=&quot;#Modals&quot; class=&quot;headerlink&quot; title=&quot;Modals&quot;&gt;&lt;/a&gt;Modals&lt;/h2&gt;&lt;p&gt;The Alert dialog is used for conveying critical information and prompting quick actions. Alerts should be kept minimal and exiting must be obvious.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Alert.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;The Activity dialog allows you to share content (text, images, links) to iOS features like Airdrop, Favorites, Bookmarks and apps like Mail, Facebook, Twitter. While the look can’t be customized, the options are.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Share.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;When the information presented isn’t short, you can design a modal that is full-sized, typically appearing from a slide, fade, flip or page animation. Like other modals, it must be easy to cancel and kept as short as possible.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Modal.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Keyboards&quot;&gt;&lt;a href=&quot;#Keyboards&quot; class=&quot;headerlink&quot; title=&quot;Keyboards&quot;&gt;&lt;/a&gt;Keyboards&lt;/h2&gt;&lt;p&gt;The keyboard is used to input information in text fields such as search, chat or login. It’s highly customizable, for URL, Email, Phone numbers and even Emoji. You can choose between the Light and Dark themes, as well as how the action button is named (return being the default).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Keyboards.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;There’s a good Keyboard Kit for Sketch that you should download.&lt;/p&gt;
&lt;h2 id=&quot;Picker&quot;&gt;&lt;a href=&quot;#Picker&quot; class=&quot;headerlink&quot; title=&quot;Picker&quot;&gt;&lt;/a&gt;Picker&lt;/h2&gt;&lt;p&gt;When you have multiple options to choose from, you can use the Picker control. It’s particularly useful for dates, which controls 3 fields in one action.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Picker.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Segmented-Control&quot;&gt;&lt;a href=&quot;#Segmented-Control&quot; class=&quot;headerlink&quot; title=&quot;Segmented Control&quot;&gt;&lt;/a&gt;Segmented Control&lt;/h2&gt;&lt;p&gt;While the Tab Bar navigates to the main sections, the Segmented Control is used for sub-sections.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-SementedControl.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Sliders&quot;&gt;&lt;a href=&quot;#Sliders&quot; class=&quot;headerlink&quot; title=&quot;Sliders&quot;&gt;&lt;/a&gt;Sliders&lt;/h2&gt;&lt;p&gt;Sliders are interactive controls that are less precise, but extremely useful for quick settings like Sound, Brightness and Video Progress.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Sliders.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Progress&quot;&gt;&lt;a href=&quot;#Progress&quot; class=&quot;headerlink&quot; title=&quot;Progress&quot;&gt;&lt;/a&gt;Progress&lt;/h2&gt;&lt;p&gt;The Progress bar is an indicator showing how far an activity has gone. For example, you can use this to show the loading progress of a Web View. Note that the height can be customized.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Progress.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Switch&quot;&gt;&lt;a href=&quot;#Switch&quot; class=&quot;headerlink&quot; title=&quot;Switch&quot;&gt;&lt;/a&gt;Switch&lt;/h2&gt;&lt;p&gt;Use this to quickly toggle between on and off. Do not use this for anything else than on / off.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Switches.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Stepper&quot;&gt;&lt;a href=&quot;#Stepper&quot; class=&quot;headerlink&quot; title=&quot;Stepper&quot;&gt;&lt;/a&gt;Stepper&lt;/h2&gt;&lt;p&gt;Slower but more precise than the Slider, the Stepper allows the user to increase or decrease a value by an increment of one. The border and background are customizable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Stepper.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;iOS-Icons&quot;&gt;&lt;a href=&quot;#iOS-Icons&quot; class=&quot;headerlink&quot; title=&quot;iOS Icons&quot;&gt;&lt;/a&gt;iOS Icons&lt;/h2&gt;&lt;p&gt;These are the native icons that permeate iOS. Since they’re commonly used, they’re instantly recognized by users for their meaning. Using them for other purposes may confuse your users, so it’s important to be aware of how they’re used in iOS.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Design-Icons.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;When you design custom icons outside of these, it is important to use well-known symbols. Additionally, I strongly recommend to always accompany them with a small text of 10pt or more.&lt;/p&gt;
&lt;h2 id=&quot;Resources&quot;&gt;&lt;a href=&quot;#Resources&quot; class=&quot;headerlink&quot; title=&quot;Resources&quot;&gt;&lt;/a&gt;Resources&lt;/h2&gt;&lt;p&gt;These templates are not only useful for study but also to re-use and customize, so you don’t have to start from scratch and open the possibility for errors. As you get more comfortable with them, you’ll be able to get creative.&lt;/p&gt;
&lt;h2 id=&quot;iOS-9-GUI-for-iPhone&quot;&gt;&lt;a href=&quot;#iOS-9-GUI-for-iPhone&quot; class=&quot;headerlink&quot; title=&quot;iOS 9 GUI for iPhone&quot;&gt;&lt;/a&gt;iOS 9 GUI for iPhone&lt;/h2&gt;&lt;p&gt;If you’re designing for iOS, you’ll want to use pre-made elements such as the status, navigation and tab bars. Get comfortable with all the colors, sizes, fonts and components.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Mockup%2002.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;iOS-9-GUI-for-iPad&quot;&gt;&lt;a href=&quot;#iOS-9-GUI-for-iPad&quot; class=&quot;headerlink&quot; title=&quot;iOS 9 GUI for iPad&quot;&gt;&lt;/a&gt;iOS 9 GUI for iPad&lt;/h2&gt;&lt;p&gt;The new iPad UI Kit features the iPad Pro device and keyboards in both portrait and landscape modes. Everything is in vector.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Mockup-iPad800.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Apple-Watch-GUI&quot;&gt;&lt;a href=&quot;#Apple-Watch-GUI&quot; class=&quot;headerlink&quot; title=&quot;Apple Watch GUI&quot;&gt;&lt;/a&gt;Apple Watch GUI&lt;/h2&gt;&lt;p&gt;A very complete UI Kit for the Apple Watch with very element including the Apple Watch devices, icons and clocks in vector. You can resize and export them at any resolution.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/Apple%20Watch%20GUI%20with%20SF%20Compact.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;UI-Design-Dos-and-Don’ts&quot;&gt;&lt;a href=&quot;#UI-Design-Dos-and-Don’ts&quot; class=&quot;headerlink&quot; title=&quot;UI Design Dos and Don’ts&quot;&gt;&lt;/a&gt;UI Design Dos and Don’ts&lt;/h2&gt;&lt;p&gt;There are practices that you should avoid at all cost, especially if you’re new to iOS. Follow these simple examples put together by Apple.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/appledosanddonts.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;iOS-Human-Interface-Guidelines-by-Apple&quot;&gt;&lt;a href=&quot;#iOS-Human-Interface-Guidelines-by-Apple&quot; class=&quot;headerlink&quot; title=&quot;iOS Human Interface Guidelines by Apple&quot;&gt;&lt;/a&gt;iOS Human Interface Guidelines by Apple&lt;/h2&gt;&lt;p&gt;A high level and essential read by Apple, even if it’s just scanning the whole thing. iBooks format is also available.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/iOS%20Human%20Interface%20Guidelines:%20Designing%20for%20iOS.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;iOS-Guidelines-by-Ivo-Mynttinen&quot;&gt;&lt;a href=&quot;#iOS-Guidelines-by-Ivo-Mynttinen&quot; class=&quot;headerlink&quot; title=&quot;iOS Guidelines by Ivo Mynttinen&quot;&gt;&lt;/a&gt;iOS Guidelines by Ivo Mynttinen&lt;/h2&gt;&lt;p&gt;If you’d like to read more about iOS from a different perspective, check out this excellent and comprehensive guide.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://designcode.io/cloud/chapter1/The%20iOS%20Design%20Guidelines%20-%20Ivo%20Mynttinen%20:%20User%20Interface%20Designer%202.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;原文地址链接:&lt;a href=&quot;https://designcode.io/iosdesign-guidelines,使用VPN加载更优。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://designcode.io/iosdesign-guidelines,使用VPN加载更优。&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;iOS has matured a lot over the years. In its 9th upgrade, Apple introduced a new system font called San Francisco, 3D Touch and multi-tas
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="UI" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/UI/"/>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/UI/iOS/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="UI" scheme="http://yoursite.com/tags/UI/"/>
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>runtime之通过objc_setAssociatedObject关联及传值</title>
    <link href="http://yoursite.com/2016/03/28/runtime%E4%B9%8B%E9%80%9A%E8%BF%87objc_setAssociatedObject%E5%85%B3%E8%81%94%E5%8F%8A%E4%BC%A0%E5%80%BC/"/>
    <id>http://yoursite.com/2016/03/28/runtime之通过objc_setAssociatedObject关联及传值/</id>
    <published>2016-03-28T04:00:51.000Z</published>
    <updated>2016-03-28T04:04:41.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;runtime之通过objc-setAssociatedObject关联及传值&quot;&gt;&lt;a href=&quot;#runtime之通过objc-setAssociatedObject关联及传值&quot; class=&quot;headerlink&quot; title=&quot;runtime之通过objc_setAssociatedObject关联及传值&quot;&gt;&lt;/a&gt;runtime之通过objc_setAssociatedObject关联及传值&lt;/h1&gt;&lt;h2 id=&quot;关联&quot;&gt;&lt;a href=&quot;#关联&quot; class=&quot;headerlink&quot; title=&quot;关联&quot;&gt;&lt;/a&gt;关联&lt;/h2&gt;&lt;p&gt;关联是指把两个对象相互关联起来，使得其中的一个对象作为另外一个对象的一部分。&lt;br&gt;关联特性只有在Mac OS X V10.6以及以后的版本上才是可用的。&lt;/p&gt;
&lt;h2 id=&quot;在类的定义之外为类增加额外的存储空间&quot;&gt;&lt;a href=&quot;#在类的定义之外为类增加额外的存储空间&quot; class=&quot;headerlink&quot; title=&quot;在类的定义之外为类增加额外的存储空间&quot;&gt;&lt;/a&gt;在类的定义之外为类增加额外的存储空间&lt;/h2&gt;&lt;p&gt;使用关联，我们可以不用修改类的定义而为其对象增加存储空间。这在我们无法访问到类的源码的时候或者是考虑到二进制兼容性的时候是非常有用。&lt;br&gt;关联是基于关键字的，因此，我们可以为任何对象增加任意多的关联，每个都使用不同的关键字即可。关联是可以保证被关联的对象在关联对象的整个生命周期都是可用的（在垃圾自动回收环境下也不会导致资源不可回收）。&lt;/p&gt;
&lt;h2 id=&quot;创建关联&quot;&gt;&lt;a href=&quot;#创建关联&quot; class=&quot;headerlink&quot; title=&quot;创建关联&quot;&gt;&lt;/a&gt;创建关联&lt;/h2&gt;&lt;p&gt;创建关联要使用到Objective-C的运行时函数：objc_setAssociatedObject来把一个对象与另外一个对象进行关联。该函数需要四个参数：源对象，关键字，关联的对象和一个关联策略。当然，此处的关键字和关联策略是需要进一步讨论的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关键字是一个void类型的指针。每一个关联的关键字必须是唯一的。通常都是会采用静态变量来作为关键字。&lt;/li&gt;
&lt;li&gt;关联策略表明了相关的对象是通过赋值，保留引用还是复制的方式进行关联的；还有这种关联是原子的还是非原子的。这里的关联策略和声明属性时的很类似。这种关联策略是通过使用预先定义好的常量来表示的。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;lt;objc/runtime.h&amp;gt;头文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//唯一静态变量key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static const char associatedkey;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//objc_setAssociatedObject需要四个参数：源对象，关键字，关联的对象和一个关联策略。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//1 源对象alert&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//2 关键字 唯一静态变量key associatedkey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//3 关联的对象 @1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//4 关键策略  OBJC_ASSOCIATION_RETAIN_NONATOMIC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@&amp;quot;test&amp;quot; message:@&amp;quot;msg&amp;quot; delegate:self cancelButtonTitle:@&amp;quot;no&amp;quot; otherButtonTitles:@&amp;quot;yes&amp;quot;, nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc_setAssociatedObject(alertView,&amp;amp;associatedkey,@1,OBJC_ASSOCIATION_RETAIN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[alertView show];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;获取相关联的对象&quot;&gt;&lt;a href=&quot;#获取相关联的对象&quot; class=&quot;headerlink&quot; title=&quot;获取相关联的对象&quot;&gt;&lt;/a&gt;获取相关联的对象&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (buttonIndex == 1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSNumber *number = (NSNumber *)objc_getAssociatedObject(alertView,&amp;amp;associatedkey);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;number is %@&amp;quot;,number);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;断开关联&quot;&gt;&lt;a href=&quot;#断开关联&quot; class=&quot;headerlink&quot; title=&quot;断开关联&quot;&gt;&lt;/a&gt;断开关联&lt;/h2&gt;&lt;p&gt;断开关联是使用objc_setAssociatedObject函数，传入nil值即可。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;objc_setAssociatedObject(alertView, &amp;amp;associatedkey, nil, OBJC_ASSOCIATION_ASSIGN);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，被关联的对象为nil，此时关联策略也就无关紧要了。&lt;br&gt;使用函数objc_removeAssociatedObjects可以断开所有关联。通常情况下不建议使用这个函数，因为他会断开所有关联。只有在需要把对象恢复到“原始状态”的时候才会使用这个函数。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;runtime之通过objc-setAssociatedObject关联及传值&quot;&gt;&lt;a href=&quot;#runtime之通过objc-setAssociatedObject关联及传值&quot; class=&quot;headerlink&quot; title=&quot;runtime之通过objc
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="runtime" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/runtime/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="runtime" scheme="http://yoursite.com/tags/runtime/"/>
    
  </entry>
  
  <entry>
    <title>提高iOS开发效率的工具</title>
    <link href="http://yoursite.com/2016/03/23/%E6%8F%90%E9%AB%98iOS%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E7%9A%84%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2016/03/23/提高iOS开发效率的工具/</id>
    <published>2016-03-23T07:30:29.000Z</published>
    <updated>2016-03-28T03:10:31.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;提高iOS开发效率的工具&quot;&gt;&lt;a href=&quot;#提高iOS开发效率的工具&quot; class=&quot;headerlink&quot; title=&quot;提高iOS开发效率的工具&quot;&gt;&lt;/a&gt;提高iOS开发效率的工具&lt;/h1&gt;&lt;p&gt;iOS开发中又很多可以提高开发效率的工具，这篇文章整理我使用提高效率的工具，如果你也有一些好的工具，可以向我推荐一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源代码依赖管理工具CocoaPods&lt;/li&gt;
&lt;li&gt;Xcode 好用的插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;1-源代码依赖管理工具CocoaPods&quot;&gt;&lt;a href=&quot;#1-源代码依赖管理工具CocoaPods&quot; class=&quot;headerlink&quot; title=&quot;1:源代码依赖管理工具CocoaPods&quot;&gt;&lt;/a&gt;1:源代码依赖管理工具CocoaPods&lt;/h2&gt;&lt;p&gt;以来管理工具有很多，例如java的maven，android的gradle，js的bower，iOS中的CocoaPods。他们可以帮你下载第三方包 并管理这些包的依赖关系。&lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;更新ruby环境 $ gem update rails ＝＝＝＝＝＝＝＝＝ Mac OS X 10.5以上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更新gem环境 ： gem update –system&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;安装cocoapods：sudo gem install cocoapods&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod setup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;配置项目依赖&quot;&gt;&lt;a href=&quot;#配置项目依赖&quot; class=&quot;headerlink&quot; title=&quot;配置项目依赖&quot;&gt;&lt;/a&gt;配置项目依赖&lt;/h3&gt;&lt;p&gt;1:创建Podfile文件 :touch Podfile&lt;br&gt;2:输入项目依赖 vim Podfile,例如&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;platform :ios, &amp;quot;6.1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod &amp;apos;MBProgressHUD&amp;apos;, &amp;apos;~&amp;gt; 0.8&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod &amp;apos;MapBox&amp;apos;, &amp;apos;~&amp;gt; 1.1.0&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3:pod install 安装&lt;br&gt;4:后续打开项目文件&lt;/p&gt;
&lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;查看某个库是否存在 －－$ pod search AFNetworking&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更新pod －－$ pod update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;安装pod – $ pod install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用下面两条命令可以提高速度，原因是不检查spec仓库更新&quot;&gt;&lt;a href=&quot;#使用下面两条命令可以提高速度，原因是不检查spec仓库更新&quot; class=&quot;headerlink&quot; title=&quot;使用下面两条命令可以提高速度，原因是不检查spec仓库更新&quot;&gt;&lt;/a&gt;使用下面两条命令可以提高速度，原因是不检查spec仓库更新&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod install –verbose –no-repo-update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod update –verbose –no-repo-update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-Xcode好用的插件&quot;&gt;&lt;a href=&quot;#2-Xcode好用的插件&quot; class=&quot;headerlink&quot; title=&quot;2:Xcode好用的插件&quot;&gt;&lt;/a&gt;2:Xcode好用的插件&lt;/h2&gt;&lt;p&gt;Xcode插件可以大大提高开发效率&lt;/p&gt;
&lt;h3 id=&quot;插件安装方式&quot;&gt;&lt;a href=&quot;#插件安装方式&quot; class=&quot;headerlink&quot; title=&quot;插件安装方式&quot;&gt;&lt;/a&gt;插件安装方式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1：推荐！ 使用Alcatraz安装，commannd + shift + 9 调出图形界面，然后使用搜索插件安装&lt;/li&gt;
&lt;li&gt;2：手动安装：对应有些好的插件，Alcatraz找不到的话，可以手动下载插件包，然后安装。 安装方法：下载附件，解压后放在：你的用户/Library/Application Support/Developer/Shared/Xcode/Plug-ins目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Alcatraz安装&quot;&gt;&lt;a href=&quot;#Alcatraz安装&quot; class=&quot;headerlink&quot; title=&quot;Alcatraz安装&quot;&gt;&lt;/a&gt;Alcatraz安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;作用：管理Xcode插件&lt;/li&gt;
&lt;li&gt;安装：命令行执行：curl -f SSL &lt;a href=&quot;https://raw.github.com/supermarin/Alcatraz/master/Scripts/install.sh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://raw.github.com/supermarin/Alcatraz/master/Scripts/install.sh&lt;/a&gt;    sh&lt;/li&gt;
&lt;li&gt;删除：rm -rf ~/Library/Application\ Support/Developer/Shared/Xcode/Plug-ins/Alcatraz.xcplugin&lt;/li&gt;
&lt;li&gt;快捷键 command + shift + 9 github地址：&lt;a href=&quot;https://github.com/supermarin/Alcatraz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/supermarin/Alcatraz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;推荐插件&quot;&gt;&lt;a href=&quot;#推荐插件&quot; class=&quot;headerlink&quot; title=&quot;推荐插件&quot;&gt;&lt;/a&gt;推荐插件&lt;/h3&gt;&lt;h4 id=&quot;KSImageNamed&quot;&gt;&lt;a href=&quot;#KSImageNamed&quot; class=&quot;headerlink&quot; title=&quot;KSImageNamed&quot;&gt;&lt;/a&gt;KSImageNamed&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Xcode资源文件在代码中添加只能感应，例如： [UIImage imageNamed: 会出现项目中的资源文件的智能感应&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;OMColorSense&quot;&gt;&lt;a href=&quot;#OMColorSense&quot; class=&quot;headerlink&quot; title=&quot;OMColorSense&quot;&gt;&lt;/a&gt;OMColorSense&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Xcode 代码中可以通过选择颜色生成uicolor代码&lt;br&gt;使用:先随便写个颜色，然后点击颜色行，改行的右上角会出现色快，点击可以选择颜色。或点击Xcode导航中的Edit-》insert color&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;VVDocumenter-Xcode&quot;&gt;&lt;a href=&quot;#VVDocumenter-Xcode&quot; class=&quot;headerlink&quot; title=&quot;VVDocumenter-Xcode&quot;&gt;&lt;/a&gt;VVDocumenter-Xcode&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Xcode 按三次斜杠（///）后自动生成方法的注释&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;fuzzyAutocomplete-，hou或是AutoresizeMask-for-Xcode&quot;&gt;&lt;a href=&quot;#fuzzyAutocomplete-，hou或是AutoresizeMask-for-Xcode&quot; class=&quot;headerlink&quot; title=&quot;fuzzyAutocomplete ，hou或是AutoresizeMask-for-Xcode&quot;&gt;&lt;/a&gt;fuzzyAutocomplete ，hou或是AutoresizeMask-for-Xcode&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;加强版只能感应，只是模糊匹配,必装！&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;SCXcodeMiniMap&quot;&gt;&lt;a href=&quot;#SCXcodeMiniMap&quot; class=&quot;headerlink&quot; title=&quot;SCXcodeMiniMap&quot;&gt;&lt;/a&gt;SCXcodeMiniMap&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;类似Sublime Text 右侧的迷你预览图&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;XToDo&quot;&gt;&lt;a href=&quot;#XToDo&quot; class=&quot;headerlink&quot; title=&quot;XToDo&quot;&gt;&lt;/a&gt;XToDo&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;代办列表管理&lt;/li&gt;
&lt;li&gt;支持//TODO: //FIXME: //!!!: //???: 快捷键分别是 ： control + shift + T ,control + shift + X ,control + shift + ! ,control + shift + Q&lt;/li&gt;
&lt;li&gt;打开list 快捷键control + T&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;injectionforxcode&quot;&gt;&lt;a href=&quot;#injectionforxcode&quot; class=&quot;headerlink&quot; title=&quot;injectionforxcode&quot;&gt;&lt;/a&gt;injectionforxcode&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;说明：动态修改app中的样式而不需要重新编译&lt;/li&gt;
&lt;li&gt;教程：&lt;a href=&quot;http://nonomori.farbox.com/post/injection-plugin-for-Xcode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://nonomori.farbox.com/post/injection-plugin-for-Xcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;快捷键：control = ：更新代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;XAlign&quot;&gt;&lt;a href=&quot;#XAlign&quot; class=&quot;headerlink&quot; title=&quot;XAlign&quot;&gt;&lt;/a&gt;XAlign&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;说明：自动对齐代码&lt;/li&gt;
&lt;li&gt;快捷键：command+shift+X&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Code-Pilot&quot;&gt;&lt;a href=&quot;#Code-Pilot&quot; class=&quot;headerlink&quot; title=&quot;Code Pilot&quot;&gt;&lt;/a&gt;Code Pilot&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Xcode查找文件插件&lt;/li&gt;
&lt;li&gt;快捷键：command+shift+X,建议替换为control+X&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;ESJsonFormat&quot;&gt;&lt;a href=&quot;#ESJsonFormat&quot; class=&quot;headerlink&quot; title=&quot;ESJsonFormat&quot;&gt;&lt;/a&gt;ESJsonFormat&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;将JSON格式化输出为模型的属性&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;ZLGotoSandboxPlugin&quot;&gt;&lt;a href=&quot;#ZLGotoSandboxPlugin&quot; class=&quot;headerlink&quot; title=&quot;ZLGotoSandboxPlugin&quot;&gt;&lt;/a&gt;ZLGotoSandboxPlugin&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;可以快速进入iPhone模拟器沙盒路径&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;CocoaPods&quot;&gt;&lt;a href=&quot;#CocoaPods&quot; class=&quot;headerlink&quot; title=&quot;CocoaPods&quot;&gt;&lt;/a&gt;CocoaPods&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;cocoaPods插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Peckham&quot;&gt;&lt;a href=&quot;#Peckham&quot; class=&quot;headerlink&quot; title=&quot;Peckham&quot;&gt;&lt;/a&gt;Peckham&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;自动import头文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Dash-for-Xcode&quot;&gt;&lt;a href=&quot;#Dash-for-Xcode&quot; class=&quot;headerlink&quot; title=&quot;Dash for Xcode&quot;&gt;&lt;/a&gt;Dash for Xcode&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Xcode文档插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Xcode更新之后插件失效的解决办法&quot;&gt;&lt;a href=&quot;#Xcode更新之后插件失效的解决办法&quot; class=&quot;headerlink&quot; title=&quot;Xcode更新之后插件失效的解决办法&quot;&gt;&lt;/a&gt;Xcode更新之后插件失效的解决办法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;打开终端，输入以下代码：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;defaults read /Applications/Xcode.app/Contents/Info DVTPlugInCompatibilityUUID\&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;获取到DVTPlugInCompatibilityUUID，然后&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;find ~/Library/Application\ Support/Developer/Shared/Xcode/Plug-ins -name Info.plist -maxdepth 3 | xargs -I&amp;#123;&amp;#125; defaults write &amp;#123;&amp;#125; DVTPlugInCompatibilityUUIDs -array-add 9F75337B-21B4-4ADC-B558-F9CADF7073A7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;重启Xcode&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;提高iOS开发效率的工具&quot;&gt;&lt;a href=&quot;#提高iOS开发效率的工具&quot; class=&quot;headerlink&quot; title=&quot;提高iOS开发效率的工具&quot;&gt;&lt;/a&gt;提高iOS开发效率的工具&lt;/h1&gt;&lt;p&gt;iOS开发中又很多可以提高开发效率的工具，这篇文章整理我使用
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="工具" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>iOS多线程编程之NSThread的使用</title>
    <link href="http://yoursite.com/2016/03/21/iOS%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B%E4%B9%8BNSThread%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2016/03/21/iOS多线程编程之NSThread的使用/</id>
    <published>2016-03-21T09:42:35.000Z</published>
    <updated>2016-03-21T10:06:44.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;iOS多线程编程之NSThread的使用&quot;&gt;&lt;a href=&quot;#iOS多线程编程之NSThread的使用&quot; class=&quot;headerlink&quot; title=&quot;iOS多线程编程之NSThread的使用&quot;&gt;&lt;/a&gt;iOS多线程编程之NSThread的使用&lt;/h1&gt;&lt;h2 id=&quot;1、简介：&quot;&gt;&lt;a href=&quot;#1、简介：&quot; class=&quot;headerlink&quot; title=&quot;1、简介：&quot;&gt;&lt;/a&gt;1、简介：&lt;/h2&gt;&lt;h3 id=&quot;1-1-iOS有三种多线程编程的技术，分别是：&quot;&gt;&lt;a href=&quot;#1-1-iOS有三种多线程编程的技术，分别是：&quot; class=&quot;headerlink&quot; title=&quot;1.1 iOS有三种多线程编程的技术，分别是：&quot;&gt;&lt;/a&gt;1.1 iOS有三种多线程编程的技术，分别是：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.、NSThread&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2、Cocoa NSOperation （iOS多线程编程之NSOperation和NSOperationQueue的使用）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3、GCD  全称：Grand Central Dispatch（ iOS多线程编程之Grand Central Dispatch(GCD)介绍和使用）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这三种编程方式从上到下，抽象度层次是从低到高的，抽象度越高的使用越简单，也是Apple最推荐使用的。&lt;br&gt;这篇我们主要介绍和使用NSThread，后面会继续2、3 的讲解和使用。&lt;/p&gt;
&lt;h3 id=&quot;1-2-三种方式的有缺点介绍：&quot;&gt;&lt;a href=&quot;#1-2-三种方式的有缺点介绍：&quot; class=&quot;headerlink&quot; title=&quot;1.2 三种方式的有缺点介绍：&quot;&gt;&lt;/a&gt;1.2 三种方式的有缺点介绍：&lt;/h3&gt;&lt;h4 id=&quot;NSThread&quot;&gt;&lt;a href=&quot;#NSThread&quot; class=&quot;headerlink&quot; title=&quot;NSThread:&quot;&gt;&lt;/a&gt;NSThread:&lt;/h4&gt;&lt;p&gt;优点：NSThread 比其他两个轻量级&lt;br&gt;缺点：需要自己管理线程的生命周期，线程同步。线程同步对数据的加锁会有一定的系统开销&lt;/p&gt;
&lt;p&gt;NSThread实现的技术有下面三种：&lt;/p&gt;
&lt;h5 id=&quot;Cocoa-threads&quot;&gt;&lt;a href=&quot;#Cocoa-threads&quot; class=&quot;headerlink&quot; title=&quot;Cocoa threads&quot;&gt;&lt;/a&gt;Cocoa threads&lt;/h5&gt;&lt;p&gt;Cocoa implements threads using the NSThread class. Cocoa also provides methods on NSObject for spawning new threads and executing code on already-running threads. For more information, see “Using NSThread” and “Using NSObject to Spawn a Thread.”&lt;/p&gt;
&lt;h5 id=&quot;POSIX-threads&quot;&gt;&lt;a href=&quot;#POSIX-threads&quot; class=&quot;headerlink&quot; title=&quot;POSIX threads&quot;&gt;&lt;/a&gt;POSIX threads&lt;/h5&gt;&lt;p&gt;POSIX threads provide a C-based interface for creating threads. If you are not writing a Cocoa application, this is the best choice for creating threads. The POSIX interface is relatively simple to use and offers ample flexibility for configuring your threads. For more information, see “Using POSIX Threads”&lt;/p&gt;
&lt;h5 id=&quot;Multiprocessing-Services&quot;&gt;&lt;a href=&quot;#Multiprocessing-Services&quot; class=&quot;headerlink&quot; title=&quot;Multiprocessing Services&quot;&gt;&lt;/a&gt;Multiprocessing Services&lt;/h5&gt;&lt;p&gt;Multiprocessing Services is a legacy C-based interface used by applications transitioning from older versions of Mac OS. This technology is available in OS X only and should be avoided for any new development. Instead, you should use the NSThread class or POSIX threads. If you need more information on this technology, see Multiprocessing Services Programming Guide.&lt;/p&gt;
&lt;p&gt;一般使用cocoa thread 技术。&lt;/p&gt;
&lt;h4 id=&quot;Cocoa-operation&quot;&gt;&lt;a href=&quot;#Cocoa-operation&quot; class=&quot;headerlink&quot; title=&quot;Cocoa operation&quot;&gt;&lt;/a&gt;Cocoa operation&lt;/h4&gt;&lt;p&gt;优点：不需要关心线程管理，数据同步的事情，可以把精力放在自己需要执行的操作上。&lt;br&gt;Cocoa operation 相关的类是 NSOperation ，NSOperationQueue。NSOperation是个抽象类，使用它必须用它的子类，可以实现它或者使用它定义好的两个子类：NSInvocationOperation 和 NSBlockOperation。创建NSOperation子类的对象，把对象添加到NSOperationQueue队列里执行。&lt;/p&gt;
&lt;h4 id=&quot;GCD&quot;&gt;&lt;a href=&quot;#GCD&quot; class=&quot;headerlink&quot; title=&quot;GCD&quot;&gt;&lt;/a&gt;GCD&lt;/h4&gt;&lt;p&gt;Grand Central Dispatch (GCD)是Apple开发的一个多核编程的解决方法。在iOS4.0开始之后才能使用。GCD是一个替代诸如NSThread, NSOperationQueue, NSInvocationOperation等技术的很高效和强大的技术。现在的iOS系统都升级到6了，所以不用担心该技术不能使用。&lt;br&gt;介绍完这三种多线程编程方式，我们这篇先介绍NSThread的使用。&lt;/p&gt;
&lt;h2 id=&quot;2、NSThread的使用&quot;&gt;&lt;a href=&quot;#2、NSThread的使用&quot; class=&quot;headerlink&quot; title=&quot;2、NSThread的使用&quot;&gt;&lt;/a&gt;2、NSThread的使用&lt;/h2&gt;&lt;h3 id=&quot;2-1-NSThread-有两种直接创建方式：&quot;&gt;&lt;a href=&quot;#2-1-NSThread-有两种直接创建方式：&quot; class=&quot;headerlink&quot; title=&quot;2.1 NSThread 有两种直接创建方式：&quot;&gt;&lt;/a&gt;2.1 NSThread 有两种直接创建方式：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (id)initWithTarget:(id)target selector:(SEL)selector object:(id)argument&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (void)detachNewThreadSelector:(SEL)aSelector toTarget:(id)aTarget withObject:(id)anArgument&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个是实例方法，第二个是类方法&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[NSThread detachNewThreadSelector:@selector(doSomething:) toTarget:self withObject:nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSThread* myThread = [[NSThread alloc] initWithTarget:self&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        selector:@selector(doSomething:)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        object:nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[myThread start];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-2-参数的意义：&quot;&gt;&lt;a href=&quot;#2-2-参数的意义：&quot; class=&quot;headerlink&quot; title=&quot;2.2 参数的意义：&quot;&gt;&lt;/a&gt;2.2 参数的意义：&lt;/h3&gt;&lt;p&gt;selector ：线程执行的方法，这个selector只能有一个参数，而且不能有返回值。&lt;br&gt;target  ：selector消息发送的对象&lt;br&gt;argument:传输给target的唯一参数，也可以是nil&lt;br&gt;第一种方式会直接创建线程并且开始运行线程，第二种方式是先创建线程对象，然后再运行线程操作，在运行线程操作前可以设置线程的优先级等线程信息&lt;/p&gt;
&lt;h3 id=&quot;2-3-PS-不显式创建线程的方法：&quot;&gt;&lt;a href=&quot;#2-3-PS-不显式创建线程的方法：&quot; class=&quot;headerlink&quot; title=&quot;2.3 PS:不显式创建线程的方法：&quot;&gt;&lt;/a&gt;2.3 PS:不显式创建线程的方法：&lt;/h3&gt;&lt;p&gt;用NSObject的类方法  performSelectorInBackground:withObject: 创建一个线程：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Obj performSelectorInBackground:@selector(doSomething) withObject:nil];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-4-下载图片的例子：&quot;&gt;&lt;a href=&quot;#2-4-下载图片的例子：&quot; class=&quot;headerlink&quot; title=&quot;2.4 下载图片的例子：&quot;&gt;&lt;/a&gt;2.4 下载图片的例子：&lt;/h3&gt;&lt;h4 id=&quot;2-4-1-新建singeView-app&quot;&gt;&lt;a href=&quot;#2-4-1-新建singeView-app&quot; class=&quot;headerlink&quot; title=&quot;2.4.1  新建singeView app&quot;&gt;&lt;/a&gt;2.4.1  新建singeView app&lt;/h4&gt;&lt;p&gt;新建项目，并在xib文件上放置一个imageView控件。按住control键拖到viewController.h文件中创建imageView IBOutlet&lt;/p&gt;
&lt;p&gt;ViewController.m中实现：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//  ViewController.m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//  NSThreadDemo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//  Created by rongfzh on 12-9-23.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//  Copyright (c) 2012年 rongfzh. All rights reserved.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;quot;ViewController.h&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define kURL @&amp;quot;http://avatar.csdn.net/2/C/D/1_totogo2010.jpg&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@interface ViewController ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@implementation ViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)downloadImage:(NSString *) url&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSData *data = [[NSData alloc] initWithContentsOfURL:[NSURL URLWithString:url]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIImage *image = [[UIImage alloc]initWithData:data];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(image == nil)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [self performSelectorOnMainThread:@selector(updateUI:) withObject:image waitUntilDone:YES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)updateUI:(UIImage*) image&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.imageView.image = image;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)viewDidLoad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//    [NSThread detachNewThreadSelector:@selector(downloadImage:) toTarget:self withObject:kURL];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSThread *thread = [[NSThread alloc]initWithTarget:self selector:@selector(downloadImage:) object:kURL];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [thread start];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)didReceiveMemoryWarning&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super didReceiveMemoryWarning];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Dispose of any resources that can be recreated.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2-4-2线程间通讯&quot;&gt;&lt;a href=&quot;#2-4-2线程间通讯&quot; class=&quot;headerlink&quot; title=&quot;2.4.2线程间通讯&quot;&gt;&lt;/a&gt;2.4.2线程间通讯&lt;/h4&gt;&lt;p&gt;线程下载完图片后怎么通知主线程更新界面呢？&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[self performSelectorOnMainThread:@selector(updateUI:) withObject:image waitUntilDone:YES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;performSelectorOnMainThread是NSObject的方法，除了可以更新主线程的数据外，还可以更新其他线程的比如：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用：performSelector:onThread:withObject:waitUntilDone:&lt;/p&gt;
&lt;p&gt;运行下载图片：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201209/23/1348412756_8445.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;图片下载下来了。&lt;/p&gt;
&lt;h3 id=&quot;2-5-线程同步&quot;&gt;&lt;a href=&quot;#2-5-线程同步&quot; class=&quot;headerlink&quot; title=&quot;2.5 线程同步&quot;&gt;&lt;/a&gt;2.5 线程同步&lt;/h3&gt;&lt;p&gt;我们演示一个经典的卖票的例子来讲NSThread的线程同步：&lt;br&gt;.h&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;lt;UIKit/UIKit.h&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@class ViewController;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@interface AppDelegate : UIResponder &amp;lt;UIApplicationDelegate&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int tickets;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSThread* ticketsThreadone;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSThread* ticketsThreadtwo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSCondition* ticketsCondition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLock *theLock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@property (strong, nonatomic) UIWindow *window;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@property (strong, nonatomic) ViewController *viewController;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tickets = 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    theLock = [[NSLock alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 锁对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ticketsCondition = [[NSCondition alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ticketsThreadone = [[NSThread alloc] initWithTarget:self selector:@selector(run) object:nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ticketsThreadone setName:@&amp;quot;Thread-1&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ticketsThreadone start];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ticketsThreadtwo = [[NSThread alloc] initWithTarget:self selector:@selector(run) object:nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ticketsThreadtwo setName:@&amp;quot;Thread-2&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ticketsThreadtwo start];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Override point for customization after application launch.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.viewController = [[ViewController alloc] initWithNibName:@&amp;quot;ViewController&amp;quot; bundle:nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.window.rootViewController = self.viewController;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.window makeKeyAndVisible];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)run&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while (TRUE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 上锁&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//        [ticketsCondition lock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [theLock lock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(tickets &amp;gt;= 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [NSThread sleepForTimeInterval:0.09];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            count = 100 tickets;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NSLog(@&amp;quot;当前票数是:%d,售出:%d,线程名:%@&amp;quot;,tickets,count,[[NSThread currentThread] name]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tickets--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [theLock unlock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//        [ticketsCondition unlock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果没有线程同步的lock，卖票数可能是-1.加上lock之后线程同步保证了数据的正确性。&lt;br&gt;上面例子我使用了两种锁，一种NSCondition ，一种是：NSLock。 NSCondition我已经注释了。&lt;/p&gt;
&lt;h4 id=&quot;线程的顺序执行&quot;&gt;&lt;a href=&quot;#线程的顺序执行&quot; class=&quot;headerlink&quot; title=&quot;线程的顺序执行&quot;&gt;&lt;/a&gt;线程的顺序执行&lt;/h4&gt;&lt;p&gt;他们都可以通过&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[ticketsCondition signal];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;发送信号的方式，在一个线程唤醒另外一个线程的等待。&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;quot;AppDelegate.h&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;quot;ViewController.h&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@implementation AppDelegate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tickets = 100;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    theLock = [[NSLock alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 锁对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ticketsCondition = [[NSCondition alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ticketsThreadone = [[NSThread alloc] initWithTarget:self selector:@selector(run) object:nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ticketsThreadone setName:@&amp;quot;Thread-1&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ticketsThreadone start];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ticketsThreadtwo = [[NSThread alloc] initWithTarget:self selector:@selector(run) object:nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ticketsThreadtwo setName:@&amp;quot;Thread-2&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ticketsThreadtwo start];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSThread *ticketsThreadthree = [[NSThread alloc] initWithTarget:self selector:@selector(run3) object:nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ticketsThreadthree setName:@&amp;quot;Thread-3&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [ticketsThreadthree start];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.window = [[UIWindow alloc] initWithFrame:[[UIScreen mainScreen] bounds]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Override point for customization after application launch.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.viewController = [[ViewController alloc] initWithNibName:@&amp;quot;ViewController&amp;quot; bundle:nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.window.rootViewController = self.viewController;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self.window makeKeyAndVisible];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)run3&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while (YES) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ticketsCondition lock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [NSThread sleepForTimeInterval:3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ticketsCondition signal];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ticketsCondition unlock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)run&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    while (TRUE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 上锁&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ticketsCondition lock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ticketsCondition wait];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [theLock lock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if(tickets &amp;gt;= 0)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [NSThread sleepForTimeInterval:0.09];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            count = 100 tickets;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            NSLog(@&amp;quot;当前票数是:%d,售出:%d,线程名:%@&amp;quot;,tickets,count,[[NSThread currentThread] name]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tickets--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [theLock unlock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ticketsCondition unlock];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;wait是等待，我加了一个 线程3 去唤醒其他两个线程锁中的wait&lt;/p&gt;
&lt;h5 id=&quot;其他同步&quot;&gt;&lt;a href=&quot;#其他同步&quot; class=&quot;headerlink&quot; title=&quot;其他同步&quot;&gt;&lt;/a&gt;其他同步&lt;/h5&gt;&lt;p&gt;我们可以使用指令 @synchronized 来简化 NSLock的使用，这样我们就不必显示编写创建NSLock,加锁并解锁相关代码。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)doSomeThing:(id)anObj&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @synchronized(anObj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Everything between the braces is protected by the @synchronized directive.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有其他的一些锁对象，比如：循环锁NSRecursiveLock，条件锁NSConditionLock，分布式锁NSDistributedLock等等,可以自己看官方文档学习&lt;br&gt;NSThread下载图片的例子代码：&lt;a href=&quot;http://download.csdn.net/detail/totogo2010/4591149&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://download.csdn.net/detail/totogo2010/4591149&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;著作权声明：本文由&lt;a href=&quot;http://blog.csdn.net/totogo2010/原创，欢迎转载分享。请尊重作者劳动，转载时保留该声明和作者博客链接，谢谢!&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/totogo2010/原创，欢迎转载分享。请尊重作者劳动，转载时保留该声明和作者博客链接，谢谢!&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;iOS多线程编程之NSThread的使用&quot;&gt;&lt;a href=&quot;#iOS多线程编程之NSThread的使用&quot; class=&quot;headerlink&quot; title=&quot;iOS多线程编程之NSThread的使用&quot;&gt;&lt;/a&gt;iOS多线程编程之NSThread的使用&lt;/h1&gt;&lt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="多线程" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="多线程" scheme="http://yoursite.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>开始使用React Native</title>
    <link href="http://yoursite.com/2016/03/18/%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8React%20Native/"/>
    <id>http://yoursite.com/2016/03/18/开始使用React Native/</id>
    <published>2016-03-18T02:41:40.000Z</published>
    <updated>2016-03-18T03:22:25.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;开始使用React-Native&quot;&gt;&lt;a href=&quot;#开始使用React-Native&quot; class=&quot;headerlink&quot; title=&quot;开始使用React Native&quot;&gt;&lt;/a&gt;开始使用React Native&lt;/h1&gt;&lt;h2 id=&quot;环境需求&quot;&gt;&lt;a href=&quot;#环境需求&quot; class=&quot;headerlink&quot; title=&quot;环境需求&quot;&gt;&lt;/a&gt;环境需求&lt;/h2&gt;&lt;p&gt;1.OS X - 本向导假设您的操作系统是OS X，因为这是开发iOS应用所必须的。&lt;/p&gt;
&lt;p&gt;2.推荐使用&lt;a href=&quot;http://brew.sh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Homebrew&lt;/a&gt; 来安装Watchman和Flow&lt;/p&gt;
&lt;p&gt;3.安装&lt;a href=&quot;http://nodejs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt; 4.0或更高版本(译注：如果你并不使用Node.js开发网站，只是用于React Native的开发，那么请先安装homebrew，然后直接使用brew install node安装即可，不必按照下面的nvm的安装步骤)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装 nvm（安装向导在&lt;a href=&quot;https://github.com/creationix/nvm#installation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;）。然后运行nvm install node &amp;amp;&amp;amp; nvm alias default node，这将会默认安装最新版本的Node.js并且设置好命令行的环境变量，这样你可以输入node命令来启动Node.js环境。nvm使你可以同时安装多个版本的Node.js，并且在这些版本之间轻松切换。&lt;/li&gt;
&lt;li&gt;如果你从未接触过npm，推荐阅读&lt;a href=&quot;https://docs.npmjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;npm的文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4.在命令行中输入brew install watchman，我们推荐安装&lt;a href=&quot;https://facebook.github.io/watchman/docs/install.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;watchman&lt;/a&gt;，否则你可能会遇到一个Node.js监视文件系统的BUG。&lt;/p&gt;
&lt;p&gt;5.如果你希望使用flow来为js代码加上类型检查，那么在命令行中输入brew install flow来安装flow。（译注：新手可以跳过这一步）&lt;/p&gt;
&lt;p&gt;我们推荐您定期运行brew update &amp;amp;&amp;amp; brew upgrade来保持上述几个程序为最新版本。&lt;/p&gt;
&lt;h2 id=&quot;iOS开发环境准备&quot;&gt;&lt;a href=&quot;#iOS开发环境准备&quot; class=&quot;headerlink&quot; title=&quot;iOS开发环境准备&quot;&gt;&lt;/a&gt;iOS开发环境准备&lt;/h2&gt;&lt;p&gt;你需要安装&lt;a href=&quot;https://developer.apple.com/xcode/downloads/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Xcode&lt;/a&gt; 7.0或者更高版本。你可以在App Store中找到并安装Xcode。&lt;/p&gt;
&lt;p&gt;译注：如果您选择从第三方网站/镜像下载Xcode，请务必从正规镜像网站下载验证文件Hash以防止类似XcodeGhost的安全风险发生，不要信任论坛、百度空间等分享渠道&lt;/p&gt;
&lt;h2 id=&quot;Android开发环境准备&quot;&gt;&lt;a href=&quot;#Android开发环境准备&quot; class=&quot;headerlink&quot; title=&quot;Android开发环境准备&quot;&gt;&lt;/a&gt;Android开发环境准备&lt;/h2&gt;&lt;p&gt;要使React Native应用支持Android，首先需要安装Android SDK (如果你不想连接安卓设备，那么还需要一个安卓模拟器)。参见 &lt;a href=&quot;http://reactnative.cn/docs/android-setup.html#content&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android开发指南&lt;/a&gt; 了解如何搭建安卓开发环境。&lt;/p&gt;
&lt;p&gt;注： 现在&lt;a href=&quot;http://reactnative.cn/docs/linux-windows-support.html#content&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Windows和Linux也在实验性的支持&lt;/a&gt;Android开发。&lt;/p&gt;
&lt;p&gt;译注： Windows用户可以参考&lt;a href=&quot;http://bbs.reactnative.cn/topic/10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个帖子&lt;/a&gt;来搭建环境。&lt;/p&gt;
&lt;p&gt;快速开始&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g react-native-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ react-native init AwesomeProject&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;译注：由于众所周知的网络原因，react-native命令行从npm官方源拖代码时会遇上麻烦。请将npm仓库源替换为国内镜像：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm config set registry https://registry.npm.taobao.org&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm config set disturl https://npm.taobao.org/dist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另，执行init时切记不要在前面加上sudo（否则新项目的目录所有者会变为root而不是当前用户，导致一系列权限问题，请使用chown修复）。&lt;br&gt;本站论坛区提供了完整的&lt;a href=&quot;http://bbs.reactnative.cn/topic/11&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;绿色纯净新项目包&lt;/a&gt;。完整打包全部iOS和Android的第三方依赖，只要环境配置正确，无需科学上网漫长等待，解压即可直接运行。&lt;/p&gt;
&lt;h3 id=&quot;运行iOS应用&quot;&gt;&lt;a href=&quot;#运行iOS应用&quot; class=&quot;headerlink&quot; title=&quot;运行iOS应用&quot;&gt;&lt;/a&gt;运行iOS应用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;$ cd AwesomeProject&lt;/li&gt;
&lt;li&gt;用XCode打开ios/AwesomeProject.xcodeproj并点击Run按钮。&lt;/li&gt;
&lt;li&gt;使用你喜欢的文本编辑器打开index.ios.js并随便改上几行。&lt;/li&gt;
&lt;li&gt;在iOS Emulator中按下⌘-R就可以刷新APP并看到你的最新修改！&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;运行Android应用&quot;&gt;&lt;a href=&quot;#运行Android应用&quot; class=&quot;headerlink&quot; title=&quot;运行Android应用&quot;&gt;&lt;/a&gt;运行Android应用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;$ cd AwesomeProject&lt;/li&gt;
&lt;li&gt;$ react-native run-android&lt;/li&gt;
&lt;li&gt;使用你喜欢的文本编辑器打开index.android.js并随便改上几行&lt;/li&gt;
&lt;li&gt;按Menu键（通常是F2，在Genymotion模拟器中是⌘+M）然后选择 Reload JS 就可以看到你的最新修改。&lt;/li&gt;
&lt;li&gt;在终端下运行adb logcat *:S ReactNative:V ReactNativeJS:V可以看到你的应用的日志。&lt;br&gt;注：: 如果你打算在真实设备而非模拟器上运行，参见&lt;a href=&quot;http://reactnative.cn/docs/running-on-device-android.html#content&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在设备上运行&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;恭喜！现在你已经成功运行并修改了你的第一个React Native应用！&lt;/p&gt;
&lt;p&gt;如果你在以上过程中遇到了任何问题，可以看看论坛里总结的&lt;a href=&quot;http://bbs.reactnative.cn/topic/130&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;常见问题&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&quot;为已有的React-Native工程添加Android支持&quot;&gt;&lt;a href=&quot;#为已有的React-Native工程添加Android支持&quot; class=&quot;headerlink&quot; title=&quot;为已有的React Native工程添加Android支持&quot;&gt;&lt;/a&gt;为已有的React Native工程添加Android支持&lt;/h2&gt;&lt;p&gt;如果你已经有了一个只有iOS版本的React Native工程，并且希望添加Android支持，你需要在你的工程目录下运行以下命令：&lt;/p&gt;
&lt;p&gt;1.打开package.json文件，在dependencies项中找到react-native，并将其后的版本号修改为&lt;a href=&quot;https://www.npmjs.com/package/react-native&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;最新版本&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;2.$ npm install&lt;/p&gt;
&lt;p&gt;3.$ react-native android&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;开始使用React-Native&quot;&gt;&lt;a href=&quot;#开始使用React-Native&quot; class=&quot;headerlink&quot; title=&quot;开始使用React Native&quot;&gt;&lt;/a&gt;开始使用React Native&lt;/h1&gt;&lt;h2 id=&quot;环境需求&quot;&gt;&lt;a 
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="React Native" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/React-Native/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="React Native" scheme="http://yoursite.com/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>iOS多线程编程之NSOperation和NSOperationQueue的使用</title>
    <link href="http://yoursite.com/2016/03/17/iOS%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B%E4%B9%8BNSOperation%E5%92%8CNSOperationQueue%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2016/03/17/iOS多线程编程之NSOperation和NSOperationQueue的使用/</id>
    <published>2016-03-17T02:22:23.000Z</published>
    <updated>2016-03-17T06:11:44.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;iOS多线程编程之NSOperation和NSOperationQueue的使用&quot;&gt;&lt;a href=&quot;#iOS多线程编程之NSOperation和NSOperationQueue的使用&quot; class=&quot;headerlink&quot; title=&quot;iOS多线程编程之NSOperation和NSOperationQueue的使用&quot;&gt;&lt;/a&gt;iOS多线程编程之NSOperation和NSOperationQueue的使用&lt;/h1&gt;&lt;h2 id=&quot;使用-NSOperation的方式有两种，&quot;&gt;&lt;a href=&quot;#使用-NSOperation的方式有两种，&quot; class=&quot;headerlink&quot; title=&quot;使用 NSOperation的方式有两种，&quot;&gt;&lt;/a&gt;使用 NSOperation的方式有两种，&lt;/h2&gt;&lt;h3 id=&quot;一种是用定义好的两个子类：&quot;&gt;&lt;a href=&quot;#一种是用定义好的两个子类：&quot; class=&quot;headerlink&quot; title=&quot;一种是用定义好的两个子类：&quot;&gt;&lt;/a&gt;一种是用定义好的两个子类：&lt;/h3&gt;&lt;p&gt;NSInvocationOperation 和 NSBlockOperation。&lt;/p&gt;
&lt;h3 id=&quot;另一种是继承NSOperation&quot;&gt;&lt;a href=&quot;#另一种是继承NSOperation&quot; class=&quot;headerlink&quot; title=&quot;另一种是继承NSOperation&quot;&gt;&lt;/a&gt;另一种是继承NSOperation&lt;/h3&gt;&lt;p&gt;如果你也熟悉Java，NSOperation就和java.lang.Runnable接口很相似。和Java的Runnable一样，NSOperation也是设计用来扩展的，只需继承重写NSOperation的一个方法main。相当与java 中Runnalbe的Run方法。然后把NSOperation子类的对象放入NSOperationQueue队列中，该队列就会启动并开始处理它。&lt;/p&gt;
&lt;h2 id=&quot;NSInvocationOperation例子：&quot;&gt;&lt;a href=&quot;#NSInvocationOperation例子：&quot; class=&quot;headerlink&quot; title=&quot;NSInvocationOperation例子：&quot;&gt;&lt;/a&gt;NSInvocationOperation例子：&lt;/h2&gt;&lt;p&gt;和前面一篇博文一样，我们实现一个下载图片的例子。新建一个Single View app，拖放一个ImageView控件到xib界面。&lt;/p&gt;
&lt;p&gt;实现代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#import &amp;quot;ViewController.h&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#define kURL @&amp;quot;http://avatar.csdn.net/2/C/D/1_totogo2010.jpg&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@interface ViewController ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@implementation ViewController&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(void)viewDidLoad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSInvocationOperation *operation = [[NSInvocationOperation alloc]initWithTarget:self&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                           selector:@selector(downloadImage:)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                             object:kURL];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSOperationQueue *queue = [[NSOperationQueue alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [queue addOperation:operation];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Do any additional setup after loading the view, typically from a nib.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(void)downloadImage:(NSString *)url&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;url:%@&amp;quot;, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSURL *nsUrl = [NSURL URLWithString:url];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSData *data = [[NSData alloc]initWithContentsOfURL:nsUrl];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIImage * image = [[UIImage alloc]initWithData:data];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [self performSelectorOnMainThread:@selector(updateUI:) withObject:image waitUntilDone:YES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(void)updateUI:(UIImage*) image&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.imageView.image = image;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.viewDidLoad方法里可以看到我们用NSInvocationOperation建了一个后台线程，并且放到NSOperationQueue中。后台线程执行downloadImage方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.downloadImage 方法处理下载图片的逻辑。下载完成后用performSelectorOnMainThread执行主线程updateUI方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.updateUI 并把下载的图片显示到图片控件中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运行可以看到下载图片显示在界面上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201209/24/1348475303_2749.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;第二种方式继承NSOperation&quot;&gt;&lt;a href=&quot;#第二种方式继承NSOperation&quot; class=&quot;headerlink&quot; title=&quot;第二种方式继承NSOperation&quot;&gt;&lt;/a&gt;第二种方式继承NSOperation&lt;/h2&gt;&lt;p&gt;在.m文件中实现main方法，main方法编写要执行的代码即可。&lt;/p&gt;
&lt;h3 id=&quot;如何控制线程池中的线程数？&quot;&gt;&lt;a href=&quot;#如何控制线程池中的线程数？&quot; class=&quot;headerlink&quot; title=&quot;如何控制线程池中的线程数？&quot;&gt;&lt;/a&gt;如何控制线程池中的线程数？&lt;/h3&gt;&lt;p&gt;队列里可以加入很多个NSOperation, 可以把NSOperationQueue看作一个线程池，可往线程池中添加操作（NSOperation）到队列中。线程池中的线程可看作消费者，从队列中取走操作，并执行它。&lt;/p&gt;
&lt;p&gt;通过下面的代码设置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[queue setMaxConcurrentOperationCount:5];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;线程池中的线程数，也就是并发操作数。默认情况下是-1，-1表示没有限制，这样会同时运行队列中的全部的操作。&lt;/p&gt;
&lt;p&gt;著作权声明：本文由&lt;a href=&quot;http://blog.csdn.net/totogo2010/article/details/8013316&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/totogo2010/article/details/8013316&lt;/a&gt;原创，欢迎转载分享。请尊重作者劳动，转载时保留该声明和作者博客链接，谢谢!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;iOS多线程编程之NSOperation和NSOperationQueue的使用&quot;&gt;&lt;a href=&quot;#iOS多线程编程之NSOperation和NSOperationQueue的使用&quot; class=&quot;headerlink&quot; title=&quot;iOS多线程编程之NSO
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="多线程" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="多线程" scheme="http://yoursite.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>iOS多线程编程之Grand Central Dispatch(GCD)介绍和使用</title>
    <link href="http://yoursite.com/2016/03/16/iOS%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B%E4%B9%8BGrand%20Central%20Dispatch(GCD)%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2016/03/16/iOS多线程编程之Grand Central Dispatch(GCD)介绍和使用/</id>
    <published>2016-03-16T09:47:52.000Z</published>
    <updated>2016-03-17T06:10:49.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;iOS多线程编程之Grand-Central-Dispatch-GCD-介绍和使用&quot;&gt;&lt;a href=&quot;#iOS多线程编程之Grand-Central-Dispatch-GCD-介绍和使用&quot; class=&quot;headerlink&quot; title=&quot;iOS多线程编程之Grand Central Dispatch(GCD)介绍和使用&quot;&gt;&lt;/a&gt;iOS多线程编程之Grand Central Dispatch(GCD)介绍和使用&lt;/h1&gt;&lt;h2 id=&quot;介绍：&quot;&gt;&lt;a href=&quot;#介绍：&quot; class=&quot;headerlink&quot; title=&quot;介绍：&quot;&gt;&lt;/a&gt;介绍：&lt;/h2&gt;&lt;p&gt;Grand Central Dispatch 简称（GCD）是苹果公司开发的技术，以优化的应用程序支持多核心处理器和其他的对称多处理系统的系统。这建立在任务并行执行的线程池模式的基础上的。它首次发布在Mac OS X 10.6 ，iOS 4及以上也可用。&lt;/p&gt;
&lt;h2 id=&quot;设计：&quot;&gt;&lt;a href=&quot;#设计：&quot; class=&quot;headerlink&quot; title=&quot;设计：&quot;&gt;&lt;/a&gt;设计：&lt;/h2&gt;&lt;p&gt;GCD的工作原理是：让程序平行排队的特定任务，根据可用的处理资源，安排他们在任何可用的处理器核心上执行任务。&lt;/p&gt;
&lt;p&gt;一个任务可以是一个函数(function)或者是一个block。 GCD的底层依然是用线程实现，不过这样可以让程序员不用关注实现的细节。&lt;/p&gt;
&lt;p&gt;GCD中的FIFO队列称为dispatch queue，它可以保证先进来的任务先得到执行&lt;br&gt;dispatch queue分为下面三种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serial&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又称为private dispatch queues，同时只执行一个任务。Serial queue通常用于同步访问特定的资源或数据。当你创建多个Serial queue时，虽然它们各自是同步执行的，但Serial queue与Serial queue之间是并发执行的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Concurrent&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又称为global dispatch queue，可以并发地执行多个任务，但是执行完成的顺序是随机的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Main dispatch queue&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它是全局可用的serial queue，它是在应用程序主线程上执行任务的。&lt;/p&gt;
&lt;p&gt;我们看看dispatch queue如何使用&lt;/p&gt;
&lt;h2 id=&quot;1、常用的方法dispatch-async&quot;&gt;&lt;a href=&quot;#1、常用的方法dispatch-async&quot; class=&quot;headerlink&quot; title=&quot;1、常用的方法dispatch_async&quot;&gt;&lt;/a&gt;1、常用的方法dispatch_async&lt;/h2&gt;&lt;p&gt;为了避免界面在处理耗时的操作时卡死，比如读取网络数据，IO,数据库读写等，我们会在另外一个线程中处理这些操作，然后通知主线程更新界面。&lt;/p&gt;
&lt;p&gt;用GCD实现这个流程的操作比前面介绍的NSThread  NSOperation的方法都要简单。代码框架结构如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 耗时的操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dispatch_async(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 更新界面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果这样还不清晰的话，那我们还是用上两篇博客中的下载图片为例子，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSURL * url = [NSURL URLWithString:@&amp;quot;http://avatar.csdn.net/2/C/D/1_totogo2010.jpg&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSData * data = [[NSData alloc]initWithContentsOfURL:url];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIImage *image = [[UIImage alloc]initWithData:data];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (data != nil) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dispatch_async(dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.imageView.image = image;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行显示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.my.csdn.net/uploads/201209/23/1348412756_8445.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;是不是代码比NSThread  NSOperation简洁很多，而且GCD会自动根据任务在多核处理器上分配资源，优化程序。&lt;/p&gt;
&lt;p&gt;系统给每一个应用程序提供了三个concurrent dispatch queues。这三个并发调度队列是全局的，它们只有优先级的不同。因为是全局的，我们不需要去创建。我们只需要通过使用函数dispath_get_global_queue去得到队列，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t globalQ = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里也用到了系统默认就有一个串行队列main_queue&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t mainQ = dispatch_get_main_queue();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;虽然dispatch queue是引用计数的对象，但是以上两个都是全局的队列，不用retain或release。&lt;/p&gt;
&lt;h2 id=&quot;2、dispatch-group-async的使用&quot;&gt;&lt;a href=&quot;#2、dispatch-group-async的使用&quot; class=&quot;headerlink&quot; title=&quot;2、dispatch_group_async的使用&quot;&gt;&lt;/a&gt;2、dispatch_group_async的使用&lt;/h2&gt;&lt;p&gt;dispatch_group_async可以实现监听一组任务是否完成，完成后得到通知执行其他的操作。这个方法很有用，比如你执行三个下载任务，当三个任务都下载完成后你才通知界面说完成的了。下面是一段例子代码：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_t group = dispatch_group_create();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(group, queue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;group1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(group, queue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;group2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(group, queue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;group3&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_notify(group, dispatch_get_main_queue(), ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;updateUi&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_release(group);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;dispatch_group_async是异步的方法，运行后可以看到打印结果：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2012-09-25 16:04:16.737 gcdTest[43328:11303] group1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2012-09-25 16:04:17.738 gcdTest[43328:12a1b] group2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2012-09-25 16:04:18.738 gcdTest[43328:13003] group3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2012-09-25 16:04:18.739 gcdTest[43328:f803] updateUi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每个一秒打印一个，当第三个任务执行后，upadteUi被打印。&lt;/p&gt;
&lt;h2 id=&quot;3、dispatch-barrier-async的使用&quot;&gt;&lt;a href=&quot;#3、dispatch-barrier-async的使用&quot; class=&quot;headerlink&quot; title=&quot;3、dispatch_barrier_async的使用&quot;&gt;&lt;/a&gt;3、dispatch_barrier_async的使用&lt;/h2&gt;&lt;p&gt;dispatch_barrier_async是在前面的任务执行结束后它才执行，而且它后面的任务等它执行完成之后才会执行&lt;/p&gt;
&lt;p&gt;例子代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t queue = dispatch_queue_create(&amp;quot;gcdtest.rongfzh.yc&amp;quot;, DISPATCH_QUEUE_CONCURRENT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(queue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;dispatch_async1&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(queue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:4];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;dispatch_async2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_barrier_async(queue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;dispatch_barrier_async&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:4];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_async(queue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&amp;quot;dispatch_async3&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印结果：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2012-09-25 16:20:33.967 gcdTest[45547:11203] dispatch_async1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2012-09-25 16:20:35.967 gcdTest[45547:11303] dispatch_async2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2012-09-25 16:20:35.967 gcdTest[45547:11303] dispatch_barrier_async&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2012-09-25 16:20:40.970 gcdTest[45547:11303] dispatch_async3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;请注意执行的时间，可以看到执行的顺序如上所述。&lt;/p&gt;
&lt;h2 id=&quot;4、dispatch-apply&quot;&gt;&lt;a href=&quot;#4、dispatch-apply&quot; class=&quot;headerlink&quot; title=&quot;4、dispatch_apply&quot;&gt;&lt;/a&gt;4、dispatch_apply&lt;/h2&gt;&lt;p&gt;执行某个代码片段N次。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_apply(5, globalQ, ^(size_t index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 执行5次&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;著作权声明：本文由&lt;a href=&quot;http://blog.csdn.net/totogo2010/article/details/8016129&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/totogo2010/article/details/8016129&lt;/a&gt;，欢迎转载分享。请尊重作者劳动，转载时保留该声明和作者博客链接，谢谢!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;iOS多线程编程之Grand-Central-Dispatch-GCD-介绍和使用&quot;&gt;&lt;a href=&quot;#iOS多线程编程之Grand-Central-Dispatch-GCD-介绍和使用&quot; class=&quot;headerlink&quot; title=&quot;iOS多线程编程之G
    
    </summary>
    
      <category term="iOS开发" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="多线程" scheme="http://yoursite.com/categories/iOS%E5%BC%80%E5%8F%91/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="多线程" scheme="http://yoursite.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Git操作指南</title>
    <link href="http://yoursite.com/2016/03/15/Git%E6%93%8D%E4%BD%9C%E6%8C%87%E5%8D%97/"/>
    <id>http://yoursite.com/2016/03/15/Git操作指南/</id>
    <published>2016-03-15T05:54:53.000Z</published>
    <updated>2016-03-16T09:41:56.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Git操作指南&quot;&gt;&lt;a href=&quot;#Git操作指南&quot; class=&quot;headerlink&quot; title=&quot;Git操作指南&quot;&gt;&lt;/a&gt;Git操作指南&lt;/h1&gt;&lt;h2 id=&quot;1-Git概念&quot;&gt;&lt;a href=&quot;#1-Git概念&quot; class=&quot;headerlink&quot; title=&quot;1. Git概念&quot;&gt;&lt;/a&gt;1. Git概念&lt;/h2&gt;&lt;h3 id=&quot;1-1-Git库中由三部分组成&quot;&gt;&lt;a href=&quot;#1-1-Git库中由三部分组成&quot; class=&quot;headerlink&quot; title=&quot;1.1. Git库中由三部分组成&quot;&gt;&lt;/a&gt;1.1. Git库中由三部分组成&lt;/h3&gt;&lt;p&gt;Git 仓库就是那个.git 目录，其中存放的是我们所提交的文档索引内容，Git 可基于文档索引内容对其所管理的文档进行内容追踪，从而实现文档的版本控制。.git目录位于工作目录内。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1） 工作目录：用户本地的目录；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2） Index（索引）：将工作目录下所有文件（包含子目录）生成快照，存放到一个临时的存储区域，Git 称该区域为索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3） 仓库：将索引通过commit命令提交至仓库中，每一次提交都意味着版本在进行一次更新。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;1-2-使用Git时的初始化事项&quot;&gt;&lt;a href=&quot;#1-2-使用Git时的初始化事项&quot; class=&quot;headerlink&quot; title=&quot;1.2. 使用Git时的初始化事项&quot;&gt;&lt;/a&gt;1.2. 使用Git时的初始化事项&lt;/h3&gt;&lt;h4 id=&quot;1-2-1-Git初始化配置&quot;&gt;&lt;a href=&quot;#1-2-1-Git初始化配置&quot; class=&quot;headerlink&quot; title=&quot;1.2.1. Git初始化配置&quot;&gt;&lt;/a&gt;1.2.1. Git初始化配置&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;1） 配置使用git仓库的人员姓名&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &amp;quot;Your Name Comes Here&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;2） 配置使用git仓库的人员email&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email you@yourdomain.example.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;1-2-2-Git文档忽略机制&quot;&gt;&lt;a href=&quot;#1-2-2-Git文档忽略机制&quot; class=&quot;headerlink&quot; title=&quot;1.2.2. Git文档忽略机制&quot;&gt;&lt;/a&gt;1.2.2. Git文档忽略机制&lt;/h4&gt;&lt;p&gt;工作目录中有一些文件是不希望接受Git 管理的，譬如程序编译时生成的中间文件等等。Git 提供了文档忽略机制，可以将工作目录中不希望接受Git 管理的文档信息写到同一目录下的.gitignore 文件中。&lt;/p&gt;
&lt;p&gt;例如：工作目录下有个zh目录，如果不想把它加入到Git管理中，则执行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;echo “zh” &amp;amp;gt; .gitignore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有关gitignore 文件的诸多细节知识可阅读其使用手册：man gitignore&lt;/p&gt;
&lt;h3 id=&quot;1-3-Git与Repo的比较&quot;&gt;&lt;a href=&quot;#1-3-Git与Repo的比较&quot; class=&quot;headerlink&quot; title=&quot;1.3. Git与Repo的比较&quot;&gt;&lt;/a&gt;1.3. Git与Repo的比较&lt;/h3&gt;&lt;p&gt;Git操作一般对应一个仓库，而Repo操作一般对应一个项目，即一个项目会由若干仓库组成。&lt;/p&gt;
&lt;p&gt;例如，在操作整个Recket项目时使用Repo，而操作其中的某个仓库时使用Git。在包含隐藏目录.git的目录下执行git操作。&lt;/p&gt;
&lt;h2 id=&quot;2-Git-help&quot;&gt;&lt;a href=&quot;#2-Git-help&quot; class=&quot;headerlink&quot; title=&quot;2. Git help&quot;&gt;&lt;/a&gt;2. Git help&lt;/h2&gt;&lt;p&gt;Git help 获取git基本命令&lt;/p&gt;
&lt;p&gt;（如果要知道某个特定命令的使用方法，例如：使用Git help clone，来获取git clone的使用方法）&lt;/p&gt;
&lt;h2 id=&quot;3-Git本地操作基本命令&quot;&gt;&lt;a href=&quot;#3-Git本地操作基本命令&quot; class=&quot;headerlink&quot; title=&quot;3. Git本地操作基本命令&quot;&gt;&lt;/a&gt;3. Git本地操作基本命令&lt;/h2&gt;&lt;h3 id=&quot;3-1-Git-init&quot;&gt;&lt;a href=&quot;#3-1-Git-init&quot; class=&quot;headerlink&quot; title=&quot;3.1. Git init&quot;&gt;&lt;/a&gt;3.1. Git init&lt;/h3&gt;&lt;p&gt;或者使用git init-db。&lt;/p&gt;
&lt;p&gt;创建一个空的Git库。在当前目录中产生一个.git 的子目录。以后，所有的文件变化信息都会保存到这个目录下，而不像CVS那样，会在每个目录和子目录下都创建一个CVS目录。&lt;/p&gt;
&lt;p&gt;在.git目录下有一个config文件，可以修改其中的配置信息。&lt;/p&gt;
&lt;h3 id=&quot;3-2-Git-add&quot;&gt;&lt;a href=&quot;#3-2-Git-add&quot; class=&quot;headerlink&quot; title=&quot;3.2. Git add&quot;&gt;&lt;/a&gt;3.2. Git add&lt;/h3&gt;&lt;p&gt;将当前工作目录中更改或者新增的文件加入到Git的索引中，加入到Git的索引中就表示记入了版本历史中，这也是提交之前所需要执行的一步。&lt;/p&gt;
&lt;p&gt;可以递归添加，即如果后面跟的是一个目录作为参数，则会递归添加整个目录中的所有子目录和文件。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git add dir1 （ 添加dir1这个目录，目录下的所有文件都被加入 ）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Git add f1 f2 （ 添加f1，f2文件）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git add .      ( 添加当前目录下的所有文件和子目录 )&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-3-Git-rm&quot;&gt;&lt;a href=&quot;#3-3-Git-rm&quot; class=&quot;headerlink&quot; title=&quot;3.3. Git rm&quot;&gt;&lt;/a&gt;3.3. Git rm&lt;/h3&gt;&lt;p&gt;从当前的工作目录中和索引中删除文件。&lt;/p&gt;
&lt;p&gt;可以递归删除，即如果后面跟的是一个目录做为参数，则会递归删除整个目录中的所有子目录和文件。例如：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git rm –r * （进入某个目录中，执行此语句，会删除该目录下的所有文件和子目录）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git rm f1    (删除文件f1，包含本地目录和index中的此文件记录)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git rm --ached f1 (删除文件f1，不会删除本地目录文件，只删除index中的文件记录；将已经git add的文件remove到cache中,这样commit的时候不会提交这个文件, 适用于一下子添加了很多文件, 却又想排除其中个别几个文件的情况.)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-4-Git-commit&quot;&gt;&lt;a href=&quot;#3-4-Git-commit&quot; class=&quot;headerlink&quot; title=&quot;3.4. Git commit&quot;&gt;&lt;/a&gt;3.4. Git commit&lt;/h3&gt;&lt;p&gt;提交当前工作目录的修改内容。&lt;/p&gt;
&lt;p&gt;直接调用git commit命令，会提示填写注释。通过如下方式在命令行就填写提交注释：git commit -m “Initial commit of gittutor reposistory”。 注意，和CVS不同，git的提交注释必须不能为空，否则就会提交失败。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git commit还有一个 -a的参数，可以将那些没有通过git add标识的变化一并强行提交，但是不建议使用这种方式。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每一次提交，git就会为全局代码建立一个唯一的commit标识代码，用户可以通过git reset命令恢复到任意一次提交时的代码。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git commit –-amend –m “message” （在一个commit id上不断修改提交的内容）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-5-Git-status&quot;&gt;&lt;a href=&quot;#3-5-Git-status&quot; class=&quot;headerlink&quot; title=&quot;3.5. Git status&quot;&gt;&lt;/a&gt;3.5. Git status&lt;/h3&gt;&lt;p&gt;查看版本库的状态。可以得知哪些文件发生了变化，哪些文件还没有添加到git库中等等。 建议每次commit前都要通过该命令确认库状态。&lt;/p&gt;
&lt;p&gt;最常见的误操作是， 修改了一个文件， 没有调用git add通知git库该文件已经发生了变化就直接调用commit操作， 从而导致该文件并没有真正的提交。这时如果开发者以为已经提交了该文件，就继续修改甚至删除这个文件，那么修改的内容就没有通过版本管理起来。如果每次在 提交前，使用git status查看一下，就可以发现这种错误。因此，如果调用了git status命令，一定要格外注意那些提示为 “Changed but not updated:”的文件。 这些文件都是与上次commit相比发生了变化，但是却没有通过git add标识的文件。&lt;/p&gt;
&lt;h3 id=&quot;3-6-Git-log&quot;&gt;&lt;a href=&quot;#3-6-Git-log&quot; class=&quot;headerlink&quot; title=&quot;3.6. Git log&quot;&gt;&lt;/a&gt;3.6. Git log&lt;/h3&gt;&lt;p&gt;查看历史日志，包含每次的版本变化。每次版本变化对应一个commit id。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Git log -1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-1的意思是只显示一个commit，如果想显示5个，就-5。不指定的话，git log会从该commit一直往后显示。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Git log --stat –summary （显示每次版本的详细变化）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在项目日志信息中，每条日志的首行（就是那一串字符）为版本更新提交所进行的命名，我们可以将该命名理解为项目版本号。项目版本号应该是唯一的，默认由 Git 自动生成，用以标示项目的某一次更新。如果我们将项目版本号用作git-show 命令的参数，即可查看该次项目版本的更新细节。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1) Git log&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2）Git show&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实际上，上述命令并非是真正的进行版本号自定义，只是制造了一个tag对象而已，这在进行项目版本对外发布时比较有用。&lt;/p&gt;
&lt;h3 id=&quot;3-7-Git-merge&quot;&gt;&lt;a href=&quot;#3-7-Git-merge&quot; class=&quot;headerlink&quot; title=&quot;3.7. Git merge&quot;&gt;&lt;/a&gt;3.7. Git merge&lt;/h3&gt;&lt;p&gt;把服务器上下载下来的代码和本地代码合并。或者进行分支合并。&lt;/p&gt;
&lt;p&gt;例如：当前在master分支上，若想将分支dev上的合并到master上，则git merge dev&lt;/p&gt;
&lt;p&gt;注意：git merge nov/eclair_eocket （是将服务器git库的eclair_eocket分支合并到本地分支上）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git rebase nov/eclair_eocket （是将服务器git库的eclair_eocket分支映射到本地的一个临时分支上，然后将本地分支上的变化合并到这个临时分支，然后再用这个临时分支初始化本地分支）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-8-Git-diff&quot;&gt;&lt;a href=&quot;#3-8-Git-diff&quot; class=&quot;headerlink&quot; title=&quot;3.8. Git diff&quot;&gt;&lt;/a&gt;3.8. Git diff&lt;/h3&gt;&lt;p&gt;把本地的代码和index中的代码进行比较，或者是把index中的代码和本地仓库中的代码进行比较。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1） Git diff&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较工作目录和Index中的代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2） Git diff - - cached&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比较index和本地仓库中的代码。&lt;/p&gt;
&lt;h3 id=&quot;3-9-Git-checkout&quot;&gt;&lt;a href=&quot;#3-9-Git-checkout&quot; class=&quot;headerlink&quot; title=&quot;3.9. Git checkout&quot;&gt;&lt;/a&gt;3.9. Git checkout&lt;/h3&gt;&lt;h4 id=&quot;3-9-1-切换到分支&quot;&gt;&lt;a href=&quot;#3-9-1-切换到分支&quot; class=&quot;headerlink&quot; title=&quot;3.9.1. 切换到分支&quot;&gt;&lt;/a&gt;3.9.1. 切换到分支&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;1) 创建一个新分支，并切换到该分支上&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Git checkout –b 新分支名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;2）切换到某个已经建立的本地分支local_branch&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Git checkout local_branch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（使用cat .git/HEAD后，显示refs:refs/heads/ local_branch）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3) 切换到服务器上的某个分支remote_branch&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Git checkout remote_branch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（远程分支remote_branch可以通过 git branch –r 列出）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4) 切换到某个commit id&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Git checkout commit_id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（使用cat .git/HEAD后，显示commit_id）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5) 切换到某个tag&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Git checkout tag&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（使用cat .git/HEAD后，显示tag）&lt;/p&gt;
&lt;p&gt;注意： 除了1）和2）外，其余三种都只是切换到了一个临时的( no branch )状态 （this head is detached），这时用 git branch 可以看到处于（no branch）上， cat .git/HEAD 看到指向相应的commit id。 这个（no branch）只是临时存在的，并不是一个真正建立的branch。 如果此时执行2），则这个（no branch）就自动消失了；如果执行1）， 则创建新分支 new branch，并把这个(no branch)挂到这个新分支上，此时cat .git/refs/heads/new_branch 可以看到已经指向了刚才那个commit id。&lt;/p&gt;
&lt;h4 id=&quot;3-9-2-用已有分支初始化新分支&quot;&gt;&lt;a href=&quot;#3-9-2-用已有分支初始化新分支&quot; class=&quot;headerlink&quot; title=&quot;3.9.2. 用已有分支初始化新分支&quot;&gt;&lt;/a&gt;3.9.2. 用已有分支初始化新分支&lt;/h4&gt;&lt;p&gt;执行下面的命令，在切换到某个已经建立的local branch或者某个remote branch或者某个commit id 或者某个tag的同时，创建新分支new_branch，并且挂到这个新分支上。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1） 切换到某个已经建立的本地分支local_branch，并且使用此分支初始化一个新分支new_branch。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout –b new_branch local_branch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;2) 切换到某个远程分支remote_branch，并且用此分支初始化一个新分支new_branch。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Git checkout –b new_branch remote_branch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;3) 切换到某个commit id，并建立新分支new_branch&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Git checkout –b new_branch commit_id&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;4) 切换到某个tag，并建立新分支new_branch&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Git checkout –b new_branch tag&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-9-3-还原代码&quot;&gt;&lt;a href=&quot;#3-9-3-还原代码&quot; class=&quot;headerlink&quot; title=&quot;3.9.3. 还原代码&quot;&gt;&lt;/a&gt;3.9.3. 还原代码&lt;/h4&gt;&lt;p&gt;例如 “git checkout app/model/user.rb” 就会将user.rb文件从上一个已提交的版本中更新回来，未提交的工作目录中的内容全部会被覆盖。&lt;/p&gt;
&lt;h3 id=&quot;3-10-Git-ls-files&quot;&gt;&lt;a href=&quot;#3-10-Git-ls-files&quot; class=&quot;headerlink&quot; title=&quot;3.10. Git-ls-files&quot;&gt;&lt;/a&gt;3.10. Git-ls-files&lt;/h3&gt;&lt;p&gt;查看当前的git库中有那些文件。&lt;/p&gt;
&lt;h3 id=&quot;3-11-Git-mv&quot;&gt;&lt;a href=&quot;#3-11-Git-mv&quot; class=&quot;headerlink&quot; title=&quot;3.11. Git mv&quot;&gt;&lt;/a&gt;3.11. Git mv&lt;/h3&gt;&lt;p&gt;重命名一个文件、目录或者链接。&lt;/p&gt;
&lt;p&gt;例如：Git mv helloworld.c helloworld1.c （把文件helloworld.c 重命名为 helloworld1.c）&lt;/p&gt;
&lt;h3 id=&quot;3-12-Git-branch&quot;&gt;&lt;a href=&quot;#3-12-Git-branch&quot; class=&quot;headerlink&quot; title=&quot;3.12. Git branch&quot;&gt;&lt;/a&gt;3.12. Git branch&lt;/h3&gt;&lt;h4 id=&quot;3-12-1-总述&quot;&gt;&lt;a href=&quot;#3-12-1-总述&quot; class=&quot;headerlink&quot; title=&quot;3.12.1. 总述&quot;&gt;&lt;/a&gt;3.12.1. 总述&lt;/h4&gt;&lt;p&gt;在 git 版本库中创建分支的成本几乎为零，所以，不必吝啬多创建几个分支。当第一次执行git init时，系统就会创建一个名为“master”的分支。 而其它分支则通过手工创建。&lt;/p&gt;
&lt;p&gt;下面列举一些常见的分支策略：&lt;/p&gt;
&lt;p&gt;创建一个属于自己的个人工作分支，以避免对主分支 master 造成太多的干扰，也方便与他人交流协作；&lt;/p&gt;
&lt;p&gt;当进行高风险的工作时，创建一个试验性的分支；&lt;/p&gt;
&lt;p&gt;合并别人的工作的时候，最好是创建一个临时的分支用来合并，合并完成后再“fetch”到自己的分支。&lt;/p&gt;
&lt;p&gt;对分支进行增、删、查等操作。&lt;/p&gt;
&lt;p&gt;注意：分支信息一般在.git/refs/目录下，其中heads目录下为本地分支，remotes为对应服务器上的分支，tags为标签。&lt;/p&gt;
&lt;h4 id=&quot;3-12-2-查看分支&quot;&gt;&lt;a href=&quot;#3-12-2-查看分支&quot; class=&quot;headerlink&quot; title=&quot;3.12.2. 查看分支&quot;&gt;&lt;/a&gt;3.12.2. 查看分支&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch 列出本地git库中的所有分支。在列出的分支中，若分支名前有*，则表示此分支为当前分支。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git branch –r 列出服务器git库的所有分支。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;（可以继续使用命令 “ git checkout -b 本地分支名 服务器分支名”来获取服务器上某个分支的代码文件）。&lt;/p&gt;
&lt;h4 id=&quot;3-12-3-查看当前在哪个分支上&quot;&gt;&lt;a href=&quot;#3-12-3-查看当前在哪个分支上&quot; class=&quot;headerlink&quot; title=&quot;3.12.3. 查看当前在哪个分支上&quot;&gt;&lt;/a&gt;3.12.3. 查看当前在哪个分支上&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat .git/HEAD&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-12-4-创建一个分支&quot;&gt;&lt;a href=&quot;#3-12-4-创建一个分支&quot; class=&quot;headerlink&quot; title=&quot;3.12.4. 创建一个分支&quot;&gt;&lt;/a&gt;3.12.4. 创建一个分支&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;1） git branch 分支名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然创建了分支，但是不会将当前工作分支切换到新创建的分支上，因此，还需要命令“git checkout 分支名” 来切换，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2） git checout –b 分支名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不但创建了分支，还将当前工作分支切换到了该分支上。&lt;/p&gt;
&lt;h4 id=&quot;3-12-5-切换到某个分支：git-checkout-分支名&quot;&gt;&lt;a href=&quot;#3-12-5-切换到某个分支：git-checkout-分支名&quot; class=&quot;headerlink&quot; title=&quot;3.12.5. 切换到某个分支：git checkout 分支名&quot;&gt;&lt;/a&gt;3.12.5. 切换到某个分支：git checkout 分支名&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;切换到主分支：git checkout master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-12-6-删除分支&quot;&gt;&lt;a href=&quot;#3-12-6-删除分支&quot; class=&quot;headerlink&quot; title=&quot;3.12.6. 删除分支&quot;&gt;&lt;/a&gt;3.12.6. 删除分支&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git branch –D 分支名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意： 删除后，发生在该分支的所有变化都无法恢复。强制删除此分支。&lt;/p&gt;
&lt;h4 id=&quot;3-12-7-比较两个分支上的文件的区别&quot;&gt;&lt;a href=&quot;#3-12-7-比较两个分支上的文件的区别&quot; class=&quot;headerlink&quot; title=&quot;3.12.7. 比较两个分支上的文件的区别&quot;&gt;&lt;/a&gt;3.12.7. 比较两个分支上的文件的区别&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git diff master 分支名 （比较主分支和另一个分支的区别）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-12-8-查看分支历史&quot;&gt;&lt;a href=&quot;#3-12-8-查看分支历史&quot; class=&quot;headerlink&quot; title=&quot;3.12.8. 查看分支历史&quot;&gt;&lt;/a&gt;3.12.8. 查看分支历史&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git-show-branch （查看当前分支的提交注释及信息）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git-show-branch -all（查看所有分支的提交注释及信息）例如：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [dev] d2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;! [master] m2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [dev] d2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [dev^] d1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* [dev~2] d0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*+ [master] m2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上述例子中， “–”之上的两行表示有两个分支dev和master， 且dev分支上最后一次提交的日志是“d2”,master分支上最后一次提交的日志是 “m2”。 “–”之下的几行表示了分支演化的历史，其中 dev表示发生在dev分支上的最后一次提交，dev^表示发生在dev分支上的倒数第二次提交。dev~2表示发生在dev分支上的倒数第三次提交。&lt;/p&gt;
&lt;h4 id=&quot;3-12-9-查看当前分支的操作记录&quot;&gt;&lt;a href=&quot;#3-12-9-查看当前分支的操作记录&quot; class=&quot;headerlink&quot; title=&quot;3.12.9. 查看当前分支的操作记录&quot;&gt;&lt;/a&gt;3.12.9. 查看当前分支的操作记录&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git whatchanged&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;3-12-10-合并分支&quot;&gt;&lt;a href=&quot;#3-12-10-合并分支&quot; class=&quot;headerlink&quot; title=&quot;3.12.10. 合并分支&quot;&gt;&lt;/a&gt;3.12.10. 合并分支&lt;/h4&gt;&lt;p&gt;方法一：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git merge “注释” 合并的目标分支 合并的来源分支&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果合并有冲突，git会有提示。&lt;/p&gt;
&lt;p&gt;例如：git checkout master   （切换到master分支）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git merge HEAD dev~2 (合并master分支和dev~2分支)或者：git merge master dev~2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方法二：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git pull 合并的目标分支 合并的来源分支&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如: git checkout master （切换到master分支）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git pull . dev~2（合并当前分支和dev~2分支）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-13-Git-rebase&quot;&gt;&lt;a href=&quot;#3-13-Git-rebase&quot; class=&quot;headerlink&quot; title=&quot;3.13. Git rebase&quot;&gt;&lt;/a&gt;3.13. Git rebase&lt;/h3&gt;&lt;p&gt;一般在将服务器最新内容合并到本地时使用，例如：在版本C时从服务器上获取内容到本地，修改了本地内容，此时想把本地修改的内容提交到服务器上；但发现服务器上的版本已经变为G了，此时就需要先执行Git rebase，将服务器上的最新版本合并到本地。例如：&lt;/p&gt;
&lt;p&gt;用下面两幅图解释会比较清楚一些，rebase命令执行后，实际上是将分支点从C移到了G，这样分支也就具有了从C到G的功能。&lt;/p&gt;
&lt;h3 id=&quot;3-14-Git-reset&quot;&gt;&lt;a href=&quot;#3-14-Git-reset&quot; class=&quot;headerlink&quot; title=&quot;3.14. Git reset&quot;&gt;&lt;/a&gt;3.14. Git reset&lt;/h3&gt;&lt;p&gt;库的逆转与恢复除了用来进行一些废弃的研发代码的重置外，还有一个重要的作用。比如我们从远程clone了一个代码库，在本地开发后，准备提交回远程。但是本地代码库在开发时，有功能性的commit，也有出于备份目的的commit等等。总之，commit的日志中有大量无用log，我们并不想把这些 log在提交回远程时也提交到库中。 因此，就要用到git reset。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reset的概念比较复杂。它的命令形式：git reset [--mixed | --soft | --hard] [&amp;lt;commit-ish&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;命令的选项：&lt;/p&gt;
&lt;p&gt;–mixed 这个是默认的选项。如git reset [–mixed] dev^(dev^的定义可以参见2.6.5)。它的作用仅是重置分支状态到dev1^, 但是却不改变任何工作文件的内容。即，从dev1^到dev1的所有文件变化都保留了，但是dev1^到dev1之间的所有commit日志都被清除了， 而且，发生变化的文件内容也没有通过git add标识，如果您要重新commit，还需要对变化的文件做一次git add。 这样，commit后，就得到了一份非常干净的提交记录。 （回退了index和仓库中的内容）&lt;/p&gt;
&lt;p&gt;–soft相当于做了git reset –mixed，后，又对变化的文件做了git add。如果用了该选项， 就可以直接commit了。（回退了仓库中的内容）&lt;/p&gt;
&lt;p&gt;–hard这个命令就会导致所有信息的回退， 包括文件内容。 一般只有在重置废弃代码时，才用它。 执行后，文件内容也无法恢复回来了。（回退了工作目录、index和仓库中的内容）&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;p&gt;切换到使用的分支上；&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reset HEAD^ 回退第一个记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git reset HEAD~2 回退第二个记录&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果想把工作目录下的文件也回退，则使用git reset - - hard HEAD^ 回退第一个记录&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git reset - - hard HEAD~2 回退第二个记录&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还可以使用如下方法：&lt;/p&gt;
&lt;p&gt;将当前的工作目录完全回滚到指定的版本号，假设如下图，我们有A-G五次提交的版本，其中C的版本号是 bbaf6fb5060b4875b18ff9ff637ce118256d6f20，我们执行了’git reset bbaf6fb5060b4875b18ff9ff637ce118256d6f20’那么结果就只剩下了A-C三个提交的版本&lt;/p&gt;
&lt;h3 id=&quot;3-15-Git-revert&quot;&gt;&lt;a href=&quot;#3-15-Git-revert&quot; class=&quot;headerlink&quot; title=&quot;3.15. Git revert&quot;&gt;&lt;/a&gt;3.15. Git revert&lt;/h3&gt;&lt;p&gt;还原某次对版本的修改，例如：git revert commit_id （其中commit_id为commit代码时生成的一个唯一表示的字符串）&lt;/p&gt;
&lt;p&gt;例如：（3.6中）git revert dfb02e6e4f2f7b573337763e5c0013802e392818 （执行此操作，则还原上一次commit的操作）&lt;/p&gt;
&lt;h3 id=&quot;3-16-Git-config&quot;&gt;&lt;a href=&quot;#3-16-Git-config&quot; class=&quot;headerlink&quot; title=&quot;3.16. Git config&quot;&gt;&lt;/a&gt;3.16. Git config&lt;/h3&gt;&lt;p&gt;利用这个命令可以新增、更改Git的各种设置，例如 “git config branch.master.remote origin” 就将master的远程版本库设置为别名叫做origin版本库。&lt;/p&gt;
&lt;h3 id=&quot;3-17-Git-show&quot;&gt;&lt;a href=&quot;#3-17-Git-show&quot; class=&quot;headerlink&quot; title=&quot;3.17. Git show&quot;&gt;&lt;/a&gt;3.17. Git show&lt;/h3&gt;&lt;p&gt;显示对象的不同类型。&lt;/p&gt;
&lt;h3 id=&quot;3-18-Git-tag&quot;&gt;&lt;a href=&quot;#3-18-Git-tag&quot; class=&quot;headerlink&quot; title=&quot;3.18. Git tag&quot;&gt;&lt;/a&gt;3.18. Git tag&lt;/h3&gt;&lt;p&gt;创建、列出、删除或者验证一个标签对象（使用GPG签名的）。&lt;/p&gt;
&lt;p&gt;可以将某个具体的版本打上一个标签，这样就不需要记忆复杂的版本号哈希值字符串了，例如你可以使用 “git tag revert_version bbaf6fb5060b4875b18ff9ff637ce118256d6f20” 来标记这个被你还原的版本，那么以后你想查看该版本时，就可以使用 revert_version标签名，而不是哈希值了。&lt;/p&gt;
&lt;h2 id=&quot;4-Git服务器操作命令（与服务器交互）&quot;&gt;&lt;a href=&quot;#4-Git服务器操作命令（与服务器交互）&quot; class=&quot;headerlink&quot; title=&quot;4. Git服务器操作命令（与服务器交互）&quot;&gt;&lt;/a&gt;4. Git服务器操作命令（与服务器交互）&lt;/h2&gt;&lt;h3 id=&quot;4-1-Git-clone&quot;&gt;&lt;a href=&quot;#4-1-Git-clone&quot; class=&quot;headerlink&quot; title=&quot;4.1. Git clone&quot;&gt;&lt;/a&gt;4.1. Git clone&lt;/h3&gt;&lt;p&gt;取出服务器的仓库的代码到本地建立的目录中（与服务器交互）&lt;/p&gt;
&lt;p&gt;通过git clone获取远端git库后，.git/config中的开发者信息不会被一起clone过来。仍然需要为本地库的.git/config文件添加开发者信息。此外，开发者还需要自己添加   . gitignore文件。&lt;/p&gt;
&lt;p&gt;通过git clone获取的远端git库，只包含了远端git库的当前工作分支。如果想获取其它分支信息，需要使用 “git branch –r” 来查看， 如果需要将远程的其它分支代码也获取过来，可以使用命令 “ git checkout -b 本地分支名 远程分支名”，其中，远程分支名为 “git branch –r” 所列出的分支名， 一般是诸如“origin/分支名”的样子。如果本地分支名已经存在， 则不需要“-b”参数。&lt;/p&gt;
&lt;h3 id=&quot;4-2-Git-pull&quot;&gt;&lt;a href=&quot;#4-2-Git-pull&quot; class=&quot;headerlink&quot; title=&quot;4.2. Git pull&quot;&gt;&lt;/a&gt;4.2. Git pull&lt;/h3&gt;&lt;p&gt;从服务器的仓库中获取代码，和本地代码合并。（与服务器交互，从服务器上下载最新代码，等同于： Git fetch + Git merge）&lt;/p&gt;
&lt;p&gt;从其它的版本库（既可以是远程的也可以是本地的）将代码更新到本地，例如：“git pull origin master ”就是将origin这个版本库的代码更新到本地的master主分支。&lt;/p&gt;
&lt;p&gt;git pull可以从任意一个git库获取某个分支的内容。用法如下：&lt;/p&gt;
&lt;p&gt;git pull username@ipaddr:远端repository名远端分支名 本地分支名。这条命令将从远端git库的远端分支名获取到本地git库的一个本地分支中。其中，如果不写本地分支名，则默认pull到本地当前分支。&lt;/p&gt;
&lt;p&gt;需要注意的是，git pull也可以用来合并分支。 和git merge的作用相同。 因此，如果你的本地分支已经有内容，则git pull会合并这些文件，如果有冲突会报警。&lt;/p&gt;
&lt;h3 id=&quot;4-3-Git-push&quot;&gt;&lt;a href=&quot;#4-3-Git-push&quot; class=&quot;headerlink&quot; title=&quot;4.3. Git push&quot;&gt;&lt;/a&gt;4.3. Git push&lt;/h3&gt;&lt;p&gt;将本地commit的代码更新到远程版本库中，例如 “git push origin”就会将本地的代码更新到名为orgin的远程版本库中。&lt;/p&gt;
&lt;p&gt;git push和git pull正好想反，是将本地某个分支的内容提交到远端某个分支上。用法： git pushusername@ipaddr:远端repository名本地分支名 远端分支名。这条命令将本地git库的一个本地分支push到远端git库的远端分支名中。&lt;/p&gt;
&lt;p&gt;需要格外注意的是，git push好像不会自动合并文件。因此，如果git push时，发生了冲突，就会被后push的文件内容强行覆盖，而且没有什么提示。 这在合作开发时是很危险的事情。&lt;/p&gt;
&lt;h3 id=&quot;4-4-Git-fetch&quot;&gt;&lt;a href=&quot;#4-4-Git-fetch&quot; class=&quot;headerlink&quot; title=&quot;4.4. Git fetch&quot;&gt;&lt;/a&gt;4.4. Git fetch&lt;/h3&gt;&lt;p&gt;从服务器的仓库中下载代码。（与服务器交互，从服务器上下载最新代码）&lt;/p&gt;
&lt;p&gt;相当于从远程获取最新版本到本地，不会自动merge，比Git pull更安全些。&lt;/p&gt;
&lt;p&gt;使用此方法来获取服务器上的更新。&lt;/p&gt;
&lt;p&gt;例如：如果使用git checkout nov/eclair_rocket （nov/eclair_rocket为服务器上的分支名），则是获取上次使用git fetch命令时从服务器上下载的代码；如果先使用 git fetch ，再使用git checkout nov/eclair_rocket，则是先从服务器上获取最新的更新信息，然后从服务器上下载最新的代码。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git操作指南&quot;&gt;&lt;a href=&quot;#Git操作指南&quot; class=&quot;headerlink&quot; title=&quot;Git操作指南&quot;&gt;&lt;/a&gt;Git操作指南&lt;/h1&gt;&lt;h2 id=&quot;1-Git概念&quot;&gt;&lt;a href=&quot;#1-Git概念&quot; class=&quot;headerlink
    
    </summary>
    
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>iOS 四种保存数据的方式</title>
    <link href="http://yoursite.com/2016/03/14/iOS%20%E5%9B%9B%E7%A7%8D%E4%BF%9D%E5%AD%98%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2016/03/14/iOS 四种保存数据的方式/</id>
    <published>2016-03-14T09:28:47.000Z</published>
    <updated>2016-03-14T09:40:22.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;iOS-四种保存数据的方式&quot;&gt;&lt;a href=&quot;#iOS-四种保存数据的方式&quot; class=&quot;headerlink&quot; title=&quot;iOS 四种保存数据的方式&quot;&gt;&lt;/a&gt;iOS 四种保存数据的方式&lt;/h1&gt;&lt;p&gt;在iOS开发过程中，不管是做什么应用，都会碰到数据保存的问题。将数据保存到本地，能够让程序的运行更加流畅，不会出现让人厌恶的菊花形状，使得用户体验更好。下面介绍一下数据保存的方式：&lt;/p&gt;
&lt;h2 id=&quot;1-NSKeyedArchiver：采用归档的形式来保存数据，该数据对象需要遵守NSCoding协议，并且该对象对应的类必须提供encodeWithCoder-和initWithCoder-方法。前一个方法告诉系统怎么对对象进行编码，而后一个方法则是告诉系统怎么对对象进行解码。例如对Possession对象归档保存。&quot;&gt;&lt;a href=&quot;#1-NSKeyedArchiver：采用归档的形式来保存数据，该数据对象需要遵守NSCoding协议，并且该对象对应的类必须提供encodeWithCoder-和initWithCoder-方法。前一个方法告诉系统怎么对对象进行编码，而后一个方法则是告诉系统怎么对对象进行解码。例如对Possession对象归档保存。&quot; class=&quot;headerlink&quot; title=&quot;1.NSKeyedArchiver：采用归档的形式来保存数据，该数据对象需要遵守NSCoding协议，并且该对象对应的类必须提供encodeWithCoder:和initWithCoder:方法。前一个方法告诉系统怎么对对象进行编码，而后一个方法则是告诉系统怎么对对象进行解码。例如对Possession对象归档保存。&quot;&gt;&lt;/a&gt;1.NSKeyedArchiver：采用归档的形式来保存数据，该数据对象需要遵守NSCoding协议，并且该对象对应的类必须提供encodeWithCoder:和initWithCoder:方法。前一个方法告诉系统怎么对对象进行编码，而后一个方法则是告诉系统怎么对对象进行解码。例如对Possession对象归档保存。&lt;/h2&gt;&lt;h3 id=&quot;定义Possession：&quot;&gt;&lt;a href=&quot;#定义Possession：&quot; class=&quot;headerlink&quot; title=&quot;定义Possession：&quot;&gt;&lt;/a&gt;定义Possession：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@interface  Possession：NSObject&amp;lt;NSCoding&amp;gt;&amp;#123;//遵守NSCoding协议&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       NSString *name;//待归档类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@implementation Possession&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(void)encodeWithCoder:(NSCoder *)aCoder&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [aCoder encodeObject:name forKey:@&amp;quot;name&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(void)initWithCoder:(NSCoder *)aDecoder&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name=[[aDeCoder decodeObjectforKey:@&amp;quot;name&amp;quot;] retain];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;归档操作：&quot;&gt;&lt;a href=&quot;#归档操作：&quot; class=&quot;headerlink&quot; title=&quot;归档操作：&quot;&gt;&lt;/a&gt;归档操作：&lt;/h3&gt;&lt;p&gt;如果对Possession对象allPossession归档保存，只需要NSCoder子类NSKeyedArchiver的方法archiveRootObject:toFile: 即可。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;NSString *path = [self possessionArchivePath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[NSKeyedArchiver archiveRootObject:allPossessions toFile:path];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;解压操作：&quot;&gt;&lt;a href=&quot;#解压操作：&quot; class=&quot;headerlink&quot; title=&quot;解压操作：&quot;&gt;&lt;/a&gt;解压操作：&lt;/h3&gt;&lt;p&gt;同样调用NSCoder子类NSKeyedArchiver的方法unarchiveRootObject:toFile: 即可&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;allPossessions = [[NSKeyedUnarchiver unarchiveObjectWithFile:path] retain];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;缺点：归档的形式来保存数据，只能一次性归档保存以及一次性解压。所以只能针对小量数据，而且对数据操作比较笨拙，即如果想改动数据的某一小部分，还是需要解压整个数据或者归档整个数据。&lt;/p&gt;
&lt;h2 id=&quot;2-NSUserDefaults：用来保存应用程序设置和属性、用户保存的数据。用户再次打开程序或开机后这些数据仍然存在。NSUserDefaults可以存储的数据类型包括：NSData、NSString、NSNumber、NSDate、NSArray、NSDictionary。如果要存储其他类型，则需要转换为前面的类型，才能用NSUserDefaults存储。具体实现为：&quot;&gt;&lt;a href=&quot;#2-NSUserDefaults：用来保存应用程序设置和属性、用户保存的数据。用户再次打开程序或开机后这些数据仍然存在。NSUserDefaults可以存储的数据类型包括：NSData、NSString、NSNumber、NSDate、NSArray、NSDictionary。如果要存储其他类型，则需要转换为前面的类型，才能用NSUserDefaults存储。具体实现为：&quot; class=&quot;headerlink&quot; title=&quot;2.NSUserDefaults：用来保存应用程序设置和属性、用户保存的数据。用户再次打开程序或开机后这些数据仍然存在。NSUserDefaults可以存储的数据类型包括：NSData、NSString、NSNumber、NSDate、NSArray、NSDictionary。如果要存储其他类型，则需要转换为前面的类型，才能用NSUserDefaults存储。具体实现为：&quot;&gt;&lt;/a&gt;2.NSUserDefaults：用来保存应用程序设置和属性、用户保存的数据。用户再次打开程序或开机后这些数据仍然存在。NSUserDefaults可以存储的数据类型包括：NSData、NSString、NSNumber、NSDate、NSArray、NSDictionary。如果要存储其他类型，则需要转换为前面的类型，才能用NSUserDefaults存储。具体实现为：&lt;/h2&gt;&lt;h3 id=&quot;保存数据：&quot;&gt;&lt;a href=&quot;#保存数据：&quot; class=&quot;headerlink&quot; title=&quot;保存数据：&quot;&gt;&lt;/a&gt;保存数据：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSUserDefaults *defaults =[NSUserDefaults standardUserDefaults];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *name =@”default string“;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[defaults setObject:firstName forKey:@&amp;quot;name&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//获得UIImage实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIImage *image=[[UIImage alloc]initWithContentsOfFile:@&amp;quot;photo.jpg&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//UIImage对象转换成NSData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSData *imageData = UIImageJPEGRepresentation(image, 100);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//用synchronize方法把数据持久化到standardUserDefaults数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[defaults synchronize];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;读取数据：&quot;&gt;&lt;a href=&quot;#读取数据：&quot; class=&quot;headerlink&quot; title=&quot;读取数据：&quot;&gt;&lt;/a&gt;读取数据：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSUserDefaults *defaults =[NSUserDefaults standardUserDefaults];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//根据键值取出name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *name = [defaults objectForKey:@&amp;quot;name&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSData *imageData = [defaults dataForKey:@&amp;quot;image&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//NSData转换为UIImage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIImage *Image = [UIImage imageWithData:imageData];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-Write写入方式：永久保存在磁盘中。具体方法为：&quot;&gt;&lt;a href=&quot;#3-Write写入方式：永久保存在磁盘中。具体方法为：&quot; class=&quot;headerlink&quot; title=&quot;3. Write写入方式：永久保存在磁盘中。具体方法为：&quot;&gt;&lt;/a&gt;3. Write写入方式：永久保存在磁盘中。具体方法为：&lt;/h3&gt;&lt;p&gt;##第一步：获得文件即将保存的路径：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSArray *documentPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,  NSUserDomainMask,YES);//使用C函数NSSearchPathForDirectoriesInDomains来获得沙盒中目录的全路径。该函数有三个参数，目录类型、he domain mask、布尔值。其中布尔值表示是否需要通过～扩展路径。而且第一个参数是不变的，即为NSSearchPathDirectory 。在IOS中后两个参数也是不变的，即为：NSUserDomainMask 和 YES。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSString *ourDocumentPath =[documentPaths objectAtIndex:0];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有一种方法是使用NSHomeDirectory函数获得sandbox的路径。具体的用法为：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Once you have the full sandbox path, you can create a path from it，但是不能在sandbox的本文件层上写文件也不能创建目录，而应该是此基础上创建一个新的可写的目录，例如Documents,Library或者temp。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *sandboxPath = NSHomeDirectory();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//将Documents添加到sandbox路径上，具体原因前面分析了！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *documentPath = [sandboxPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stringByAppendingPathComponent:@&amp;quot;Documents&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这两者的区别就是：使用NSSearchPathForDirectoriesInDomains比在NSHomeDirectory后面添加Document更加安全。因为该文件目录可能在未来发送的系统上发生改变。&lt;/p&gt;
&lt;h3 id=&quot;第二步：生成在该路径下的文件：&quot;&gt;&lt;a href=&quot;#第二步：生成在该路径下的文件：&quot; class=&quot;headerlink&quot; title=&quot;第二步：生成在该路径下的文件：&quot;&gt;&lt;/a&gt;第二步：生成在该路径下的文件：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//fileName就是保存文件的文件名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *FileName=[documentDirectory stringByAppendingPathComponent:fileName];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;第三步：往文件中写入数据：&quot;&gt;&lt;a href=&quot;#第三步：往文件中写入数据：&quot; class=&quot;headerlink&quot; title=&quot;第三步：往文件中写入数据：&quot;&gt;&lt;/a&gt;第三步：往文件中写入数据：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//将NSData类型对象data写入文件，文件名为FileName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[data writeToFile:FileName atomically:YES];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;最后：从文件中读出数据：&quot;&gt;&lt;a href=&quot;#最后：从文件中读出数据：&quot; class=&quot;headerlink&quot; title=&quot;最后：从文件中读出数据：&quot;&gt;&lt;/a&gt;最后：从文件中读出数据：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//从FileName中读取出数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSData data=[NSData dataWithContentsOfFile:FileName options:0 error:NULL];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;4-SQLite：采用SQLite数据库来存储数据。SQLite作为一中小型数据库，应用ios中，跟前三种保存方式相比，相对比较复杂一些。还是一步步来吧！&quot;&gt;&lt;a href=&quot;#4-SQLite：采用SQLite数据库来存储数据。SQLite作为一中小型数据库，应用ios中，跟前三种保存方式相比，相对比较复杂一些。还是一步步来吧！&quot; class=&quot;headerlink&quot; title=&quot;4. SQLite：采用SQLite数据库来存储数据。SQLite作为一中小型数据库，应用ios中，跟前三种保存方式相比，相对比较复杂一些。还是一步步来吧！&quot;&gt;&lt;/a&gt;4. SQLite：采用SQLite数据库来存储数据。SQLite作为一中小型数据库，应用ios中，跟前三种保存方式相比，相对比较复杂一些。还是一步步来吧！&lt;/h2&gt;&lt;h3 id=&quot;第一步：需要添加SQLite相关的库以及头文件：在项目文件的Build-Phases下，找到Link-Binary-Library-ies-，添加libsqlite3-0-dylib（libsqlite3-dylib与前者的区别暂时不知，两者应该差不多）；在项目文件中头文件或者源文件中添加头文件-import-“-usr-include-sqlite3-h”&quot;&gt;&lt;a href=&quot;#第一步：需要添加SQLite相关的库以及头文件：在项目文件的Build-Phases下，找到Link-Binary-Library-ies-，添加libsqlite3-0-dylib（libsqlite3-dylib与前者的区别暂时不知，两者应该差不多）；在项目文件中头文件或者源文件中添加头文件-import-“-usr-include-sqlite3-h”&quot; class=&quot;headerlink&quot; title=&quot;第一步：需要添加SQLite相关的库以及头文件：在项目文件的Build Phases下，找到Link Binary Library(ies)，添加libsqlite3.0.dylib（libsqlite3.dylib与前者的区别暂时不知，两者应该差不多）；在项目文件中头文件或者源文件中添加头文件#import “/usr/include/sqlite3.h”&quot;&gt;&lt;/a&gt;第一步：需要添加SQLite相关的库以及头文件：在项目文件的Build Phases下，找到Link Binary Library(ies)，添加libsqlite3.0.dylib（libsqlite3.dylib与前者的区别暂时不知，两者应该差不多）；在项目文件中头文件或者源文件中添加头文件#import “/usr/include/sqlite3.h”&lt;/h3&gt;&lt;h3 id=&quot;第二步：开始使用SQLite：&quot;&gt;&lt;a href=&quot;#第二步：开始使用SQLite：&quot; class=&quot;headerlink&quot; title=&quot;第二步：开始使用SQLite：&quot;&gt;&lt;/a&gt;第二步：开始使用SQLite：&lt;/h3&gt;&lt;p&gt;使用前注意：如果不往数据库里面添加任何的表，这个数据库等于没有建立，不会在硬盘上产生任何文件，如果数据库已经存在，则会打开这个数据库。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSArray *documentsPaths=NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask , YES);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *databaseFilePath=[[documentsPaths objectAtIndex:0] stringByAppendingPathComponent:@&amp;quot;mydb&amp;quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//上面两句已经比较熟悉了吧！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//打开数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (sqlite3_open([databaseFilePath UTF8String], &amp;amp;database)==SQLITE_OK) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;sqlite dadabase is opened.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&amp;#123; return;&amp;#125;//打开不成功就返回&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;在打开了数据库的前提下，如果数据库没有表，那就开始建表了哦！&quot;&gt;&lt;a href=&quot;#在打开了数据库的前提下，如果数据库没有表，那就开始建表了哦！&quot; class=&quot;headerlink&quot; title=&quot;在打开了数据库的前提下，如果数据库没有表，那就开始建表了哦！&quot;&gt;&lt;/a&gt;在打开了数据库的前提下，如果数据库没有表，那就开始建表了哦！&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char *error;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const char *createSql=&amp;quot;create table(id integer primary key autoincrement, name text)&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (sqlite3_exec(database, createSql, NULL, NULL, &amp;amp;error)==SQLITE_OK) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;create table is ok.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       NSLog(@&amp;quot;error: %s&amp;quot;,error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       sqlite3_free(error);//每次使用完毕清空error字符串，提供给下一次使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;建表完成之后，就开始插入记录：&quot;&gt;&lt;a href=&quot;#建表完成之后，就开始插入记录：&quot; class=&quot;headerlink&quot; title=&quot;建表完成之后，就开始插入记录：&quot;&gt;&lt;/a&gt;建表完成之后，就开始插入记录：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const char *insertSql=&amp;quot;insert into a person (name) values(‘gg’)&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (sqlite3_exec(database, insertSql, NULL, NULL, &amp;amp;error)==SQLITE_OK) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;insert operation is ok.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       NSLog(@&amp;quot;error: %s&amp;quot;,error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       sqlite3_free(error);//每次使用完毕清空error字符串，提供给下一次使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;下一步，查询记录：&quot;&gt;&lt;a href=&quot;#下一步，查询记录：&quot; class=&quot;headerlink&quot; title=&quot;下一步，查询记录：&quot;&gt;&lt;/a&gt;下一步，查询记录：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const char *selectSql=&amp;quot;select id,name from a person&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlite3_stmt *statement;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (sqlite3_prepare_v2(database,selectSql, -1, &amp;amp;statement, nil)==SQLITE_OK) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&amp;quot;select operation is ok.&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       NSLog(@&amp;quot;error: %s&amp;quot;,error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       sqlite3_free(error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while(sqlite3_step(statement)==SQLITE_ROW) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int _id=sqlite3_column_int(statement, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSString *name=(char*)sqlite3_column_text(statement, 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSLog(@&amp;quot;row&amp;gt;&amp;gt;id %i, name %s&amp;quot;,_id,name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sqlite3_finalize(statement);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;最后，关闭数据库：&quot;&gt;&lt;a href=&quot;#最后，关闭数据库：&quot; class=&quot;headerlink&quot; title=&quot;最后，关闭数据库：&quot;&gt;&lt;/a&gt;最后，关闭数据库：&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sqlite3_close(database);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：写入数据库，字符串可以采用char方式，而从数据库中取出char类型，当char类型有表示中文字符时，会出现乱码。这是因为数据库默认使用ascII编码方式。所以要想正确从数据库中取出中文，需要用NSString来接收从数据库取出的字符串。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;iOS-四种保存数据的方式&quot;&gt;&lt;a href=&quot;#iOS-四种保存数据的方式&quot; class=&quot;headerlink&quot; title=&quot;iOS 四种保存数据的方式&quot;&gt;&lt;/a&gt;iOS 四种保存数据的方式&lt;/h1&gt;&lt;p&gt;在iOS开发过程中，不管是做什么应用，都会碰到数据保
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>介绍一些正在使用或者好玩的iOS越狱插件</title>
    <link href="http://yoursite.com/2016/03/11/%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%BA%9B%E6%AD%A3%E5%9C%A8%E4%BD%BF%E7%94%A8%E6%88%96%E8%80%85%E5%A5%BD%E7%8E%A9%E7%9A%84iOS%E8%B6%8A%E7%8B%B1%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2016/03/11/介绍一些正在使用或者好玩的iOS越狱插件/</id>
    <published>2016-03-11T07:07:58.000Z</published>
    <updated>2016-03-17T08:21:31.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;介绍一些正在使用或者好玩的iOS越狱插件&quot;&gt;&lt;a href=&quot;#介绍一些正在使用或者好玩的iOS越狱插件&quot; class=&quot;headerlink&quot; title=&quot;介绍一些正在使用或者好玩的iOS越狱插件&quot;&gt;&lt;/a&gt;介绍一些正在使用或者好玩的iOS越狱插件&lt;/h1&gt;&lt;h2 id=&quot;什么是越狱&quot;&gt;&lt;a href=&quot;#什么是越狱&quot; class=&quot;headerlink&quot; title=&quot;什么是越狱&quot;&gt;&lt;/a&gt;什么是越狱&lt;/h2&gt;&lt;p&gt;“越狱”指的是绕过苹果在其设备上对操作系统施加的很多限制，从而可以“Root访问”基础的操作系统。简单来说，“越狱”可以让iPhone用户从苹果应用商店外下载其他非官方的应用程序，或者对用户界面进行定制。&lt;/p&gt;
&lt;h2 id=&quot;插件&quot;&gt;&lt;a href=&quot;#插件&quot; class=&quot;headerlink&quot; title=&quot;插件&quot;&gt;&lt;/a&gt;插件&lt;/h2&gt;&lt;h3 id=&quot;DataMember&quot;&gt;&lt;a href=&quot;#DataMember&quot; class=&quot;headerlink&quot; title=&quot;DataMember&quot;&gt;&lt;/a&gt;DataMember&lt;/h3&gt;&lt;p&gt;一款可以实时显示网络数据的悬浮窗控件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通知中心显示wifi和数据流量信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;状态显示数据传转速率&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;按天,周,月显示数据使用情况&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可通过设置选项自定义显示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;EnableLivePhotos&quot;&gt;&lt;a href=&quot;#EnableLivePhotos&quot; class=&quot;headerlink&quot; title=&quot;EnableLivePhotos&quot;&gt;&lt;/a&gt;EnableLivePhotos&lt;/h3&gt;&lt;p&gt;使用EnableLivePhotos后不仅仅是可以在拍照界面中开启LivePhotos模式，还能在图库中像iPhone6s系列那样浏览拍下来的动态图，长按即可查看整个动态效果;并且可以通过“分享”按钮将 LivePhotos设置成动态的桌面或者锁屏壁纸，同样通过长按即可让图片动起来。&lt;/p&gt;
&lt;h3 id=&quot;Kuaidial&quot;&gt;&lt;a href=&quot;#Kuaidial&quot; class=&quot;headerlink&quot; title=&quot;Kuaidial&quot;&gt;&lt;/a&gt;Kuaidial&lt;/h3&gt;&lt;p&gt;Kuaidial是一款知名的iOS越狱来电归属地插件。众所周知，苹果在iOS8中首次加入了来电归属地功能，但是该功能仅限于陌生来电，对于已加入通讯录中的号码则不具备归属地显示功能，并且也不支持短信归属地及T9拨号等功能。而Kuaidial之所以深受越狱用户的喜爱，正是因为其能满足用户在这些方面的需求，更全面的电话/短信归属地显示功能、更方便快捷的T9拨号，还能支持自定义拦截黑名单等，多少用户越狱正是为Kuaidial而来。&lt;/p&gt;
&lt;h3 id=&quot;Flex2&quot;&gt;&lt;a href=&quot;#Flex2&quot; class=&quot;headerlink&quot; title=&quot;Flex2&quot;&gt;&lt;/a&gt;Flex2&lt;/h3&gt;&lt;p&gt;这款插件想必很多熟悉越狱的用户都不会陌生，它就是大名鼎鼎的Flex。最新版的Flex2拥有“反越狱检查”功能，可以让越狱后的设备避开App本身的检查机制，从而继续使用方便快捷的指纹支付功能。此外，该插件还能支持去掉部分App中的广告，功能甚是强大。&lt;/p&gt;
&lt;h3 id=&quot;revealMenu&quot;&gt;&lt;a href=&quot;#revealMenu&quot; class=&quot;headerlink&quot; title=&quot;revealMenu&quot;&gt;&lt;/a&gt;revealMenu&lt;/h3&gt;&lt;p&gt;一款名为Forcy的iOS9越狱插件可以让旧iPhone玩上3D Touch功能，事实上这并不是唯一一款类iPhone6s 3D Touch功能插件，下面小编为你推荐另外一款3D Touch插件——revealMenu，据已经体验过的小伙伴反馈，这款插件的功能还强过Forcy。&lt;br&gt;在操作方式上，Forcy通过上滑触发，而revealMenu通过长按触发，并且配合另一个插件Hapticle提供的振动反馈，做到跟iPhone6s几乎一模一样。(Hapticle同样适用于Forcy，如果你更喜欢Forcy，也可以装Hapticle添加振动反馈)&lt;/p&gt;
&lt;h3 id=&quot;Springtomize-3&quot;&gt;&lt;a href=&quot;#Springtomize-3&quot; class=&quot;headerlink&quot; title=&quot;Springtomize 3&quot;&gt;&lt;/a&gt;Springtomize 3&lt;/h3&gt;&lt;p&gt;大家对于Springtomize系列插件应该是非常熟悉了，它可以对iOS中的大部分元素进行自定义，堪称插件中的“瑞士军刀”，它提供了许多功能，包括：动画效果、图标美化、锁屏界面自定义、隐藏Dock栏、控制中心增强等。&lt;/p&gt;
&lt;h3 id=&quot;Auxo-3&quot;&gt;&lt;a href=&quot;#Auxo-3&quot; class=&quot;headerlink&quot; title=&quot;Auxo 3&quot;&gt;&lt;/a&gt;Auxo 3&lt;/h3&gt;&lt;p&gt;大部分越狱用户对Auxo 3应该不会感到陌生。而对于新用户来说，如果你希望寻找新的应用切换体验的话，Auxo 3一定不可错过。Auxo 3将控制中心和应用切换界面进行了整合，用户只需从屏幕底部向上滑动即可呼出新的界面。&lt;/p&gt;
&lt;h3 id=&quot;Activator&quot;&gt;&lt;a href=&quot;#Activator&quot; class=&quot;headerlink&quot; title=&quot;Activator&quot;&gt;&lt;/a&gt;Activator&lt;/h3&gt;&lt;p&gt;一直以来，Activator都是iOS平台上最受欢迎的插件之一，因为它可以带来各种各样的手势操作，最大限度地解放手机上的Home键。在手机的主界面上，用户可以选择在多种情况下使用手势：任何地方、主屏幕上、应用内和锁屏界面。一般情况下，任何地方就是指用户设置的快捷键会在主屏幕和应用内触发，但不包括锁屏状态。&lt;/p&gt;
&lt;h3 id=&quot;WinterBoard&quot;&gt;&lt;a href=&quot;#WinterBoard&quot; class=&quot;headerlink&quot; title=&quot;WinterBoard&quot;&gt;&lt;/a&gt;WinterBoard&lt;/h3&gt;&lt;p&gt;目前适配iOS9的WinterBoard已经上架Cydia，iOS设备美化控不能错过。作为越狱的一个主要原因，让iOS设备更个性化一直是不少用户的愿望，而WinterBoard则提供了这样一个平台。如果说iOS发展到今天已经没有其它必要越狱的话，美化或许会是最后的一个越狱理由。  &lt;/p&gt;
&lt;h3 id=&quot;BioProtect&quot;&gt;&lt;a href=&quot;#BioProtect&quot; class=&quot;headerlink&quot; title=&quot;BioProtect&quot;&gt;&lt;/a&gt;BioProtect&lt;/h3&gt;&lt;p&gt;手机越来越成为人们生活的私密物品，大多数人的手机中多多少少都会储存着一些私密信息如私照、视频或是短信等等，而在日常使用中又难免有时会碰到别人借手机的情景，这个时候对私密信息进行加密就显得非常重要了。为你推荐一款越狱指纹加密插件——BioProtect，支持iOS9越狱。&lt;/p&gt;
&lt;h3 id=&quot;Forcy&quot;&gt;&lt;a href=&quot;#Forcy&quot; class=&quot;headerlink&quot; title=&quot;Forcy&quot;&gt;&lt;/a&gt;Forcy&lt;/h3&gt;&lt;p&gt;这款插件名为Forcy，与iPhone6s上通过按压呼出二级菜单不同，Forcy只需用户对桌面上的应用图标执行上滑操作便可呼出类似3D Touch的快捷菜单。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;介绍一些正在使用或者好玩的iOS越狱插件&quot;&gt;&lt;a href=&quot;#介绍一些正在使用或者好玩的iOS越狱插件&quot; class=&quot;headerlink&quot; title=&quot;介绍一些正在使用或者好玩的iOS越狱插件&quot;&gt;&lt;/a&gt;介绍一些正在使用或者好玩的iOS越狱插件&lt;/h1&gt;&lt;
    
    </summary>
    
      <category term="越狱插件" scheme="http://yoursite.com/categories/%E8%B6%8A%E7%8B%B1%E6%8F%92%E4%BB%B6/"/>
    
      <category term="iOS" scheme="http://yoursite.com/categories/%E8%B6%8A%E7%8B%B1%E6%8F%92%E4%BB%B6/iOS/"/>
    
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="越狱插件" scheme="http://yoursite.com/tags/%E8%B6%8A%E7%8B%B1%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>iOS9 3DTouch、ShortcutItem、Peek And Pop技术一览</title>
    <link href="http://yoursite.com/2016/03/11/iOS9%203DTouch%E3%80%81ShortcutItem%E3%80%81Peek%20And%20Pop%E6%8A%80%E6%9C%AF%E4%B8%80%E8%A7%88/"/>
    <id>http://yoursite.com/2016/03/11/iOS9 3DTouch、ShortcutItem、Peek And Pop技术一览/</id>
    <published>2016-03-11T03:15:48.000Z</published>
    <updated>2016-03-11T07:27:16.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;iOS9-3DTouch、ShortcutItem、Peek-And-Pop技术一览&quot;&gt;&lt;a href=&quot;#iOS9-3DTouch、ShortcutItem、Peek-And-Pop技术一览&quot; class=&quot;headerlink&quot; title=&quot;iOS9 3DTouch、ShortcutItem、Peek And Pop技术一览&quot;&gt;&lt;/a&gt;iOS9 3DTouch、ShortcutItem、Peek And Pop技术一览&lt;/h1&gt;&lt;h2 id=&quot;3DTouch&quot;&gt;&lt;a href=&quot;#3DTouch&quot; class=&quot;headerlink&quot; title=&quot;3DTouch&quot;&gt;&lt;/a&gt;3DTouch&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://developer.apple.com/ios/3d-touch/images/pressure-sensitivity_2x.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;UITouch类里API的变化&quot;&gt;&lt;a href=&quot;#UITouch类里API的变化&quot; class=&quot;headerlink&quot; title=&quot;UITouch类里API的变化&quot;&gt;&lt;/a&gt;UITouch类里API的变化&lt;/h2&gt;&lt;h3 id=&quot;iOS9中添加的属性&quot;&gt;&lt;a href=&quot;#iOS9中添加的属性&quot; class=&quot;headerlink&quot; title=&quot;iOS9中添加的属性&quot;&gt;&lt;/a&gt;iOS9中添加的属性&lt;/h3&gt;&lt;h6 id=&quot;altitudeAngle&quot;&gt;&lt;a href=&quot;#altitudeAngle&quot; class=&quot;headerlink&quot; title=&quot;altitudeAngle&quot;&gt;&lt;/a&gt;altitudeAngle&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当笔平行于平面时,该值为0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当笔垂直于平面时,该值为Pi / 2&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;estimatedProperties&quot;&gt;&lt;a href=&quot;#estimatedProperties&quot; class=&quot;headerlink&quot; title=&quot;estimatedProperties&quot;&gt;&lt;/a&gt;estimatedProperties&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当前触摸对象估计的触摸特性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;返回值是UITouchPropertyies&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;updatedProperties&quot;&gt;&lt;a href=&quot;#updatedProperties&quot; class=&quot;headerlink&quot; title=&quot;updatedProperties&quot;&gt;&lt;/a&gt;updatedProperties&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当前触摸对象已经更新的触摸特性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;返回值是UITouchPropertyies&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;estimationUpdateIndex&quot;&gt;&lt;a href=&quot;#estimationUpdateIndex&quot; class=&quot;headerlink&quot; title=&quot;estimationUpdateIndex&quot;&gt;&lt;/a&gt;estimationUpdateIndex&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当每个触摸对象的触摸特性发生变化时，该值将会单独增加&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;返回值是NSNumber&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;iOS9中添加的方法&quot;&gt;&lt;a href=&quot;#iOS9中添加的方法&quot; class=&quot;headerlink&quot; title=&quot;iOS9中添加的方法&quot;&gt;&lt;/a&gt;iOS9中添加的方法&lt;/h3&gt;&lt;h6 id=&quot;PreciseLocationInView&quot;&gt;&lt;a href=&quot;#PreciseLocationInView&quot; class=&quot;headerlink&quot; title=&quot;- PreciseLocationInView:&quot;&gt;&lt;/a&gt;- PreciseLocationInView:&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;当前触摸对象的坐标&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;PrecisePreviousLocationInView&quot;&gt;&lt;a href=&quot;#PrecisePreviousLocationInView&quot; class=&quot;headerlink&quot; title=&quot;- PrecisePreviousLocationInView:&quot;&gt;&lt;/a&gt;- PrecisePreviousLocationInView:&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;当前触摸对象的前置坐标&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;azimuthAngleInview&quot;&gt;&lt;a href=&quot;#azimuthAngleInview&quot; class=&quot;headerlink&quot; title=&quot;- azimuthAngleInview:&quot;&gt;&lt;/a&gt;- azimuthAngleInview:&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;沿着x轴正向的方位角&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当与x轴正向方向相同时,该值为0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当view参数为nil时，默认为keyWindow&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;azimuthUnitVectorInView&quot;&gt;&lt;a href=&quot;#azimuthUnitVectorInView&quot; class=&quot;headerlink&quot; title=&quot;- azimuthUnitVectorInView:&quot;&gt;&lt;/a&gt;- azimuthUnitVectorInView:&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;当前触摸对象的方向上的单位向量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当view参数为nil时，默认为keyWindow&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;UIForceTouchCapability&quot;&gt;&lt;a href=&quot;#UIForceTouchCapability&quot; class=&quot;headerlink&quot; title=&quot;UIForceTouchCapability&quot;&gt;&lt;/a&gt;UIForceTouchCapability&lt;/h3&gt;&lt;h6 id=&quot;UIForceTouchCapabilityUnknown&quot;&gt;&lt;a href=&quot;#UIForceTouchCapabilityUnknown&quot; class=&quot;headerlink&quot; title=&quot;UIForceTouchCapabilityUnknown&quot;&gt;&lt;/a&gt;UIForceTouchCapabilityUnknown&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;不能确定是否支持压力感应&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;UIForceTouchCapabilityUnavailable&quot;&gt;&lt;a href=&quot;#UIForceTouchCapabilityUnavailable&quot; class=&quot;headerlink&quot; title=&quot;UIForceTouchCapabilityUnavailable&quot;&gt;&lt;/a&gt;UIForceTouchCapabilityUnavailable&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;不能支持压力感应&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;UIForceTouchCapabilityAvailable&quot;&gt;&lt;a href=&quot;#UIForceTouchCapabilityAvailable&quot; class=&quot;headerlink&quot; title=&quot;UIForceTouchCapabilityAvailable&quot;&gt;&lt;/a&gt;UIForceTouchCapabilityAvailable&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;可以支持压力感应&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;UITouchType&quot;&gt;&lt;a href=&quot;#UITouchType&quot; class=&quot;headerlink&quot; title=&quot;UITouchType&quot;&gt;&lt;/a&gt;UITouchType&lt;/h3&gt;&lt;h6 id=&quot;UITouchTypeDirect&quot;&gt;&lt;a href=&quot;#UITouchTypeDirect&quot; class=&quot;headerlink&quot; title=&quot;UITouchTypeDirect&quot;&gt;&lt;/a&gt;UITouchTypeDirect&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;垂直的触摸类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;UITouchTypeIndirect&quot;&gt;&lt;a href=&quot;#UITouchTypeIndirect&quot; class=&quot;headerlink&quot; title=&quot;UITouchTypeIndirect&quot;&gt;&lt;/a&gt;UITouchTypeIndirect&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;非初值的触摸类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;UITouchTypeStylus&quot;&gt;&lt;a href=&quot;#UITouchTypeStylus&quot; class=&quot;headerlink&quot; title=&quot;UITouchTypeStylus&quot;&gt;&lt;/a&gt;UITouchTypeStylus&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;水平的触摸类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;UITouchProperties&quot;&gt;&lt;a href=&quot;#UITouchProperties&quot; class=&quot;headerlink&quot; title=&quot;UITouchProperties&quot;&gt;&lt;/a&gt;UITouchProperties&lt;/h3&gt;&lt;h6 id=&quot;UITouchPropertyForce&quot;&gt;&lt;a href=&quot;#UITouchPropertyForce&quot; class=&quot;headerlink&quot; title=&quot;UITouchPropertyForce&quot;&gt;&lt;/a&gt;UITouchPropertyForce&lt;/h6&gt;&lt;h2 id=&quot;ShortcutItem&quot;&gt;&lt;a href=&quot;#ShortcutItem&quot; class=&quot;headerlink&quot; title=&quot;ShortcutItem&quot;&gt;&lt;/a&gt;ShortcutItem&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://developer.apple.com/ios/3d-touch/images/quick-actions_2x.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;静态方式&quot;&gt;&lt;a href=&quot;#静态方式&quot; class=&quot;headerlink&quot; title=&quot;静态方式&quot;&gt;&lt;/a&gt;静态方式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;打开Info.plist文件&lt;/li&gt;
&lt;li&gt;在对应UIApplicationShortcutItems关键字下添加item&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;动态方式&quot;&gt;&lt;a href=&quot;#动态方式&quot; class=&quot;headerlink&quot; title=&quot;动态方式&quot;&gt;&lt;/a&gt;动态方式&lt;/h3&gt;&lt;h4 id=&quot;修改当前应用程序的某个shortcutItem&quot;&gt;&lt;a href=&quot;#修改当前应用程序的某个shortcutItem&quot; class=&quot;headerlink&quot; title=&quot;修改当前应用程序的某个shortcutItem&quot;&gt;&lt;/a&gt;修改当前应用程序的某个shortcutItem&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;//获取第0个shortcutItem  
id oldItem = [existingShortcutItems objectAtIndex: 0];  
//将旧的shortcutItem改变为可修改类型shortcutItem  
id mutableItem = [oldItem mutableCopy];  
//修改shortcutItem的显示标题  
[mutableItem setLocalizedTitle: @“Click Lewis”];
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;获取当前应用程序的shortcutItems&quot;&gt;&lt;a href=&quot;#获取当前应用程序的shortcutItems&quot; class=&quot;headerlink&quot; title=&quot;获取当前应用程序的shortcutItems&quot;&gt;&lt;/a&gt;获取当前应用程序的shortcutItems&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;//获取当前应用程序对象  
UIApplication *app = [UIApplication sharedApplication];  
//获取一个应用程序对象的shortcutItem列表  
id existingShortcutItems = [app shortcutItems];
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;重置当前应用程序的shortcutItems&quot;&gt;&lt;a href=&quot;#重置当前应用程序的shortcutItems&quot; class=&quot;headerlink&quot; title=&quot;重置当前应用程序的shortcutItems&quot;&gt;&lt;/a&gt;重置当前应用程序的shortcutItems&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;//根据旧的shortcutItems生成可变shortcutItems数组  
id updatedShortcutItems = [existingShortcutItems mutableCopy];  
//修改可变shortcutItems数组中对应index下的元素为新的shortcutItem  
[updatedShortcutItems replaceObjectAtIndex: 0 withObject: mutableItem];  
//修改应用程序对象的shortcutItems为新的数组  
[app setShortcutItems: updatedShortcutItems];
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;创建一个新的UIApplicationShortcutItem&quot;&gt;&lt;a href=&quot;#创建一个新的UIApplicationShortcutItem&quot; class=&quot;headerlink&quot; title=&quot;创建一个新的UIApplicationShortcutItem&quot;&gt;&lt;/a&gt;创建一个新的UIApplicationShortcutItem&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;初始化函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;-initWithType:localizedTitle:localizedSubtitle:icon:userInfo:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;-initWithType:localizedTitle:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;属性&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;-localizedTitle:NSString&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;-localizedSubtitle:NSString&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;-type:NSString&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;-icon:UIApplicationShortcutIcon&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;-userInfo:NSDictionary&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;只有只读特性，想要进行修改时，需要通过mutableCopy方法转变为NSMutableApplicationShortcutItem&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;创建一个新的Item图标&quot;&gt;&lt;a href=&quot;#创建一个新的Item图标&quot; class=&quot;headerlink&quot; title=&quot;创建一个新的Item图标&quot;&gt;&lt;/a&gt;创建一个新的Item图标&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;初始化函数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;+iconWithType:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;+iconWithTemplateImageName:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;+iconWithContact:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;当程序启动时&quot;&gt;&lt;a href=&quot;#当程序启动时&quot; class=&quot;headerlink&quot; title=&quot;当程序启动时&quot;&gt;&lt;/a&gt;当程序启动时&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;判断launchOptions字典内的UIApplicationLaunchOptionsShortcutItemKey是否为空&lt;/li&gt;
&lt;li&gt;当不为空时,application:didFinishLaunchWithOptions方法返回false，否则返回true&lt;/li&gt;
&lt;li&gt;在application:performActionForShortcutItem:completionHandler方法内处理点击事件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Peek-and-Pop&quot;&gt;&lt;a href=&quot;#Peek-and-Pop&quot; class=&quot;headerlink&quot; title=&quot;Peek and Pop&quot;&gt;&lt;/a&gt;Peek and Pop&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://developer.apple.com/ios/3d-touch/images/peek-and-pop_2x.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;注册预览功能的代理对象和源视图&quot;&gt;&lt;a href=&quot;#注册预览功能的代理对象和源视图&quot; class=&quot;headerlink&quot; title=&quot;注册预览功能的代理对象和源视图&quot;&gt;&lt;/a&gt;注册预览功能的代理对象和源视图&lt;/h3&gt;&lt;h4 id=&quot;代理对象需要接受UIViewControllerPreviewingDelegate协议&quot;&gt;&lt;a href=&quot;#代理对象需要接受UIViewControllerPreviewingDelegate协议&quot; class=&quot;headerlink&quot; title=&quot;代理对象需要接受UIViewControllerPreviewingDelegate协议&quot;&gt;&lt;/a&gt;代理对象需要接受UIViewControllerPreviewingDelegate协议&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;@interface RootVC&amp;lt;UIViewControllerPreviewingDelegate&amp;gt;  
{}  
@end
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;代理对象实现协议内的Peek和Pop方法&quot;&gt;&lt;a href=&quot;#代理对象实现协议内的Peek和Pop方法&quot; class=&quot;headerlink&quot; title=&quot;代理对象实现协议内的Peek和Pop方法&quot;&gt;&lt;/a&gt;代理对象实现协议内的Peek和Pop方法&lt;/h4&gt;&lt;pre&gt;&lt;code&gt; @implementation RootVC  
    - (UIViewController *)previewingContext:(id&amp;lt;UIViewControllerPreviewing&amp;gt;)context viewControllerForLocation:(CGPoint) point  
{  
    UIViewController *childVC = [[UIViewController alloc] init];  
    childVC.preferredContentSize = CGSizeMake(0.0f,300f);  

    CGRect rect = CGRectMake(10, point.y - 10, self.view.frame.size.width - 20,20);  
    context.sourceRect = rect;  
    return childVC;  
}  

- (void)previewContext:(id&amp;lt;UIViewControllerPreviewing&amp;gt;)context commitViewController:(UIViewController*)vc  
{  
    [self showViewController:vc sender:self];  
}  
@end
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;注册方法声明在UIViewController类内&quot;&gt;&lt;a href=&quot;#注册方法声明在UIViewController类内&quot; class=&quot;headerlink&quot; title=&quot;注册方法声明在UIViewController类内&quot;&gt;&lt;/a&gt;注册方法声明在UIViewController类内&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;[self registerForPreviewingWithDelegate:self sourceView:self.view];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 著作权归作者所有，原文链接:&lt;a href=&quot;http://www.jianshu.com/p/74fe6cbc542b&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/74fe6cbc542b&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;iOS9-3DTouch、ShortcutItem、Peek-And-Pop技术一览&quot;&gt;&lt;a href=&quot;#iOS9-3DTouch、ShortcutItem、Peek-And-Pop技术一览&quot; class=&quot;headerlink&quot; title=&quot;iOS9 3DT
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
      <category term="3DTouch" scheme="http://yoursite.com/tags/3DTouch/"/>
    
  </entry>
  
  <entry>
    <title>如何获取iOS设备的UDID</title>
    <link href="http://yoursite.com/2016/03/11/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96iOS%E8%AE%BE%E5%A4%87%E7%9A%84UDID/"/>
    <id>http://yoursite.com/2016/03/11/如何获取iOS设备的UDID/</id>
    <published>2016-03-11T02:20:06.000Z</published>
    <updated>2016-03-11T07:27:49.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;如何获取iOS设备的UDID&quot;&gt;&lt;a href=&quot;#如何获取iOS设备的UDID&quot; class=&quot;headerlink&quot; title=&quot;如何获取iOS设备的UDID&quot;&gt;&lt;/a&gt;如何获取iOS设备的UDID&lt;/h1&gt;&lt;h2 id=&quot;什么是-UDID？&quot;&gt;&lt;a href=&quot;#什么是-UDID？&quot; class=&quot;headerlink&quot; title=&quot;什么是 UDID？&quot;&gt;&lt;/a&gt;什么是 UDID？&lt;/h2&gt;&lt;p&gt; UDID 是由子母和数字组成的 40 个字符串的序号，用来区别每一个唯一的 iOS 设备，包括 iPhones, iPads, 以及 iPod Touches，这些编码看起来是随机的，实际上是跟硬件设备特点相联系的。&lt;/p&gt;
&lt;p&gt;例如，一个典型的 UDID 类似这样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;37f2f993bae681636e30e74b04d6b8955ba36f29
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;UDID-和-Ad-Hoc&quot;&gt;&lt;a href=&quot;#UDID-和-Ad-Hoc&quot; class=&quot;headerlink&quot; title=&quot;UDID 和 Ad Hoc&quot;&gt;&lt;/a&gt;UDID 和 Ad Hoc&lt;/h2&gt;&lt;p&gt;如果 iOS 设备要安装以 Ad Hoc 方式打包的 iOS 应用时，必须将该设备的 UDID 加入打包应用时的证书文件（.mobileprovision文件），才可以在该设备上正常安装。&lt;/p&gt;
&lt;h2 id=&quot;如何获取-iOS-设备-UDID？&quot;&gt;&lt;a href=&quot;#如何获取-iOS-设备-UDID？&quot; class=&quot;headerlink&quot; title=&quot;如何获取 iOS 设备 UDID？&quot;&gt;&lt;/a&gt;如何获取 iOS 设备 UDID？&lt;/h2&gt;&lt;p&gt;UDID 的获得可以由 iTunes 工具来获得，也可以通过 Xcode 来获得，不过无论是 iTunes 还是 Xcode，都会稍显麻烦。&lt;/p&gt;
&lt;h3 id=&quot;1-蒲公英（★★★★★）&quot;&gt;&lt;a href=&quot;#1-蒲公英（★★★★★）&quot; class=&quot;headerlink&quot; title=&quot;1.蒲公英（★★★★★）&quot;&gt;&lt;/a&gt;1.蒲公英（★★★★★）&lt;/h3&gt;&lt;p&gt;蒲公英提供了一个简单的获取 UDID 的工具。在Safari中打开&lt;a href=&quot;http://www.pgyer.com/udid&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;在 iOS 设备上打开上面的地址，即可方便的获取到当前设备的 UDID。&lt;/p&gt;
&lt;h6 id=&quot;注意：请根据网页的提示，安装蒲公英提供的描述文件。如果手机设置了锁屏密码，则需要根据提示输入锁屏密码。&quot;&gt;&lt;a href=&quot;#注意：请根据网页的提示，安装蒲公英提供的描述文件。如果手机设置了锁屏密码，则需要根据提示输入锁屏密码。&quot; class=&quot;headerlink&quot; title=&quot;注意：请根据网页的提示，安装蒲公英提供的描述文件。如果手机设置了锁屏密码，则需要根据提示输入锁屏密码。&quot;&gt;&lt;/a&gt;注意：请根据网页的提示，安装蒲公英提供的描述文件。如果手机设置了锁屏密码，则需要根据提示输入锁屏密码。&lt;/h6&gt;&lt;h3 id=&quot;2-iTunes（★★★☆☆）&quot;&gt;&lt;a href=&quot;#2-iTunes（★★★☆☆）&quot; class=&quot;headerlink&quot; title=&quot;2.iTunes（★★★☆☆）&quot;&gt;&lt;/a&gt;2.iTunes（★★★☆☆）&lt;/h3&gt;&lt;p&gt;相信iPhone用户的电脑都有iTunes应用，但是由于水土不服iTunes也就很少有人使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.将iPhone设备用数据线链接电脑。&lt;/li&gt;
&lt;li&gt;2.点击“信任”。&lt;/li&gt;
&lt;li&gt;3.打开iTunes，点击设备。&lt;/li&gt;
&lt;li&gt;4.选中“摘要”标签。&lt;/li&gt;
&lt;li&gt;5.找到序列号，点击序列号就会出现UDID，单击右键Copy。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-Xcode（★☆☆☆☆）&quot;&gt;&lt;a href=&quot;#3-Xcode（★☆☆☆☆）&quot; class=&quot;headerlink&quot; title=&quot;3.Xcode（★☆☆☆☆）&quot;&gt;&lt;/a&gt;3.Xcode（★☆☆☆☆）&lt;/h3&gt;&lt;p&gt;Xcode获取UDID有很多限制条件，比如得是OS X（黑苹果另说）同时还得安装将近5G的Xcode。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.点击菜单栏的“windows”。&lt;/li&gt;
&lt;li&gt;2.选中“devices”。&lt;/li&gt;
&lt;li&gt;3.选中你的设备，就能看到“Identifier”, Identifier就是该设备的UDID了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上三种方法，我最推荐蒲公英获取UDID的方法，简单明了，手机就能操作。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;如何获取iOS设备的UDID&quot;&gt;&lt;a href=&quot;#如何获取iOS设备的UDID&quot; class=&quot;headerlink&quot; title=&quot;如何获取iOS设备的UDID&quot;&gt;&lt;/a&gt;如何获取iOS设备的UDID&lt;/h1&gt;&lt;h2 id=&quot;什么是-UDID？&quot;&gt;&lt;a hre
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>AppStore最新审核指南（2015年3月更新版）</title>
    <link href="http://yoursite.com/2016/03/11/AppStore%E6%9C%80%E6%96%B0%E5%AE%A1%E6%A0%B8%E6%8C%87%E5%8D%97%EF%BC%882015%E5%B9%B43%E6%9C%88%E6%9B%B4%E6%96%B0%E7%89%88%EF%BC%89/"/>
    <id>http://yoursite.com/2016/03/11/AppStore最新审核指南（2015年3月更新版）/</id>
    <published>2016-03-11T01:55:06.000Z</published>
    <updated>2016-03-11T07:27:41.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;AppStore最新审核指南（2015年3月更新版）&quot;&gt;&lt;a href=&quot;#AppStore最新审核指南（2015年3月更新版）&quot; class=&quot;headerlink&quot; title=&quot;AppStore最新审核指南（2015年3月更新版）&quot;&gt;&lt;/a&gt;AppStore最新审核指南（2015年3月更新版）&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://image.woshipm.com/wp-files/2015/03/4ffce04d92a4d6cb21c1494cdfcd6dc1328.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h6 id=&quot;苹果近日更新了App-Store审核指南的相关章节，对此前版本进行了修改和完善。除了增加应用截图、预览等限制外，使用Apple-Pay进行定期付款的应用程序必须展示每个阶段所需款额，费用归属以及如何取消。而从修改的政策部分可以看出，苹果对App-store应用的审核更加严格，鉴于近来国内游戏踩雷屡见不鲜，审核标准请各位业内同学耐心阅读。&quot;&gt;&lt;a href=&quot;#苹果近日更新了App-Store审核指南的相关章节，对此前版本进行了修改和完善。除了增加应用截图、预览等限制外，使用Apple-Pay进行定期付款的应用程序必须展示每个阶段所需款额，费用归属以及如何取消。而从修改的政策部分可以看出，苹果对App-store应用的审核更加严格，鉴于近来国内游戏踩雷屡见不鲜，审核标准请各位业内同学耐心阅读。&quot; class=&quot;headerlink&quot; title=&quot;苹果近日更新了App Store审核指南的相关章节，对此前版本进行了修改和完善。除了增加应用截图、预览等限制外，使用Apple Pay进行定期付款的应用程序必须展示每个阶段所需款额，费用归属以及如何取消。而从修改的政策部分可以看出，苹果对App store应用的审核更加严格，鉴于近来国内游戏踩雷屡见不鲜，审核标准请各位业内同学耐心阅读。&quot;&gt;&lt;/a&gt;苹果近日更新了App Store审核指南的相关章节，对此前版本进行了修改和完善。除了增加应用截图、预览等限制外，使用Apple Pay进行定期付款的应用程序必须展示每个阶段所需款额，费用归属以及如何取消。而从修改的政策部分可以看出，苹果对App store应用的审核更加严格，鉴于近来国内游戏踩雷屡见不鲜，审核标准请各位业内同学耐心阅读。&lt;/h6&gt;&lt;h2 id=&quot;1、条款和条件&quot;&gt;&lt;a href=&quot;#1、条款和条件&quot; class=&quot;headerlink&quot; title=&quot;1、条款和条件&quot;&gt;&lt;/a&gt;1、条款和条件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1.1为App Store开发程序，开发者必须遵守Program License Agreement(PLA)、人机交互指南(HIG)以及开发者和苹果签订的任何其他协议和合同。以下规则和例证旨在帮助开发者的程序能获得App Store的认可，而不是修改或删除任何其他协议中的条款。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-功能&quot;&gt;&lt;a href=&quot;#2-功能&quot; class=&quot;headerlink&quot; title=&quot;2.功能&quot;&gt;&lt;/a&gt;2.功能&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;2.1崩溃的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.2存在错误的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.3跟开发者宣传不符的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.4无应用文档或隐藏功能与描述不符的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.5使用非公开API的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.6在指定容器范围外读写数据的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.7以任何方式或形式下载代码的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.8安装或运行其他可执行代码的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.9Demo版、trial版和test版的程序将会被拒绝。Beta版应用程序可通过TestFlight提交，并且必须遵守相关指南。(此前并未允许Beta版通过TestFlight提交)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.10 iPhone程序必须不经修改就能以iPhone分辨率和2倍iPhone 3GS的分辨率在iPad上运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.11与App Store已有程序重复的应用可能会被拒绝，特别是数量很多的情况下，比如手电筒应用和爱经应用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.12没有显著用途、不独特的应用程序或者与网站简单捆绑的应用有可能被拒;不提供任何持久娱乐价值的程序可能会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.13内容主要是营销材料或广告的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.14包含欺骗或虚假功能，却有没有标明的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.15大于100MB无法通过蜂窝网络下载的应用(App Store会自动禁止)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.16多任务程序使用后台服务仅限于几种目的：VoIP、音频播放、地理位置、完成任务以及本地提醒等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.17应用程序只允许使用iOS WebKit框架和WebKit Javascript浏览web内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.18鼓励酗酒或使用违禁药物，或引诱青少年饮酒或吸烟的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.19提供错误的系统诊断或不精确的设备数据的应用将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.20向App Store上传大量相似版本程序的开发者将会从iOS开发者计划中除名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.21简单一首歌曲或者一部影片应用要提交到iTunes store，书籍类应用应该提交到iBookstore。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.22随意根据环境(如定位或者运营商)限制用户使用的应用会被拒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.23应用必须遵守iOS数据储存指导方针(iOS Data Storage Guidelines)，否则应用将被拒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.24存放在Newsstand的应用必须遵守开发者项目许可协议(Program License Agreement)的表1、表2以及表3，否则应用将会被拒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2.25类似App store，或者基于购买或者促销的目的而展示其他应用的应用将会被拒绝&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;限制更加严格，此前经过特殊审核批准-比如健康管理、航空以及其他无障碍需求等-，或者为特殊群体用户提供具有重大意义的附加值的应用是可以通过的&quot;&gt;&lt;a href=&quot;#限制更加严格，此前经过特殊审核批准-比如健康管理、航空以及其他无障碍需求等-，或者为特殊群体用户提供具有重大意义的附加值的应用是可以通过的&quot; class=&quot;headerlink&quot; title=&quot;(限制更加严格，此前经过特殊审核批准(比如健康管理、航空以及其他无障碍需求等)，或者为特殊群体用户提供具有重大意义的附加值的应用是可以通过的)&quot;&gt;&lt;/a&gt;(限制更加严格，此前经过特殊审核批准(比如健康管理、航空以及其他无障碍需求等)，或者为特殊群体用户提供具有重大意义的附加值的应用是可以通过的)&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;2.26只有当app是出于特殊审核需要(比如健康管理、航空以及无障碍需求等)或为特殊群体用户提供具有重大意义的附加值时，才可以展示和推荐自身以外的其他应用程序，否则应用程序将会被拒绝。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;3-元数据-名称、描述、评级、排名等-近来厂商踩雷屡见不鲜，此部分请详细阅读&quot;&gt;&lt;a href=&quot;#3-元数据-名称、描述、评级、排名等-近来厂商踩雷屡见不鲜，此部分请详细阅读&quot; class=&quot;headerlink&quot; title=&quot;3.元数据(名称、描述、评级、排名等)近来厂商踩雷屡见不鲜，此部分请详细阅读&quot;&gt;&lt;/a&gt;3.元数据(名称、描述、评级、排名等)近来厂商踩雷屡见不鲜，此部分请详细阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;3.1应用或者元数据中提到其他任何移动平台将会被拒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.2带有占位符文本的程序将会被拒绝&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.3应用程序的名称、描述、截图或者预览与应用的内容和功能不相关将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;此前仅对描述有所限制&quot;&gt;&lt;a href=&quot;#此前仅对描述有所限制&quot; class=&quot;headerlink&quot; title=&quot;(此前仅对描述有所限制)&quot;&gt;&lt;/a&gt;(此前仅对描述有所限制)&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;3.4为了不混淆用户，iTunes Connect中的应用名称应该和展示在设备上的应用名称一致。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.5不同尺寸的app icon要一致，否则会造成混淆。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.6图标、截图以及预览不符合4+年龄评级的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;增加了对预览的限制&quot;&gt;&lt;a href=&quot;#增加了对预览的限制&quot; class=&quot;headerlink&quot; title=&quot;(增加了对预览的限制)&quot;&gt;&lt;/a&gt;(增加了对预览的限制)&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;3.7目录与类型不适合于程序内容的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.8开发者有责任为其程序指定适合的评级。不相称的评级可能会由苹果公司修改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.9开发者有责任为其程序指定恰当的关键字。不恰当的关键词可能会被苹果公司修改/删除。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.10试图通过伪造评论或者付费评论的方式在AppStore中操纵或者其欺骗用户评论(或者采用其他不正当方式)以提升排名的开发者将会被苹果从iOS开发者计划中除名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.11在安装或打开应用之前，推荐用户重启iOS设备的应用将会被拒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.12提交审核的应用程序应包含能正常运行的URL，比如支持服务URL和隐私政策URL。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.13应用程序的截图、预览或者营销文本没有清晰地指出附加内容或项目需要额外单独购买(比如使用IAP)将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.14 App预览仅能使用从应用程序捕获的视频屏幕、旁白、文本以及design overlays，否则应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.15添加App预览的应用程序，未经许可展示真人个人信息将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.16 App预览仅能使用在所有选定地区内经过授权许可、用于此目的的音乐。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3.17 App预览包含未经授权的通过app播放的内容(比如iTunes playlist和YouTube流媒体)的应用将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;4-位置&quot;&gt;&lt;a href=&quot;#4-位置&quot; class=&quot;headerlink&quot; title=&quot;4.位置&quot;&gt;&lt;/a&gt;4.位置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;4.1在收集、传输或使用位置数据之前未通知并获得用户同意的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4.2将基于位置的API用于车辆、飞机或其他设备的自动控制或自主控制的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;4.3使用基于位置的API用于应急服务的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;此处进行了描述修改，未着重指出调度和车队管理&quot;&gt;&lt;a href=&quot;#此处进行了描述修改，未着重指出调度和车队管理&quot; class=&quot;headerlink&quot; title=&quot;(此处进行了描述修改，未着重指出调度和车队管理)&quot;&gt;&lt;/a&gt;(此处进行了描述修改，未着重指出调度和车队管理)&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;4.4当与提供的功能或服务密切相关，或者为支持经过授权的广告时，应用程序才可以使用位置数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;5-推送通知&quot;&gt;&lt;a href=&quot;#5-推送通知&quot; class=&quot;headerlink&quot; title=&quot;5.推送通知&quot;&gt;&lt;/a&gt;5.推送通知&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;5.1不使用苹果推送通知(APN)应用接口提供推送通知的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5.2未从苹果获得Push Application ID便擅自使用APN服务的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5.3在首次推送消息或者要求运行推送通知之前未获得用户许可的应用将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5.4使用推送通知发送敏感个人信息或机密信息的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5.5使用推送通知发送非请求消息，或用于钓鱼或群发垃圾信息用途的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5.6应用程序不可使用推送通知发送广告、促销或任何类型的直销信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5.7应用程序不能向使用推送通知服务的用户收取费用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5.8使用推送通知会过多利用APN服务的网络流量或带宽或给设备带来过度负担的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;5.9如果应用程序传送病毒、文件、计算机代码或程序，并且对APN服务的正常运行造成损害或中断，那么该程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;6-游戏中心&quot;&gt;&lt;a href=&quot;#6-游戏中心&quot; class=&quot;headerlink&quot; title=&quot;6.游戏中心&quot;&gt;&lt;/a&gt;6.游戏中心&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;6.1向终端用户或任意第三方显示玩家ID的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;6.2将玩家ID用于任何未经游戏中心条款批准用途的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;6.3试图进行反向搜索、跟踪、关联、挖掘、获得或利用玩家ID、别名或通过游戏中心获得其他信息的开发者将会iOS开发者计划除名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;6.4游戏中心信息(例如排行榜分数)，只能用于游戏中心批准的应用程序中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;6.5利用游戏中心服务发送非请求信息，或用于钓鱼或群发垃圾邮件的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;6.6过多使用游戏中心网络流量或带宽的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;6.7如果程序能够传送病毒、文件、计算机代码或程序，并且对游戏中心服务的正常运行造成损害或中断，该程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;7-广告&quot;&gt;&lt;a href=&quot;#7-广告&quot; class=&quot;headerlink&quot; title=&quot;7.广告&quot;&gt;&lt;/a&gt;7.广告&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;7.1人工刷广告浏览量或者广告点击率的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;7.2包含空iAd广告的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;7.3主要设计目的在于显示广告的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;8-商标与商品外观&quot;&gt;&lt;a href=&quot;#8-商标与商品外观&quot; class=&quot;headerlink&quot; title=&quot;8.商标与商品外观&quot;&gt;&lt;/a&gt;8.商标与商品外观&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;8.1应用程序必须遵守”Guidelines for Using Apple Trademarks and Copyrights”和”Apple Trademark List”中说明的所有条款与条件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;8.2任何误导和暗示苹果公司是该应用程序来源或提供商，或者苹果公司以任何形式表示认可其质量或功能的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;8.3与目前已有苹果产品或者广告主题外观相似或混淆的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;8.4在应用程序名称中将苹果产品名拼错的应用程序(例如，GPS for Iphone，iTunz)将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;8.5应用程序不得使用受保护的第三方材料(比如商标、版权以及专利)，不能违反第三方使用条款。必须提供使用这些材料的授权许可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;8.6若无明确授权许可，从第三方来源处(比如YouTube、SoundCloud以及Vimeo等)下载音乐或者视频内容的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;9-媒体内容&quot;&gt;&lt;a href=&quot;#9-媒体内容&quot; class=&quot;headerlink&quot; title=&quot;9.媒体内容&quot;&gt;&lt;/a&gt;9.媒体内容&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;9.1不使用媒体播放器框架(MediaPlayer Framework)获取音乐库中媒体内容的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;9.2用户界面模仿任何iPod或者iTunes界面的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;9.3通过蜂窝网络传输的音频流内容每5分钟不得超过5MB。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;9.4通过蜂窝网络传输超过10分钟的视频流内容必须使用HTTP Live Streaming协议，并且要包含一个基线为192kbps或者更低的HTTP实时流。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;10-用户界面&quot;&gt;&lt;a href=&quot;#10-用户界面&quot; class=&quot;headerlink&quot; title=&quot;10.用户界面&quot;&gt;&lt;/a&gt;10.用户界面&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;10.1应用程序必须遵守苹果的《iOS Human Interface Guidelines》中所有的条款和条件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;10.2外观与iPhone自带应用(比如App Store、iTunes Store和iBookstore)相似的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;10.3未能按苹果《iOS Human Interface Guidelines》描述正确使用系统提供的项目(比如按钮、图标)的应用将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;10.4创建桌面/主屏幕环境或者模拟multi-App插件体验的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;10.5修改音量大小和铃声/静音等标准开关功能的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;10.6苹果和我们的客户高度推崇简单、精致、富有创造性以及经过精心设计的界面。虽然需要付出更多，但却非常值得。苹果设立了很高的门槛。如果你的用户界面太过复杂或者水准不高，可能会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;11-购买与货币流通&quot;&gt;&lt;a href=&quot;#11-购买与货币流通&quot; class=&quot;headerlink&quot; title=&quot;11.购买与货币流通&quot;&gt;&lt;/a&gt;11.购买与货币流通&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;11.1使用App Store以外的渠道解锁或开启附加属性和功能的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.2使用应用内支付系统(IAP)以外的系统购买内容、功能或服务的应用软件将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.3使用IAP购买实物商品或者用于该软件之外的商品和服务的应用软件将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.4使用IAP购买积分(信用点)或者其他货币必须在本应用中消费。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.5使用IAP购买已过期积分或其他货币的应用软件将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.6使用IAP订阅的内容至少要持续7天，而且允许在用户的其他iOS设备间共享。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.7使用IAP购买项目的应用程序必须指派正确的购买类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.8使用IAP购买iOS内置功能(如照相机，陀螺仪)的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.9含有超过限定时间的内容或服务的应用程序将会被拒绝，除经特定批准的内容(比如电影、电视节目音乐以及书籍)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.10保险类应用程序必须免费，要遵守发布地区的法律，并且不能使用IAP。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.11一般而言，你的应用程序越贵，我们的评审会越深入。(对不起，我们国产大部分是免费网游)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.12提供订阅功能的应用必须使用IAP，苹果将会按照Developer Program License Agreement中的约定与开发者按30/70比例分成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.13在应用内使用跳转至外部购买或订阅链接的应用将会被拒，比如”buy”按钮跳转至一个购买电子书的web页面。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.14只要应用内没有跳转至外部购买、订阅的按钮或链接，苹果允许这些应用读取或展示经批准的、在应用外购买或订阅内容(特别是杂志、报纸、书籍、音频、音乐、视频以及云存储内容)。苹果只能通过应用程序内的购买获得一部分收益。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.15应用程序可以只使用自动更新订阅期刊(报纸、杂志)、商业应用程序(企业类、效率类、专业创意类以及云存储类)和媒体类应用程序(视频、音频、声音)，否则应用程序将被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.16当与特定的经过审核的实体产品(比如玩具)结合使用时，应用程序可以使用获得批准的附加特性和功能，只要附加功能完全依赖于该硬件产品(比如一款用于控制望远镜的应用程序)或者也可以在不使用实物产品的情况下使用应用程序，比如成就奖励或者使用IAP。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;11.17如果应用功能遵照各州和联邦法律，那么应用可以用来促进被认可的虚拟货币的流通。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;12-抓取和聚合&quot;&gt;&lt;a href=&quot;#12-抓取和聚合&quot; class=&quot;headerlink&quot; title=&quot;12.抓取和聚合&quot;&gt;&lt;/a&gt;12.抓取和聚合&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;12.1从苹果网站(例如apple.com、iTunes Store、App Store、iTunes Connect以及Apple Developer Programs等)抓取任何信息或者使用苹果网站内容和服务进行排名的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;12.2应用软件可以使用获得批准的苹果RSS feeds，例如iTunes Store RSS feeds。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;12.3只是简单的网页剪切、内容整合或者收集链接的应用程序可能会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;13-损害设备&quot;&gt;&lt;a href=&quot;#13-损害设备&quot; class=&quot;headerlink&quot; title=&quot;13.损害设备&quot;&gt;&lt;/a&gt;13.损害设备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;13.1怂恿用户以可能造成损害的方式使用苹果设备的应用软件将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;13.2快速耗光设备电量或产生过多热量的应用软件将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;13.3能导致用户人身伤害的app将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;14-人身攻击&quot;&gt;&lt;a href=&quot;#14-人身攻击&quot; class=&quot;headerlink&quot; title=&quot;14.人身攻击&quot;&gt;&lt;/a&gt;14.人身攻击&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;14.1涉及诽谤、人身攻击性质以及内容狭隘卑鄙的应用软件或者打击特定个人或组织的应用软件将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;14.2职业政治讽刺家和幽默作家不受这一条款约束。(开门，查水表)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;14.3展示用户创作内容(UGC)的应用程序必须提供一个过滤不良资讯的方法，一个用户可以标记侵犯性内容的机制，以及可以阻止辱骂用户的能力。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;15-暴力-此前传禁枪的消息并未在条款中明确指出&quot;&gt;&lt;a href=&quot;#15-暴力-此前传禁枪的消息并未在条款中明确指出&quot; class=&quot;headerlink&quot; title=&quot;15.暴力(此前传禁枪的消息并未在条款中明确指出)&quot;&gt;&lt;/a&gt;15.暴力(此前传禁枪的消息并未在条款中明确指出)&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;15.1应用程序中出现人或动物被杀、致残以及枪击、刺伤、拷打等受伤情形的真实画面将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;15.2出现描绘暴力或虐待儿童等内容的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;15.3游戏中出现的”敌人”不可指向一个特定种族、文化、一个真实存在的政府、企业或者其他任何现实中的实体。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;15.4对武器进行真实描述以怂恿非法使用或滥用这些武器的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;15.5包含俄罗斯轮盘赌博内容的游戏将会被拒。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;16-令人反感的内容&quot;&gt;&lt;a href=&quot;#16-令人反感的内容&quot; class=&quot;headerlink&quot; title=&quot;16.令人反感的内容&quot;&gt;&lt;/a&gt;16.令人反感的内容&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;16.1应用程序中出现过于令人反感或者低俗的内容将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;16.2在设计上激怒用户或令人感到厌恶的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;17-隐私&quot;&gt;&lt;a href=&quot;#17-隐私&quot; class=&quot;headerlink&quot; title=&quot;17.隐私&quot;&gt;&lt;/a&gt;17.隐私&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;17.1在未经用户事先许可，或未告知用户如何使用信息以及在何处使用信息的情况下，应用程序不能传输用户数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;17.2要求用户共享电子邮箱地址和出生日期等私人信息才可使用其功能的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;17.3仅出于遵守适用的儿童隐私法规的目的，应用程序可以要求用户的出生日期(或者使用其他年龄评级机制)，但是必须包括一些有用的功能或者娱乐价值，不管用户年龄大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;17.4收集、传输以及分享未成年用户个人信息(比如名字、地址、邮件、位置、照片、视频、绘画、聊天信息以及其他个人数据，或者与以上所述相关的永久性标示符)的应用程序必须遵守应用儿童隐私法规，并且必须包含隐私条款。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;17.5包含账号注册或者访问用户现有账号的应用程序必须包含隐私策略，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;18-色情&quot;&gt;&lt;a href=&quot;#18-色情&quot; class=&quot;headerlink&quot; title=&quot;18.色情&quot;&gt;&lt;/a&gt;18.色情&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;18.1含有色情素材，也就是《韦氏词典》中定义的”旨在激发情欲，对性器官或性行为的明确描述或展示，而无关美学或情绪感受”的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;18.2包含用户频繁提供的色情内容的应用程序(比如以前的“Chat Roulette”程序)将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;19-宗教，文化与种族&quot;&gt;&lt;a href=&quot;#19-宗教，文化与种族&quot; class=&quot;headerlink&quot; title=&quot;19.宗教，文化与种族&quot;&gt;&lt;/a&gt;19.宗教，文化与种族&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;19.1涉及宗教、文化或种族群体的引用或评论包含诽谤性、攻击性或狭隘内容，或会使特定群体遭受伤害或暴力的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;19.2程序可以包含或引用宗教经文，程序所提供的引用或翻译必须准确且不会引起误导。评论应该有教育意义，可以令人开阔眼界，而不应有煽动性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;20-竞赛、赌博、彩票以及抽奖&quot;&gt;&lt;a href=&quot;#20-竞赛、赌博、彩票以及抽奖&quot; class=&quot;headerlink&quot; title=&quot;20.竞赛、赌博、彩票以及抽奖&quot;&gt;&lt;/a&gt;20.竞赛、赌博、彩票以及抽奖&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;20.1彩票抽奖和竞赛必须由应用程序的开发者或者app所属公司发起。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20.2应用程序必须展示彩票抽奖和竞赛的正式规则，并声明苹果不是发起者，也没有以任何方式参与活动。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20.3开发者运营一款具有抽奖性质的应用必须经过法律允许，并且抽奖应用必须具备以下特征：报酬、运气以及奖品。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20.4允许用户在应用中直接购买彩票或彩券的应用将会被拒。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20.5提供真钱游戏(比如体育博彩、扑克牌、赌场游戏、赛马以及彩票)的应用程序必须有应用程序适用地区当地必要的许可和允许，必须限制在这些区域，必须可以从App Store免费下载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;20.6使用IAP购买信誉或者货币，且结合真钱游戏的应用将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;21-慈善与援助&quot;&gt;&lt;a href=&quot;#21-慈善与援助&quot; class=&quot;headerlink&quot; title=&quot;21.慈善与援助&quot;&gt;&lt;/a&gt;21.慈善与援助&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;21.1包含可以向已认证的慈善组织捐赠功能的应用程序必须是免费的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;21.2捐赠款项的募集必须通过Safari浏览器访问web页面或是手机短消息完成。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;22-法律要件&quot;&gt;&lt;a href=&quot;#22-法律要件&quot; class=&quot;headerlink&quot; title=&quot;22.法律要件&quot;&gt;&lt;/a&gt;22.法律要件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;22.1应用程序必须遵守所有发布地区当地法律，开发者有义务了解并遵守所有当地法律。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;22.2包含虚假，欺诈或误导性陈述的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;22.3任何用于招徕、促进或鼓励犯罪或明显鲁莽行为的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;22.4支持非法文件共享的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;22.5被设计用以非法赌博工具的应用程序(包括点算牌)将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;22.6具有匿名或恶作剧拨打电话或发送类似短信/彩信功能的程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;22.7任何开发暗中收集用户密码或用户私人数据程序的开发者将会从iOS开发者计划中除名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;22.8包含非执法机构发布的DUI检查点信息，或者怂恿/协助酒后驾车的应用将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;22.9计算药剂用量的应用程序必须由药品制造商或者认可机构发布，比如医院、保险公司以及高校。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;22.10.在未授权的情况下使用iTunes音乐预览的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;23-Passbook&quot;&gt;&lt;a href=&quot;#23-Passbook&quot; class=&quot;headerlink&quot; title=&quot;23.Passbook&quot;&gt;&lt;/a&gt;23.Passbook&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;23.1 Passbook Passes可被用来支付或者接收支付，传递商业信息或者提供验证(比如电影票、飞机票、优惠券以及其他)，但把Passbook Passes用于其他用途的应用程序可能会遭到拒绝，并且会被撤销Passbook证书。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;23.2 Passes必须包含有效的pass发行人有效的联系资料，否则app将会被拒绝，并且Passbook证书也会被取消。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;23.3 Passes必须经过实体签名，并基于其名字、商标或者品牌进行分发，否则应用程序将会被拒绝，而Passbook证书也可能会被撤销。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;24-儿童类别&quot;&gt;&lt;a href=&quot;#24-儿童类别&quot; class=&quot;headerlink&quot; title=&quot;24.儿童类别&quot;&gt;&lt;/a&gt;24.儿童类别&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;24.1儿童类别中的应用程序必须包含隐私政策，必须遵守适用的儿童隐私法规。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;24.2儿童类别中的应用程序不允许包括行为广告(比如app内部基于用户行动的服务广告)，任何在应用程序中展示的上下文广告必须适合儿童。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;24.3儿童类别中的应用程序必须得到家长许可或使用parental gate才能链接至应用程序外部或进行交易。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;24.4儿童类别中的应用程序必须标明”5岁以下，6-8岁或者9-11岁”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;25-扩展&quot;&gt;&lt;a href=&quot;#25-扩展&quot; class=&quot;headerlink&quot; title=&quot;25.扩展&quot;&gt;&lt;/a&gt;25.扩展&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;25.1包含扩展的应用程序必须遵照App Extension Programming Guide要求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;25.2包含扩展的应用程序必须提供某些功能(辅助屏幕，附加设置)，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;25.3如果扩展的视图中包含营销推广、广告或者IAP内容，那么包含该扩展的应用将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;25.4键盘扩展必须提供一个切换至下个键盘的方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;25.5键盘扩展必须具有离线访问功能，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;25.6键盘扩展必须提供和App Extension Programming Guide描述一致的数字和十进键盘类型，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;25.7提供键盘扩展的应用必须拥有基本的功能分类和隐私政策，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;25.8提供键盘扩展的应用程序只允许收集用户活动以增强键盘扩展在iOS设备上的功能，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;26-HomeKit&quot;&gt;&lt;a href=&quot;#26-HomeKit&quot; class=&quot;headerlink&quot; title=&quot;26.HomeKit&quot;&gt;&lt;/a&gt;26.HomeKit&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;26.1使用HomeKit框架的应用程序必须有提供家庭自动化服务的主要目的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;26.2使用HomeKit框架的应用程序必须在营销文本中说明用途，同时必须提供隐私政策，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;26.3应用程序不允许将从HomeKit API收集的数据用于广告宣传或者其他基于使用的数据挖掘。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;26.4出于其他目的使用从HomeKit API收集的数据，而不是用于提高用户体验或者家庭自动化功能中硬件/软件性能，这类应用将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;27-HealthKit&quot;&gt;&lt;a href=&quot;#27-HealthKit&quot; class=&quot;headerlink&quot; title=&quot;27.HealthKit&quot;&gt;&lt;/a&gt;27.HealthKit&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;27.1使用HealthKit或者ResearchKit框架(出于健康目的用于进行人体生物学研究的框架)的应用程序，必须遵守其所有适用区域的法律，以及iOS Developer Program License Agreement中的3.3.28和3.39条款。(增加了对于ResearchKit框架的支持)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;27.2将虚假或者错误的数据写入HealthKit的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;27.3使用HealthKit框架的应用程序在iCloud中储存用户健康信息将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;27.4应用程序不允许将通过HealthKit API收集的用户数据用作广告宣传或者基于使用的数据挖掘目的，除了改善健康、医疗、健康管理以及医学研究目的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;27.5未经用户许可与第三方分享通过HealthKit API获得的用户数据的应用程序将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;27.6使用HealthKit框架的应用程序必须在营销文本中说明集成了Health app，同时必须在app用户界面清楚阐释HealthKit的功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;27.7使用HealthKit框架的应用程序必须提供隐私政策，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;27.8提供诊断、治疗建议，或者控制诊断疾病的硬件，或者治疗疾病的应用程序，若没有根据要求提供书面的监管审批，将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;27.9收集人体生物学研究相关数据的应用程序必须要获得参与者的许可，对于未成年人，应用程序要得到其父母或者监护人的许可。许可内容必须包括：(a)研究的性质、目的以及持续性;(b)参与流程、风险以及受益(福利);(c)信息的机密性和数据处理(包括与任何与第三方的共享);(d)参与者问题切入点;(e)取消方法(新增)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;28-TestFlight&quot;&gt;&lt;a href=&quot;#28-TestFlight&quot; class=&quot;headerlink&quot; title=&quot;28.TestFlight&quot;&gt;&lt;/a&gt;28.TestFlight&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;28.1应用程序仅能使用TestFlight对以公开发布为目的的应用进行beta版测试，且必须遵守完整的App Review Guidelines。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;28.2当版本中包含的内容或功能有重大变化时，使用TestFlight的应用程序必须提交审核。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;28.3使用TestFlight的应用程序不允许分发给测试者，以作为任何形式的补偿。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;29-Apple-Pay&quot;&gt;&lt;a href=&quot;#29-Apple-Pay&quot; class=&quot;headerlink&quot; title=&quot;29.Apple Pay&quot;&gt;&lt;/a&gt;29.Apple Pay&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;29.1使用Apple Pay的应用程序必须在出售任何商品或者服务之前为用户提供所有材料的购买信息，否则将会被拒绝。使用Apple Pay进行定期付款的应用程序必须提供最低限度续费期限，付费将持续直至被取消，每个阶段所付款额，费用付款归属，以及如何取消等。(增加了对于定期付款的规定)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;29.2使用Apple Pay的应用程序必须正确使用Apple Pay Human Interface Guidelines中的Apple Pay标识和用户界面元素，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;29.3使用Apple Pay作为购买机制的应用程序所提供的商品或服务不能触犯任何交付地范围内的法律，也不能用作任何非法目的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;29.4使用Apple Pay的应用程序必须提供隐私政策，否则将会被拒绝。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;29.5只有为了促进或提高商品和服务的交付，或者依照法律要件，使用Apple Pay的应用程序才能与第三方分享通过Apple Pay获得的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;转载请注明出处，原文链接:&lt;a href=&quot;http://www.woshipm.com/ucd/144218.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.woshipm.com/ucd/144218.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;AppStore最新审核指南（2015年3月更新版）&quot;&gt;&lt;a href=&quot;#AppStore最新审核指南（2015年3月更新版）&quot; class=&quot;headerlink&quot; title=&quot;AppStore最新审核指南（2015年3月更新版）&quot;&gt;&lt;/a&gt;AppStore
    
    </summary>
    
    
      <category term="AppStore" scheme="http://yoursite.com/tags/AppStore/"/>
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>使用CocoaPods做依赖管理</title>
    <link href="http://yoursite.com/2016/03/10/%E4%BD%BF%E7%94%A8CocoaPods%E5%81%9A%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2016/03/10/使用CocoaPods做依赖管理/</id>
    <published>2016-03-10T06:57:04.000Z</published>
    <updated>2016-03-11T07:27:35.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;使用CocoaPods做依赖管理&quot;&gt;&lt;a href=&quot;#使用CocoaPods做依赖管理&quot; class=&quot;headerlink&quot; title=&quot;使用CocoaPods做依赖管理&quot;&gt;&lt;/a&gt;使用CocoaPods做依赖管理&lt;/h2&gt;&lt;p&gt;每种语言发展到一个阶段，就会出现相应的依赖管理工具。本章讲解iOS项目的依赖管理工具CocoaPods。&lt;/p&gt;
&lt;h2 id=&quot;CocoaPods简介&quot;&gt;&lt;a href=&quot;#CocoaPods简介&quot; class=&quot;headerlink&quot; title=&quot;CocoaPods简介&quot;&gt;&lt;/a&gt;CocoaPods简介&lt;/h2&gt;&lt;p&gt;每种语言发展到一个阶段，就会出现相应的依赖管理工具，例如Java语言的Maven，nodejs的npm。随着iOS开发者的增多，业界也出现了为iOS程序提供依赖管理的工具，它的名字叫做：CocoaPods。&lt;/p&gt;
&lt;p&gt;CocoaPods项目的源码在Github上管理。该项目开始于2011年8月，经过多年发展，现在已经成为iOS开发事实上的依赖管理标准工具。开发iOS项目不可避免地要使用第三方开源库，CocoaPods的出现使得我们可以节省设置和更新第三方开源库的时间。&lt;/p&gt;
&lt;p&gt;在我开发猿题库客户端时，使用了24个第三方开源库。在没有使用CocoaPods以前，我需要:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;把这些第三方开源库的源代码文件复制到项目中，或者设置成git的submodule。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于这些开源库通常需要依赖系统的一些framework，我需要手工地将这些framework一一增加到项目依赖中，比如通常情况下，一个网络库就需要增加以下framework: CFNetwork, SystemConfiguration, MobileCoreServices, CoreGraphics, zlib。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于某些开源库，我还需要设置-licucore或者 -fno-objc-arc等编译参数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;管理这些依赖包的更新。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些体力活虽然简单，但毫无技术含量并且浪费时间。在使用CocoaPods之后，我只需要将用到的第三方开源库放到一个名为Podfile的文件中，然后执行pod install。CocoaPods就会自动将这些第三方开源库的源码下载下来，并且为我的工程设置好相应的系统依赖和编译参数。&lt;/p&gt;
&lt;h2 id=&quot;CocoaPods的安装和使用&quot;&gt;&lt;a href=&quot;#CocoaPods的安装和使用&quot; class=&quot;headerlink&quot; title=&quot;CocoaPods的安装和使用&quot;&gt;&lt;/a&gt;CocoaPods的安装和使用&lt;/h2&gt;&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;安装方式异常简单, Mac下都自带ruby，使用ruby的gem命令即可下载安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo gem install cocoapods

$ pod setup
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果你的gem太老，可以尝试用如下命令升级gem:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo gem update --system
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;另外，ruby的软件源rubygems.org因为使用的亚马逊的云服务，所以被墙了，需要更新一下ruby的源，如下代码将官方的ruby源替换成国内淘宝的源：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem sources --remove https://rubygems.org/

gem sources -a http://ruby.taobao.org/

gem sources -l
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;还有一点需要注意，pod setup在执行时，会输出Setting up CocoaPods master repo，但是会等待比较久的时间。这步其实是Cocoapods在将它的信息下载到 ~/.cocoapods目录下，如果你等太久，可以试着cd到那个目录，用du -sh *来查看下载进度。你也可以参考本文接下来的使用cocoapods的镜像索引一节的内容来提高下载速度。&lt;/p&gt;
&lt;h3 id=&quot;使用CocoaPods的镜像索引&quot;&gt;&lt;a href=&quot;#使用CocoaPods的镜像索引&quot; class=&quot;headerlink&quot; title=&quot;使用CocoaPods的镜像索引&quot;&gt;&lt;/a&gt;使用CocoaPods的镜像索引&lt;/h3&gt;&lt;p&gt;所有的项目的Podspec文件都托管在&lt;a href=&quot;https://github.com/CocoaPods/Specs。第一次执行pod&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/CocoaPods/Specs。第一次执行pod&lt;/a&gt; setup时，CocoaPods会将这些podspec索引文件更新到本地的 ~/.cocoapods/目录下，这个索引文件比较大，有80M左右。所以第一次更新时非常慢，笔者就更新了将近1个小时才完成。&lt;/p&gt;
&lt;p&gt;一个叫akinliu的朋友在gitcafe和oschina上建立了CocoaPods索引库的镜像，因为gitcafe和oschina都是国内的服务器，所以在执行索引更新操作时，会快很多。如下操作可以将CocoaPods设置成使用gitcafe镜像：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod repo remove master

pod repo add master https://gitcafe.com/akuandev/Specs.git

pod repo update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将以上代码中的 &lt;a href=&quot;https://gitcafe.com/akuandev/Specs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gitcafe.com/akuandev/Specs.git&lt;/a&gt; 替换成 &lt;a href=&quot;http://git.oschina.net/akuandev/Specs.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://git.oschina.net/akuandev/Specs.git&lt;/a&gt; 即可使用oschina上的镜像。&lt;/p&gt;
&lt;h3 id=&quot;使用CocoaPods&quot;&gt;&lt;a href=&quot;#使用CocoaPods&quot; class=&quot;headerlink&quot; title=&quot;使用CocoaPods&quot;&gt;&lt;/a&gt;使用CocoaPods&lt;/h3&gt;&lt;p&gt;使用时需要新建一个名为Podfile的文件，以如下格式，将依赖的库名字依次列在文件中即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;platform :ios
pod &amp;apos;JSONKit&amp;apos;,      &amp;apos;~&amp;gt; 1.4&amp;apos;
pod &amp;apos;Reachability&amp;apos;,  &amp;apos;~&amp;gt; 3.0.0&amp;apos;
pod &amp;apos;ASIHTTPRequest&amp;apos;
pod &amp;apos;RegexKitLite&amp;apos;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后你将编辑好的Podfile文件放到你的项目根目录中，执行如下命令即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd &amp;quot;your project home&amp;quot;pod install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;现在，你的所有第三方库都已经下载完成并且设置好了编译参数和依赖，你只需要记住如下2点即可：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用CocoaPods生成的 .xcworkspace 文件来打开工程，而不是以前的 .xcodeproj 文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每次更改了Podfile文件，你需要重新执行一次pod update命令。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;查找第三方库&quot;&gt;&lt;a href=&quot;#查找第三方库&quot; class=&quot;headerlink&quot; title=&quot;查找第三方库&quot;&gt;&lt;/a&gt;查找第三方库&lt;/h3&gt;&lt;p&gt;你如果不知道cocoaPods管理的库中，是否有你想要的库，那么你可以通过pod search命令进行查找，以下是我用pod search json查找到的所有可用的库：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pod search json

-&amp;gt; AnyJSON (0.0.1)
  Encode / Decode JSON by any means possible.
  - Homepage: https://github.com/mattt/AnyJSON
  - Source:  https://github.com/mattt/AnyJSON.git
  - Versions: 0.0.1 [master repo]

-&amp;gt; JSONKit (1.5pre)
  A Very High Performance Objective-C JSON Library.
  - Homepage: https://github.com/johnezang/JSONKit
  - Source:  git://github.com/johnezang/JSONKit.git
  - Versions: 1.5pre, 1.4 [master repo]

// ...以下省略若干行
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;h3 id=&quot;关于-gitignore&quot;&gt;&lt;a href=&quot;#关于-gitignore&quot; class=&quot;headerlink&quot; title=&quot;关于.gitignore&quot;&gt;&lt;/a&gt;关于.gitignore&lt;/h3&gt;&lt;p&gt;当你执行pod install之后，除了Podfile外，CocoaPods还会生成一个名为Podfile.lock的文件，你不应该把这个文件加入到.gitignore中。因为Podfile.lock会锁定当前各依赖库的版本，之后如果多次执行pod install 不会更改版本，要pod update才会改Podfile.lock了。这样多人协作的时候，可以防止第三方库升级时造成大家各自的第三方库版本不一致。&lt;/p&gt;
&lt;p&gt;CocoaPods的这篇官方文档也在What is a Podfile.lock一节中介绍了Podfile.lock的作用，并且指出：&lt;/p&gt;
&lt;p&gt;This file should always be kept under version control.&lt;/p&gt;
&lt;h3 id=&quot;为自己的项目创建podspec文件&quot;&gt;&lt;a href=&quot;#为自己的项目创建podspec文件&quot; class=&quot;headerlink&quot; title=&quot;为自己的项目创建podspec文件&quot;&gt;&lt;/a&gt;为自己的项目创建podspec文件&lt;/h3&gt;&lt;p&gt;我们可以为自己的开源项目创建podspec文件，首先通过如下命令初始化一个podspec文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod spec create your_pod_spec_name
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;该命令执行之后，CocoaPods会生成一个名为your_pod_spec_name.podspec的文件，然后我们修改其中的相关内容即可。&lt;/p&gt;
&lt;p&gt;具体步骤可以参考这两篇博文中的相关内容：《如何编写一个CocoaPods的spec文件》 和《Cocoapods 入门》。&lt;/p&gt;
&lt;h3 id=&quot;使用私有的pods&quot;&gt;&lt;a href=&quot;#使用私有的pods&quot; class=&quot;headerlink&quot; title=&quot;使用私有的pods&quot;&gt;&lt;/a&gt;使用私有的pods&lt;/h3&gt;&lt;p&gt;我们可以直接指定某一个依赖的podspec，这样就可以使用公司内部的私有库。该方案有利于使企业内部的公共项目支持CocoaPods。如下是一个示例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod &amp;apos;MyCommon&amp;apos;, :podspec =&amp;gt; &amp;apos;https://yuantiku.com/common/myCommon.podspec&amp;apos;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;不更新podspec&quot;&gt;&lt;a href=&quot;#不更新podspec&quot; class=&quot;headerlink&quot; title=&quot;不更新podspec&quot;&gt;&lt;/a&gt;不更新podspec&lt;/h3&gt;&lt;p&gt;CocoaPods在执行pod install和pod update时，会默认先更新一次podspec索引。使用–no-repo-update参数可以禁止其做索引更新操作。如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod install --no-repo-update
pod update --no-repo-update
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;生成第三方库的帮助文档&quot;&gt;&lt;a href=&quot;#生成第三方库的帮助文档&quot; class=&quot;headerlink&quot; title=&quot;生成第三方库的帮助文档&quot;&gt;&lt;/a&gt;生成第三方库的帮助文档&lt;/h3&gt;&lt;p&gt;如果你想让CococaPods帮你生成第三方库的帮助文档，并集成到Xcode中，那么用brew安装appledoc即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install appledoc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;关于appledoc，在本书的“其它工具”一章有专门介绍。它最大的优点是可以将帮助文档集成到Xcode中，这样你在敲代码的时候，按住opt键单击类名或方法名，就可以显示出相应的帮助文档。&lt;/p&gt;
&lt;h3 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h3&gt;&lt;p&gt;CocoaPods的原理是将所有的依赖库都放到另一个名为Pods项目中，然后让主项目依赖Pods项目，这样，源码管理工作都从主项目移到了Pods项目中。发现的一些技术细节有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Pods项目最终会编译成一个名为libPods.a的文件，主项目只需要依赖这个.a文件即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于资源文件，CocoaPods提供了一个名为Pods-resources.sh的bash脚本，该脚本在每次项目编译的时候都会执行，将第三方库的各种资源文件复制到目标目录中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CocoaPods通过一个名为Pods.xcconfig的文件来在编译时设置所有的依赖和参数。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;使用CocoaPods做依赖管理&quot;&gt;&lt;a href=&quot;#使用CocoaPods做依赖管理&quot; class=&quot;headerlink&quot; title=&quot;使用CocoaPods做依赖管理&quot;&gt;&lt;/a&gt;使用CocoaPods做依赖管理&lt;/h2&gt;&lt;p&gt;每种语言发展到一个阶段，就会
    
    </summary>
    
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
      <category term="CocoaPods" scheme="http://yoursite.com/tags/CocoaPods/"/>
    
  </entry>
  
  <entry>
    <title>AppStore上线素材准备篇</title>
    <link href="http://yoursite.com/2016/03/10/AppStore%E4%B8%8A%E7%BA%BF%E7%B4%A0%E6%9D%90%E5%87%86%E5%A4%87%E7%AF%87/"/>
    <id>http://yoursite.com/2016/03/10/AppStore上线素材准备篇/</id>
    <published>2016-03-10T06:20:55.000Z</published>
    <updated>2016-03-11T07:27:46.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;AppStore上线素材准备篇&quot;&gt;&lt;a href=&quot;#AppStore上线素材准备篇&quot; class=&quot;headerlink&quot; title=&quot;AppStore上线素材准备篇&quot;&gt;&lt;/a&gt;AppStore上线素材准备篇&lt;/h1&gt;&lt;h3 id=&quot;1-app名称与版本号&quot;&gt;&lt;a href=&quot;#1-app名称与版本号&quot; class=&quot;headerlink&quot; title=&quot;1.app名称与版本号&quot;&gt;&lt;/a&gt;1.app名称与版本号&lt;/h3&gt;&lt;p&gt;您要填入的 App 版本号。编号应遵循软件版本规范。&lt;/p&gt;
&lt;h3 id=&quot;2-公司网址&quot;&gt;&lt;a href=&quot;#2-公司网址&quot; class=&quot;headerlink&quot; title=&quot;2.公司网址&quot;&gt;&lt;/a&gt;2.公司网址&lt;/h3&gt;&lt;p&gt;技术支持网址(URL)；营销网址(URL) ,可以共用一个网址。&lt;/p&gt;
&lt;h3 id=&quot;3-app所属类别&quot;&gt;&lt;a href=&quot;#3-app所属类别&quot; class=&quot;headerlink&quot; title=&quot;3.app所属类别&quot;&gt;&lt;/a&gt;3.app所属类别&lt;/h3&gt;&lt;p&gt;最能准确描述此 App 的类别。有关更多信息，请参阅 App Store 类别定义。&lt;a href=&quot;https://itunesconnect.apple.com/itc/static/category_definitions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-演示帐户&quot;&gt;&lt;a href=&quot;#4-演示帐户&quot; class=&quot;headerlink&quot; title=&quot;4.演示帐户&quot;&gt;&lt;/a&gt;4.演示帐户&lt;/h3&gt;&lt;p&gt;正式环境的测试账号与密码。&lt;/p&gt;
&lt;h3 id=&quot;5-联系信息包括：电话，邮箱，公司地址&quot;&gt;&lt;a href=&quot;#5-联系信息包括：电话，邮箱，公司地址&quot; class=&quot;headerlink&quot; title=&quot;5.联系信息包括：电话，邮箱，公司地址&quot;&gt;&lt;/a&gt;5.联系信息包括：电话，邮箱，公司地址&lt;/h3&gt;&lt;p&gt;当 App 审核团队有任何问题或需要额外信息时, 您所在机构的联系人信息。&lt;/p&gt;
&lt;h3 id=&quot;6-版权-公司名称&quot;&gt;&lt;a href=&quot;#6-版权-公司名称&quot; class=&quot;headerlink&quot; title=&quot;6.版权-公司名称&quot;&gt;&lt;/a&gt;6.版权-公司名称&lt;/h3&gt;&lt;p&gt;拥有您的 App 专有权的人员或实体的名称，前面是获得权利的年份（例如“2008 Acme Inc”）。请勿提供网址(URL)。&lt;/p&gt;
&lt;h3 id=&quot;7-app描述&quot;&gt;&lt;a href=&quot;#7-app描述&quot; class=&quot;headerlink&quot; title=&quot;7.app描述&quot;&gt;&lt;/a&gt;7.app描述&lt;/h3&gt;&lt;p&gt;对您 App 的描述，用以详细说明特性和功能。&lt;/p&gt;
&lt;h3 id=&quot;8-app截图-4（共20张）&quot;&gt;&lt;a href=&quot;#8-app截图-4（共20张）&quot; class=&quot;headerlink&quot; title=&quot;8.app截图*4（共20张）&quot;&gt;&lt;/a&gt;8.app截图*4（共20张）&lt;/h3&gt;&lt;p&gt;屏幕快照必须为 JPG 或 PNG 格式，且必须采用 RGB 颜色空间。 App 视频预览必须为 M4V、MP4 或 MOV 格式，且不能超过 500 MB。 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/LanguagesUtilities/Conceptual/iTunesConnect_Guide/Appendices/Properties.html#//apple_ref/doc/uid/TP40011225-CH26-SW2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[iPhone 4&amp;amp;4s(640X960), iPhone 5&amp;amp;5c&amp;amp;5s(640X1136), iPhone 6&amp;amp;6s(750X1334), iPhone 6P&amp;amp;6sP(1242X2208)] ### 9.关键词&lt;br&gt;一个或多个关键词，用以描述您的 App。关键词将使 App Store 搜索结果更加准确。关键词之间用英文逗点分隔。&lt;/p&gt;
&lt;h3 id=&quot;10-app图标（1024X1024）&quot;&gt;&lt;a href=&quot;#10-app图标（1024X1024）&quot; class=&quot;headerlink&quot; title=&quot;10.app图标（1024X1024）&quot;&gt;&lt;/a&gt;10.app图标（1024X1024）&lt;/h3&gt;&lt;p&gt;此图标将用于 App Store，其格式必须为 JPG 或 PNG，最低分辨率至少为 72 DPI，并采用 RGB 色彩空间。它不能包含图层或圆角。&lt;/p&gt;
&lt;h3 id=&quot;11-用户服务协议、隐私政策。&quot;&gt;&lt;a href=&quot;#11-用户服务协议、隐私政策。&quot; class=&quot;headerlink&quot; title=&quot;11.用户服务协议、隐私政策。&quot;&gt;&lt;/a&gt;11.用户服务协议、隐私政策。&lt;/h3&gt;&lt;p&gt;必不可少的协议，没有就会被拒。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;AppStore上线素材准备篇&quot;&gt;&lt;a href=&quot;#AppStore上线素材准备篇&quot; class=&quot;headerlink&quot; title=&quot;AppStore上线素材准备篇&quot;&gt;&lt;/a&gt;AppStore上线素材准备篇&lt;/h1&gt;&lt;h3 id=&quot;1-app名称与版本号&quot;&gt;
    
    </summary>
    
    
      <category term="AppStore" scheme="http://yoursite.com/tags/AppStore/"/>
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>使用GithubPages-Hexo搭建免费博客（三）</title>
    <link href="http://yoursite.com/2016/03/02/%E4%BD%BF%E7%94%A8GithubPages-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>http://yoursite.com/2016/03/02/使用GithubPages-Hexo搭建免费博客（三）/</id>
    <published>2016-03-02T15:52:40.000Z</published>
    <updated>2016-03-11T07:27:25.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;域名绑定&quot;&gt;&lt;a href=&quot;#域名绑定&quot; class=&quot;headerlink&quot; title=&quot;域名绑定&quot;&gt;&lt;/a&gt;域名绑定&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;域名解析&lt;br&gt;域名购买成功后，在解析设置中添加以下解析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-03%20%E4%B8%8A%E5%8D%8812.02.04.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;记录类型为：A&lt;br&gt;主机记录分别为“@”，“wwww”。其中设置@，可以用xxx.com进行访问。设置www，可以使用www.xxx.com进行访问。&lt;br&gt;记录值都为 “192.30.252.153”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加CNAME文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开自己本地的博客目录，在source文件夹下创建名为CNAME的文本文件。打开，输入自己的域名，格式为“xxx.com”，保存后使用&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;部署到github。&lt;/p&gt;
&lt;p&gt;至此，便可使用我们自己的域名进行访问了！&lt;/p&gt;
&lt;h2 id=&quot;图片存储&quot;&gt;&lt;a href=&quot;#图片存储&quot; class=&quot;headerlink&quot; title=&quot;图片存储&quot;&gt;&lt;/a&gt;图片存储&lt;/h2&gt;&lt;p&gt;可以使用&lt;a href=&quot;https://portal.qiniu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;七牛云存储&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Mac上好用的GIF图截屏工具&quot;&gt;&lt;a href=&quot;#Mac上好用的GIF图截屏工具&quot; class=&quot;headerlink&quot; title=&quot;Mac上好用的GIF图截屏工具&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cockos.com/licecap/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mac上好用的GIF图截屏工具&lt;/a&gt;&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;域名绑定&quot;&gt;&lt;a href=&quot;#域名绑定&quot; class=&quot;headerlink&quot; title=&quot;域名绑定&quot;&gt;&lt;/a&gt;域名绑定&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;域名解析&lt;br&gt;域名购买成功后，在解析设置中添加以下解析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;htt
    
    </summary>
    
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用GithubPages-Hexo搭建免费博客（二）</title>
    <link href="http://yoursite.com/2016/02/26/%E4%BD%BF%E7%94%A8GithubPages-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2016/02/26/使用GithubPages-Hexo搭建免费博客（二）/</id>
    <published>2016-02-26T08:37:14.000Z</published>
    <updated>2016-03-11T07:27:32.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/hexoThemes.png&quot; alt=&quot;Hexo主题&quot;&gt;&lt;/p&gt;
&lt;p&gt;上篇讲到Hexo的安装，本篇继续，先来说说Hexo安装后的文件结构与功能。&lt;/p&gt;
&lt;h2 id=&quot;HEXO博客配置&quot;&gt;&lt;a href=&quot;#HEXO博客配置&quot; class=&quot;headerlink&quot; title=&quot;HEXO博客配置&quot;&gt;&lt;/a&gt;HEXO博客配置&lt;/h2&gt;&lt;h4 id=&quot;1-Hexo设置&quot;&gt;&lt;a href=&quot;#1-Hexo设置&quot; class=&quot;headerlink&quot; title=&quot;1. Hexo设置&quot;&gt;&lt;/a&gt;1. Hexo设置&lt;/h4&gt;&lt;p&gt;打开根目录下的_config.yml文件&lt;/p&gt;
&lt;h5 id=&quot;1-1-站点配置&quot;&gt;&lt;a href=&quot;#1-1-站点配置&quot; class=&quot;headerlink&quot; title=&quot;1.1 站点配置&quot;&gt;&lt;/a&gt;1.1 站点配置&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 # Site&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 title: myblog   # 网站标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 subtitle:      # 网站子标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 description: 这是一个利用Hexo搭建的博客    # 网站描述&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5 author:  author   # 网站作者，也就是您的名字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6 language: zh-cn   # 网站使用的语言        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7 timezone:         # 网站时区。Hexo 预设使用您电脑的时区。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;1-2-网址配置&quot;&gt;&lt;a href=&quot;#1-2-网址配置&quot; class=&quot;headerlink&quot; title=&quot;1.2 网址配置&quot;&gt;&lt;/a&gt;1.2 网址配置&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 # URL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 url: http://xiaoxuetu.github.io         # 博客网址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 root: /                                 # 网站根目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 permalink: :year/:month/:day/:title/    # 文章的永久链接格式   :year/:month/:day/:title/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5 permalink_defaults:                     # 永久链接中各部分的默认值&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;注意！ 如果你的网站存放在子目录中，例如 &lt;a href=&quot;http://xiaoxuetu.github.io/blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://xiaoxuetu.github.io/blog&lt;/a&gt;, 则将url设为&lt;a href=&quot;http://xiaoxuetu.github.io/blog，&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://xiaoxuetu.github.io/blog，&lt;/a&gt; 并且把 root 设为/blog/。&lt;/em&gt;&lt;/p&gt;
&lt;h5 id=&quot;1-3-目录配置&quot;&gt;&lt;a href=&quot;#1-3-目录配置&quot; class=&quot;headerlink&quot; title=&quot;1.3 目录配置&quot;&gt;&lt;/a&gt;1.3 目录配置&lt;/h5&gt;&lt;p&gt;一般直接取默认值不用修改。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 # Directory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 source_dir: source         # 资源文件夹，这个文件夹用来存放内容，例如我们用markdown编写的博文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 public_dir: public         # 公共文件夹，这个文件夹用于存放生成的静态博客文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 tag_dir: tags              # 标签文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5 archive_dir: archives      # 归档文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6 category_dir: categories   # 分类文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7 code_dir: downloads/code   # Include code 文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8 i18n_dir: :lang            # 国际化（i18n）文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9 skip_render:               # 跳过指定文件的渲染，您可使用 glob 来配置路径。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;1-4-文章配置&quot;&gt;&lt;a href=&quot;#1-4-文章配置&quot; class=&quot;headerlink&quot; title=&quot;1.4 文章配置&quot;&gt;&lt;/a&gt;1.4 文章配置&lt;/h5&gt;&lt;p&gt;一般直接取默认值不用修改。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 # Writing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 2 new_post_name: :title.md    # 新文章的文件名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 3 default_layout: post        # 预设布局&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 4 titlecase: false            # 把标题转换为 titlecase（titlecase指的是将每个单词首字母转换成大写）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 5 external_link: true         # 在新标签中打开链接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 6 filename_case: 0            # 把文件名称转换为 (1) 小写或 (2) 大写, 0表示不变&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 7 render_drafts: false        # 显示草稿&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 8 post_asset_folder: false    # 启动 Asset 文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 9 relative_link: false        # 把链接改为与根目录的相对位址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10 future: true                # 显示未来的文章&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11 highlight:                  # 代码块的设置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12   enable: true              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13   line_number: true         # 是否显示行号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14   auto_detect: true         # 是否自动监测&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15   tab_replace:              # 将 tab 替换成其他字符串&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;1-5-分类和标签配置&quot;&gt;&lt;a href=&quot;#1-5-分类和标签配置&quot; class=&quot;headerlink&quot; title=&quot;1.5 分类和标签配置&quot;&gt;&lt;/a&gt;1.5 分类和标签配置&lt;/h5&gt;&lt;p&gt;一般直接取默认值不用修改。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 # Category &amp;amp; Tag&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 default_category: uncategorized    # 默认分类, uncategorized表示未分类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 category_map:                      # 分类别名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 tag_map:                           # 标签别名&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;1-6-日期-以及-时间格式-配置&quot;&gt;&lt;a href=&quot;#1-6-日期-以及-时间格式-配置&quot; class=&quot;headerlink&quot; title=&quot;1.6 日期 以及 时间格式 配置&quot;&gt;&lt;/a&gt;1.6 日期 以及 时间格式 配置&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 date_format: YYYY-MM-DD           # 日期格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 time_format: HH:mm:ss             # 时间格式&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;1-7-分页配置&quot;&gt;&lt;a href=&quot;#1-7-分页配置&quot; class=&quot;headerlink&quot; title=&quot;1.7 分页配置&quot;&gt;&lt;/a&gt;1.7 分页配置&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 # Pagination&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 per_page: 10                      # 每页显示的文章量，如果设置值为0，则表示禁止分野&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 pagination_dir: page              # 分页目录&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;1-8-主题配置&quot;&gt;&lt;a href=&quot;#1-8-主题配置&quot; class=&quot;headerlink&quot; title=&quot;1.8 主题配置&quot;&gt;&lt;/a&gt;1.8 主题配置&lt;/h5&gt;&lt;p&gt;从这里开始，都是属于Hexo拓展插件的配置了。以下代码，主要是主题配置。更详细的主题替换，看第二节&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 # Extensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 theme: landscape    # 主题设置，默认是 landscape&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;1-9-部署配置&quot;&gt;&lt;a href=&quot;#1-9-部署配置&quot; class=&quot;headerlink&quot; title=&quot;1.9 部署配置&quot;&gt;&lt;/a&gt;1.9 部署配置&lt;/h5&gt;&lt;p&gt;这里主要用于将博客部署到github上，详细教程在后面。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 # Deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3   type:     # 设置发布类型，如git，rsync&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h4 id=&quot;主题设置&quot;&gt;&lt;a href=&quot;#主题设置&quot; class=&quot;headerlink&quot; title=&quot;主题设置&quot;&gt;&lt;/a&gt;主题设置&lt;/h4&gt;&lt;p&gt;Hexo为我们提供了很多的主题供我们选择，网页在&lt;a href=&quot;http://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt; 我们可以自由选择自己喜欢的主题来进行设置。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Themes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github主题列表地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;修改方法，就是将相应的主题clone到博客文件夹下的themes文件夹下，然后将上面1.8中的主题名字设置为相应的修改的名字。&lt;br&gt;我用的是这个：&lt;a href=&quot;https://github.com/ppoffice/hexo-theme-hueman&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-theme-hueman&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Extensions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Themes: https://hexo.io/themes/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;theme: hexo-theme-hueman&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;想要看到修改后的效果，可以在终端中继续执行以下命令。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo clean    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上命令完成后，可以执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo s 等同于 hexo server , s 其实就是 server的缩写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;执行成功后，控制台将会输出&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用浏览器打开此站点，就可以看到我们用Hexo生成的网页。&lt;/p&gt;
&lt;h5 id=&quot;新建博文&quot;&gt;&lt;a href=&quot;#新建博文&quot; class=&quot;headerlink&quot; title=&quot;新建博文&quot;&gt;&lt;/a&gt;新建博文&lt;/h5&gt;&lt;p&gt;cd到博客文件的根目录下，使用以下命令，新建博客&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new &amp;quot;title&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;格式是： hexo new ｛文章名｝&lt;br&gt;命令执行成功后，你就会发现在 source/_posts 目录下多了一个文件 title.md 。&lt;/p&gt;
&lt;p&gt;在文件夹下使用之前我们下载的markdown编辑器，打开这个文件，会看到以下内容&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;title: title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;date: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tags:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;含义是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;title : 文章的标题&lt;/li&gt;
&lt;li&gt;date : 该文章的创建时间&lt;/li&gt;
&lt;li&gt;tags : 该文章的标记tag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;依据不同的主题，多标签的语法格式为&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tags: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - 标签1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - 标签2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tags: [标签1,标签2]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你可以添加你所需要的变量，如果觉得每次生成后更改很麻烦，可以在模板文件夹scaffolds下找到post.md文件，编辑它的Front-matter为你想要的变量参数，默认新建博文使用的post模板。&lt;/p&gt;
&lt;h5 id=&quot;创建自己制定模板&quot;&gt;&lt;a href=&quot;#创建自己制定模板&quot; class=&quot;headerlink&quot; title=&quot;创建自己制定模板&quot;&gt;&lt;/a&gt;创建自己制定模板&lt;/h5&gt;&lt;p&gt;如果你想使用其他模板，你可以使用下列命令来创建指定模板的博文：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo new scaffold &amp;quot;title&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;请确保使用的模板scaffold在scaffolds存在。&lt;/p&gt;
&lt;h5 id=&quot;文章摘要&quot;&gt;&lt;a href=&quot;#文章摘要&quot; class=&quot;headerlink&quot; title=&quot;文章摘要&quot;&gt;&lt;/a&gt;文章摘要&lt;/h5&gt;&lt;p&gt;这个功能很实用，可以让你在首页文章目录不必显示全部的文章内容，只显示指定摘要。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;以上是摘要&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;以下是全文&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;使用markdown编辑好博文后，就可以执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此命令主要用于部署网页的静态文件，每次修改后都应该首先执行此命令，来重新部署&lt;/p&gt;
&lt;p&gt;然后继续执行“hexo s”启动服务。&lt;/p&gt;
&lt;p&gt;至此，Hexo的网页部署全部完成，之后就是部署到github上了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;部署到github&quot;&gt;&lt;a href=&quot;#部署到github&quot; class=&quot;headerlink&quot; title=&quot;部署到github&quot;&gt;&lt;/a&gt;部署到github&lt;/h2&gt;&lt;h5 id=&quot;1-注册账号&quot;&gt;&lt;a href=&quot;#1-注册账号&quot; class=&quot;headerlink&quot; title=&quot;1.注册账号&quot;&gt;&lt;/a&gt;1.注册账号&lt;/h5&gt;&lt;p&gt;如果有github账号的，可以忽略，没有请移步&lt;a href=&quot;www.github.com&quot;&gt;github&lt;/a&gt;注册账号&lt;/p&gt;
&lt;h5 id=&quot;2-创建与你的github用户名对应的仓库&quot;&gt;&lt;a href=&quot;#2-创建与你的github用户名对应的仓库&quot; class=&quot;headerlink&quot; title=&quot;2.创建与你的github用户名对应的仓库&quot;&gt;&lt;/a&gt;2.创建与你的github用户名对应的仓库&lt;/h5&gt;&lt;p&gt;仓库名字必须为“username.github.io”， 其中“username”为你的用户名&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-02%20%E4%B8%8B%E5%8D%8810.38.37.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击右上角的加号，创建new repository，然后输入“username.github.io”，点击创建。&lt;/p&gt;
&lt;h5 id=&quot;3-创建Github-Pages&quot;&gt;&lt;a href=&quot;#3-创建Github-Pages&quot; class=&quot;headerlink&quot; title=&quot;3.创建Github Pages&quot;&gt;&lt;/a&gt;3.创建Github Pages&lt;/h5&gt;&lt;p&gt;repository创建完成后进入以下界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-02%20%E4%B8%8B%E5%8D%8810.43.20.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击最右边的Settings&lt;/p&gt;
&lt;p&gt;进入后找到创建Github Pages的地方&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-03-02%20%E4%B8%8B%E5%8D%8810.45.28.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击 Launch automatic page generator&lt;br&gt;最后生成主页：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/github_pages_themes.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;之后我们就可以直接访问“username.github.io”，去访问我们的博客了。&lt;/p&gt;
&lt;h5 id=&quot;4-配置git&quot;&gt;&lt;a href=&quot;#4-配置git&quot; class=&quot;headerlink&quot; title=&quot;4.配置git&quot;&gt;&lt;/a&gt;4.配置git&lt;/h5&gt;&lt;p&gt;由于mac自带git，所以直接打开终端进行设置&lt;/p&gt;
&lt;p&gt;设置用户名密码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &amp;quot;你的github邮箱&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &amp;quot;你的github用户名&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成密钥&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -C &amp;quot;你的邮箱&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;回车之后，打开Finder,前往文件夹[~/.ssh]中会看到生成的两个文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;id_rsa    id_rsa.pub&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中id_rsa是私钥，id_rsa.pub是龚玥&lt;/p&gt;
&lt;p&gt;然后执行以下命令，添加生成的key&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-add id_rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后将id_rsa.pub中的内容复制下来，在我们github的主页中，点击个人的账户，找到settings–&amp;gt;SSH keys，将我们复制的内容，添加在这里。title随便取个名字就好。&lt;/p&gt;
&lt;p&gt;添加成功之后，可以在终端测试&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;点击回车后输出内容中，最后一句话为&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;You&amp;apos;ve successfully authenticated, but github does not provide shell access.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，验证成功。&lt;/p&gt;
&lt;h5 id=&quot;5-最后一步，将我们用Hexo生成的网页部署到github&quot;&gt;&lt;a href=&quot;#5-最后一步，将我们用Hexo生成的网页部署到github&quot; class=&quot;headerlink&quot; title=&quot;5.最后一步，将我们用Hexo生成的网页部署到github&quot;&gt;&lt;/a&gt;5.最后一步，将我们用Hexo生成的网页部署到github&lt;/h5&gt;&lt;p&gt;在我们的博客根目录下，打开站点配置文件&lt;strong&gt;_config.yml&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deploy: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: https://github.com/username/username.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中“username”为你github的用户名。&lt;/p&gt;
&lt;p&gt;修改完保存后，就可以打开终端，cd到博客根目录，执行&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo generate #生成静态网页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hexo deploy #部署到github&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之后输出以下信息&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;INFO Deploy done: git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;说明我们的博客已经部署成功，github pages可能会存在延时，过几分钟后，就可以通过username.github.io去访问我们的博客了！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;本篇主要讲述了使用Hexo进行博客的搭建与配置，以及如何部署到github上，至此我们所有创建博客的工作已经完成。之后便是自己博客的编写与经营了，一些更深入的配置移步&lt;a href=&quot;http://icehulu.com/2016/03/02/使用GithubPages-Hexo搭建免费博客（三）/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;第三篇&lt;/a&gt;吧&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/hexoThemes.png&quot; alt=&quot;Hexo主题&quot;&gt;&lt;/p&gt;
&lt;p&gt;上篇讲到Hexo的安装，本篇继续，先来说说Hexo安装后的文件结构与功能。&lt;/p&gt;
&lt;h2 id=&quot;HE
    
    </summary>
    
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用GithubPages-Hexo搭建免费博客_Mac（一）</title>
    <link href="http://yoursite.com/2016/02/25/%E4%BD%BF%E7%94%A8GithubPages-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2016/02/25/使用GithubPages-Hexo搭建免费博客（一）/</id>
    <published>2016-02-25T07:53:51.000Z</published>
    <updated>2016-03-11T07:27:21.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/A5FBB7EA-1FC0-45DD-ACC5-FB49737D9237.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;关于MarkDown&quot;&gt;&lt;a href=&quot;#关于MarkDown&quot; class=&quot;headerlink&quot; title=&quot;关于MarkDown&quot;&gt;&lt;/a&gt;关于MarkDown&lt;/h3&gt;&lt;p&gt;Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。&lt;/p&gt;
&lt;p&gt;其详细的介绍，可以看下&lt;a href=&quot;http://wowubuntu.com/markdown/#list&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown 语法说明 (简体中文版)&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;专注你的文字内容，排版样式也只是需要键盘即可搞定&lt;/li&gt;
&lt;li&gt;纯文本，兼容所有的文本编辑器与文字处理软件&lt;/li&gt;
&lt;li&gt;可读，直观，简介，学习成本低&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;#####&lt;a href=&quot;https://www.zybuluo.com/mdeditor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown使用示例&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;书写工具&quot;&gt;&lt;a href=&quot;#书写工具&quot; class=&quot;headerlink&quot; title=&quot;书写工具&quot;&gt;&lt;/a&gt;书写工具&lt;/h5&gt;&lt;p&gt;Mac下有两款优秀的 Markdown 编辑器，&lt;a href=&quot;http://25.io/mou/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mou&lt;/a&gt;和&lt;a href=&quot;http://macdown.uranusjr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MacDown&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://25.io/mou/Mou_128.png&quot; alt=&quot;Mou icon&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://macdown.uranusjr.com/static/base/img/logo-160.png&quot; alt=&quot;MacDown logo&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;关于其优缺点，可以移步这里-至于选择哪款，看个人喜好。&quot;&gt;&lt;a href=&quot;#关于其优缺点，可以移步这里-至于选择哪款，看个人喜好。&quot; class=&quot;headerlink&quot; title=&quot;关于其优缺点，可以移步这里,至于选择哪款，看个人喜好。&quot;&gt;&lt;/a&gt;关于其优缺点，可以移步&lt;a href=&quot;http://www.jianshu.com/p/6c157af09e84&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;,至于选择哪款，看个人喜好。&lt;/h2&gt;&lt;h3 id=&quot;关于Hexo&quot;&gt;&lt;a href=&quot;#关于Hexo&quot; class=&quot;headerlink&quot; title=&quot;关于Hexo&quot;&gt;&lt;/a&gt;关于Hexo&lt;/h3&gt;&lt;p&gt;Hexo是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;br&gt;&lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo官网&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;关于GithubPages&quot;&gt;&lt;a href=&quot;#关于GithubPages&quot; class=&quot;headerlink&quot; title=&quot;关于GithubPages&quot;&gt;&lt;/a&gt;关于GithubPages&lt;/h3&gt;&lt;p&gt;在Github里面，每一个项目都拥有它的一个主页，列出项目的源文件，但是对于新手来说，看到那么多的源代码，只会让人感到头晕脑胀，无从下手，他更希望的是，该项目有一个简明易懂的页面，告诉他每一步要怎么去做。&lt;/p&gt;
&lt;p&gt;因此，Github就设计了Github Pages这个功能，允许用户自定义项目首页，用来替代默认的源码列表。所以，Github Pages可以被认为是用户编写的、托管在github上的静态网页。&lt;/p&gt;
&lt;p&gt;通过上面的介绍，大家对Hexo和Github已经有了大概的了解。&lt;br&gt;我们的方式就是，利用Markdown进行博客的编写，通过Hexo这个框架解析生成靓丽的静态页面，然后部署到Github上供大家浏览。&lt;/p&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;硬件&lt;br&gt;此版本为Mac版👽&lt;/li&gt;
&lt;li&gt;软件&lt;ol&gt;
&lt;li&gt;node.js&lt;/li&gt;
&lt;li&gt;npm&lt;/li&gt;
&lt;li&gt;hexo&lt;/li&gt;
&lt;li&gt;github账号&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;安装node-js与npm&quot;&gt;&lt;a href=&quot;#安装node-js与npm&quot; class=&quot;headerlink&quot; title=&quot;安装node.js与npm&quot;&gt;&lt;/a&gt;安装node.js与npm&lt;/h3&gt;&lt;p&gt;下载node.js 有多种方法：使用 &lt;a href=&quot;http://brew.sh/index_zh-cn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Homebrew&lt;/a&gt; 下载 或者直接下载安装包。 建议 node.js 直接下载 安装包，因为使用 brew 有可能失败，会被墙掉。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node.js下载地址&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-02-26%20%E4%B8%8B%E5%8D%883.37.18.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;node.js 下载完成后 安装到电脑上就可以了。安装成功后显示出来安装路径，可以看到 安装node.js 的时候 npm 也安装了。&lt;/p&gt;
&lt;p&gt;检测安装是否成功 终端输入 -v , 成功则显示版本号&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ node -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;v4.3.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2.14.12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;安装&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;文档里给出了详细的安装方法，只需要按其一步步来就好&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;-v表示全局安装，所以需要使用管理员身份&lt;/p&gt;
&lt;p&gt;安装成功，使用hexo 命令的时候，可能会出现以下错误&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;apos;./build/Release/DTraceProviderBindings&amp;apos;] code: &amp;apos;MODULE_NOT_FOUND&amp;apos; &amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;apos;./build/default/DTraceProviderBindings&amp;apos;] code: &amp;apos;MODULE_NOT_FOUND&amp;apos; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; [Error: Cannot find module &amp;apos;./build/Debug/DTraceProviderBindings&amp;apos;] code: &amp;apos;MODULE_NOT_FOUND&amp;apos; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;据说是由于GFW的问题，导致安装Hexo的时候少装了几个库。&lt;/p&gt;
&lt;p&gt;查询出的解决方法为，使用以下命令行重新安装&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo –no-optional&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然而于我而言，并没有什么卵用。这个错误也没有造成任何影响，所以忽略，Go on。&lt;br&gt;完成后，验证下是否安装成功&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Hexo的使用&quot;&gt;&lt;a href=&quot;#Hexo的使用&quot; class=&quot;headerlink&quot; title=&quot;Hexo的使用&quot;&gt;&lt;/a&gt;Hexo的使用&lt;/h4&gt;&lt;h5 id=&quot;1-创建存放博客的文件夹&quot;&gt;&lt;a href=&quot;#1-创建存放博客的文件夹&quot; class=&quot;headerlink&quot; title=&quot;1. 创建存放博客的文件夹&quot;&gt;&lt;/a&gt;1. 创建存放博客的文件夹&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mkdir myblog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;2-执行以下命令，Hexo会在目标文件夹建立博客所需要的文件&quot;&gt;&lt;a href=&quot;#2-执行以下命令，Hexo会在目标文件夹建立博客所需要的文件&quot; class=&quot;headerlink&quot; title=&quot;2. 执行以下命令，Hexo会在目标文件夹建立博客所需要的文件&quot;&gt;&lt;/a&gt;2. 执行以下命令，Hexo会在目标文件夹建立博客所需要的文件&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 输出以下信息&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;INFO  Cloning hexo-starter to ~/Documents/mytest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Cloning into &amp;apos;/Users/Quncao/Documents/mytest&amp;apos;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功之后文件夹的样子&lt;br&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202016-02-26%20%E4%B8%8B%E5%8D%884.13.00.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;_config.yml : Hexo和站点的配置文件，里面可以设置博客的名字、标题、作者、链接格式等相关项&lt;/li&gt;
&lt;li&gt;scaffolds : 脚手架，用于存放我们创建文章时的模版&lt;/li&gt;
&lt;li&gt;source : 用于存放我们用markdown编写的博文原文件、其他静态资源文件&lt;/li&gt;
&lt;li&gt;themes : 用于存放主题，里面有我们博客的默认主题landscape&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;3-执行以下命令，进行依赖包的安装&quot;&gt;&lt;a href=&quot;#3-执行以下命令，进行依赖包的安装&quot; class=&quot;headerlink&quot; title=&quot;3. 执行以下命令，进行依赖包的安装&quot;&gt;&lt;/a&gt;3. 执行以下命令，进行依赖包的安装&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;node_modules: 关联保存了将会使用到的hexo依赖包&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;4-安装相关插件&quot;&gt;&lt;a href=&quot;#4-安装相关插件&quot; class=&quot;headerlink&quot; title=&quot;4. 安装相关插件&quot;&gt;&lt;/a&gt;4. 安装相关插件&lt;/h5&gt;&lt;p&gt;插件会安装至node_modules文件夹下，如果已经安装好的可以直接忽略&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装便于自动部署到Github上的插件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装atom生成插件，便于感兴趣的小伙伴们订阅&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-feed --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装博客首页生成插件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-index --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装归档生成插件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-archive --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装tag生成插件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-tag --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装category生成插件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-category --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装Sitemap文件生成插件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-sitemap --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装百度Sitemap文件生成插件，因为普通的Sitemap格式不符合百度的要求&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install hexo-generator-baidu-sitemap --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;未完待续，继续请移步&lt;a href=&quot;http://icehulu.com/2016/02/26/%E4%BD%BF%E7%94%A8GithubPages-Hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xr7f9.com1.z0.glb.clouddn.com/A5FBB7EA-1FC0-45DD-ACC5-FB49737D9237.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;关于MarkDown&quot;&gt;&lt;a href=&quot;#关于Mar
    
    </summary>
    
    
      <category term="tags" scheme="http://yoursite.com/tags/tags/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
